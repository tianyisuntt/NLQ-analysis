SQL,hyp_correct,NL_query,index,GT,DB,tables
SELECT COUNT( * ) FROM medicine WHERE medicine.fda_approved = 'no',False,How many medicines have the FDA approval status 'No' ?,45,SELECT count(*) FROM medicine WHERE FDA_approved  =  'No',medicine_enzyme_interaction,['medicine']
SELECT COUNT( * ) FROM medicine WHERE medicine.fda_approved = 'no',False,How many medicines were not approved by the FDA?,46,SELECT count(*) FROM medicine WHERE FDA_approved  =  'No',medicine_enzyme_interaction,['medicine']
SELECT DISTINCT products.product_color FROM products,False,Show all product sizes.,88,SELECT DISTINCT product_size FROM Products,customers_and_invoices,['products']
SELECT DISTINCT products.product_color FROM products,False,What are the different product sizes?,89,SELECT DISTINCT product_size FROM Products,customers_and_invoices,['products']
SELECT * FROM endowment WHERE endowment.amount > 8.5 GROUP BY endowment.school_id HAVING COUNT( * ) > 1,False,Find the number of schools that have more than one donator whose donation amount is less than 8.5.,107,SELECT count(*) FROM (SELECT * FROM endowment WHERE amount  >  8.5 GROUP BY school_id HAVING count(*)  >  1),school_finance,['endowment']
SELECT song.song_name FROM song WHERE song.languages = 'English',False,Find the names of all English songs.,237,"SELECT song_name FROM song WHERE languages  =  ""english""",music_1,['song']
SELECT song.song_name FROM song WHERE song.languages = 'English',False,What are the names of all songs in English?,238,"SELECT song_name FROM song WHERE languages  =  ""english""",music_1,['song']
"SELECT COUNT( * ) FROM artist WHERE artist.country NOT IN (SELECT * FROM artist, artist WHERE artist.country = 'Bangladeshi artists')",False,How many Bangladeshi artists are listed?,242,"SELECT count(*) FROM artist WHERE country  =  ""Bangladesh""",music_1,['artist']
SELECT COUNT( * ) FROM college WHERE college.state = 'NY',False,How many parks are there in the state of NY?,245,SELECT count(*) FROM park WHERE state  =  'NY';,baseball_1,"['college', 'park']"
SELECT COUNT( * ) FROM college WHERE college.state = 'NY',False,Show me the number of parks the state of NY has.,246,SELECT count(*) FROM park WHERE state  =  'NY';,baseball_1,"['college', 'park']"
SELECT * FROM postseason JOIN team ON postseason.team_id_loser = team.team_id_br WHERE team.name = 'Boston Red Stockings' UNION SELECT * FROM postseason JOIN team ON postseason.team_id_loser = team.team_id_br WHERE team.name = 'Boston Red Stockings',False,How many times in total did the team Boston Red Stockings participate in postseason games?,248,SELECT count(*) FROM ( SELECT * FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_winner  =  T2.team_id_br WHERE T2.name  =  'Boston Red Stockings' UNION SELECT * FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_loser  =  T2.team_id_br WHERE T2.name  =  'Boston Red Stockings' );,baseball_1,"['postseason', 'team']"
SELECT COUNT( * ) FROM college WHERE college.city = 'Atlanta',False,How many parks are there in Atlanta city?,249,SELECT count(*) FROM park WHERE city = 'Atlanta';,baseball_1,"['college', 'park']"
SELECT COUNT( * ) FROM park WHERE college.city = 'Atlanta',False,How many parks does Atlanta city have?,250,SELECT count(*) FROM park WHERE city = 'Atlanta';,baseball_1,['park']
SELECT park.city FROM park GROUP BY park.city HAVING COUNT( * ) > 2,False,List the names of states that have more than 2 parks.,251,SELECT state FROM park GROUP BY state HAVING count(*)  >  2;,baseball_1,['park']
SELECT park.city FROM park GROUP BY park.city HAVING COUNT( * ) > 2,False,Which states have more than 2 parks?,252,SELECT state FROM park GROUP BY state HAVING count(*)  >  2;,baseball_1,['park']
SELECT COUNT( * ) FROM team_franchise WHERE team_franchise.active = 'y',False,"How many team franchises are active, with active value 'Y'?",253,SELECT count(*) FROM team_franchise WHERE active = 'Y';,baseball_1,['team_franchise']
SELECT COUNT( * ) FROM team_franchise WHERE team_franchise.active = 'y',False,"Find the number of team franchises that are active (have 'Y' as ""active"" information).",254,SELECT count(*) FROM team_franchise WHERE active = 'Y';,baseball_1,['team_franchise']
SELECT COUNT( DISTINCT broadcast.program_id ) FROM broadcast WHERE broadcast.time_of_day = 'night',False,find the number of different programs that are broadcast during night time.,270,SELECT count(DISTINCT program_id) FROM broadcast WHERE time_of_day  =  'Night',program_share,['broadcast']
SELECT DISTINCT room.blockcode FROM room WHERE room.unavailable = 1,False,What are the unique block codes that have available rooms?,284,SELECT DISTINCT blockcode FROM room WHERE unavailable  =  0,hospital_1,['room']
SELECT DISTINCT room.blockcode FROM room WHERE room.unavailable = 1,False,Tell me the distinct block codes where some rooms are available.,285,SELECT DISTINCT blockcode FROM room WHERE unavailable  =  0,hospital_1,['room']
SELECT COUNT( * ) FROM company WHERE company.headquarters = 'US',False,How many companies are headquartered in the US?,306,SELECT count(*) FROM company WHERE Headquarters  =  'USA',company_employee,['company']
SELECT COUNT( * ) FROM project_outcomes WHERE project_outcomes.outcome_code = 'patents',False,How many patents outcomes were listed for all the projects?,354,SELECT count(*) FROM Project_outcomes WHERE outcome_code  =  'Patent',tracking_grants_for_research,['project_outcomes']
SELECT COUNT( * ) FROM person WHERE person.gender = 'females',False,How many females does this network has?,361,SELECT count(*) FROM Person WHERE gender  =  'female',network_2,['person']
SELECT COUNT( * ) FROM person WHERE person.gender = 'females',False,How many females are in the network?,362,SELECT count(*) FROM Person WHERE gender  =  'female',network_2,['person']
SELECT tryout.cname FROM tryout WHERE tryout.ppos = 'goalie' INTERSECT SELECT tryout.cname FROM tryout WHERE tryout.ppos = 'mid',False,How many schools have some students playing in goalie and mid positions.,445,SELECT COUNT(*) FROM (SELECT cName FROM  tryout WHERE pPos  =  'goalie' INTERSECT SELECT cName FROM  tryout WHERE pPos  =  'mid'),soccer_2,['tryout']
SELECT tryout.cname FROM tryout WHERE tryout.ppos = 'goalie' INTERSECT SELECT tryout.cname FROM tryout WHERE tryout.ppos = 'mid',False,How many schools have students playing in goalie and mid-field positions?,446,SELECT COUNT(*) FROM (SELECT cName FROM  tryout WHERE pPos  =  'goalie' INTERSECT SELECT cName FROM  tryout WHERE pPos  =  'mid'),soccer_2,['tryout']
SELECT college.state FROM college JOIN tryout ON college.cname = tryout.cname WHERE tryout.ppos = 'mid' EXCEPT SELECT college.state FROM college JOIN tryout ON college.cname = tryout.cname WHERE tryout.ppos = 'goalie',False,How many states that have some college students playing in the mid position but not in the goalie position.,447,SELECT COUNT(*) FROM (SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'mid' EXCEPT SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'goalie'),soccer_2,"['college', 'tryout']"
"SELECT college.state FROM college, tryout WHERE college.state = (SELECT college.state , COUNT( * ) FROM college JOIN tryout ON college.cname = tryout.cname WHERE tryout.ppos = 'goalies')",False,What is the count of states with college students playing in the mid position but not as goalies?,448,SELECT COUNT(*) FROM (SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'mid' EXCEPT SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'goalie'),soccer_2,"['college', 'tryout']"
SELECT DISTINCT member.level FROM member,False,What are the different membership levels?,474,SELECT count(DISTINCT LEVEL) FROM member,shop_membership,['member']
SELECT dorm.dorm_name FROM dorm WHERE dorm.gender = 'f',False,Find the name of dorms only for female (F gender).,478,SELECT dorm_name FROM dorm WHERE gender  =  'F',dorm_1,['dorm']
SELECT dorm.dorm_name FROM dorm WHERE dorm.gender = 'f',False,What are the names of the all-female dorms?,479,SELECT dorm_name FROM dorm WHERE gender  =  'F',dorm_1,['dorm']
SELECT COUNT( DISTINCT has_amenity.amenid ) FROM has_amenity,False,Find the number of distinct amenities.,486,SELECT count(*) FROM dorm_amenity,dorm_1,"['has_amenity', 'dorm_amenity']"
SELECT COUNT( DISTINCT dorm_amenity.amenity_name ) FROM dorm JOIN has_amenity ON dorm.dormid = has_amenity.dormid JOIN dorm_amenity ON has_amenity.amenid = dorm_amenity.amenid,False,How many diffrent dorm amenities are there?,487,SELECT count(*) FROM dorm_amenity,dorm_1,"['has_amenity', 'dorm', 'dorm_amenity']"
"SELECT dorm.dormid , COUNT( * ) FROM dorm JOIN has_amenity ON dorm.dormid = has_amenity.dormid GROUP BY dorm.dormid",False,Find the number of dorms that have some amenity.,492,SELECT count(DISTINCT dormid) FROM has_amenity,dorm_1,"['has_amenity', 'dorm']"
SELECT COUNT( * ) FROM dorm JOIN has_amenity ON dorm.dormid = has_amenity.dormid,False,How many dorms have amenities?,493,SELECT count(DISTINCT dormid) FROM has_amenity,dorm_1,"['has_amenity', 'dorm']"
SELECT video_games.gname FROM video_games WHERE video_games.gtype = 'collectible cards',False,What are the names of all video games that are collectible cards?,513,"SELECT gname FROM Video_games WHERE gtype  =  ""Collectible card game""",game_1,['video_games']
SELECT COUNT( * ) FROM video_games WHERE video_games.gtype = 'Massively multiplayer online',False,Count the number of video games with Massively multiplayer online game type .,517,"SELECT count(*) FROM Video_games WHERE gtype  =  ""Massively multiplayer online game""",game_1,['video_games']
SELECT student.advisor FROM student,False,What are the advisors,525,SELECT advisor FROM Student GROUP BY advisor HAVING count(*)  >=  2,game_1,['student']
SELECT COUNT( * ) FROM sportsinfo,False,How many sports do we have?,526,SELECT count(DISTINCT sportname) FROM Sportsinfo,game_1,['sportsinfo']
SELECT COUNT( * ) FROM sportsinfo,False,How many students play sports?,528,SELECT count(DISTINCT StuID) FROM Sportsinfo,game_1,['sportsinfo']
SELECT sportsinfo.stuid FROM sportsinfo WHERE sportsinfo.onscholarship = 'y',False,List ids for all student who are on scholarship.,530,SELECT StuID FROM Sportsinfo WHERE onscholarship  =  'Y',game_1,['sportsinfo']
SELECT sportsinfo.stuid FROM sportsinfo WHERE sportsinfo.onscholarship = 'y',False,What are the ids for all sporty students who are on scholarship?,531,SELECT StuID FROM Sportsinfo WHERE onscholarship  =  'Y',game_1,['sportsinfo']
"SELECT COUNT( * ) , plays_games.stuid FROM plays_games",False,How many games are played for all students?,532,SELECT sum(gamesplayed) FROM Sportsinfo,game_1,"['sportsinfo', 'plays_games']"
SELECT COUNT( DISTINCT addresses.town_city ) FROM addresses WHERE addresses.state_province_county = 'Colorado',False,"How many cities are there in state ""Colorado""?",549,"SELECT count(*) FROM addresses WHERE state_province_county  =  ""Colorado""",e_government,['addresses']
SELECT individuals.individual_last_name FROM individuals JOIN organization_contact_individuals ON individuals.individual_id = organization_contact_individuals.individual_id,False,Find the last name of the individuals that have been contact individuals of an organization.,555,SELECT DISTINCT t1.individual_last_name FROM individuals AS t1 JOIN organization_contact_individuals AS t2 ON t1.individual_id  =  t2.individual_id,e_government,"['organization_contact_individuals', 'individuals']"
SELECT individuals.individual_last_name FROM individuals JOIN organization_contact_individuals ON individuals.individual_id = organization_contact_individuals.individual_id,False,What are the last names of individuals who have been contact individuals for an organization?,556,SELECT DISTINCT t1.individual_last_name FROM individuals AS t1 JOIN organization_contact_individuals AS t2 ON t1.individual_id  =  t2.individual_id,e_government,"['organization_contact_individuals', 'individuals']"
SELECT COUNT( DISTINCT ref_budget_codes.budget_type_code ) FROM ref_budget_codes,False,How many budget types do we have?,575,SELECT count(*) FROM Ref_budget_codes,cre_Docs_and_Epenses,['ref_budget_codes']
SELECT COUNT( * ) FROM train_station,False,How many train stations are there?,583,SELECT count(*) FROM station,train_station,"['train_station', 'station']"
SELECT station.location FROM station JOIN train_station ON station.station_id = train_station.station_id,False,What are all locations of train stations?,584,SELECT DISTINCT LOCATION FROM station,train_station,"['train_station', 'station']"
SELECT COUNT( * ) FROM addresses JOIN staff ON addresses.address_id = staff.staff_address_id WHERE addresses.state_province_county = 'Georgia',False,How many staff live in state Georgia?,597,"SELECT count(*) FROM Addresses WHERE state_province_county = ""Georgia"";",driving_school,"['addresses', 'staff']"
SELECT COUNT( * ) FROM staff JOIN addresses ON staff.staff_address_id = addresses.address_id WHERE addresses.state_province_county = 'Georgia',False,How many employees live in Georgia?,598,"SELECT count(*) FROM Addresses WHERE state_province_county = ""Georgia"";",driving_school,"['addresses', 'staff']"
SELECT COUNT( * ) FROM lessons WHERE lessons.lesson_status_code = 'cancelled',False,How many lessons were in cancelled state?,603,"SELECT count(*) FROM Lessons WHERE lesson_status_code = ""Cancelled"";",driving_school,['lessons']
SELECT COUNT( * ) FROM lessons WHERE lessons.lesson_status_code = 'cancelled',False,How many lessons have been cancelled?,604,"SELECT count(*) FROM Lessons WHERE lesson_status_code = ""Cancelled"";",driving_school,['lessons']
SELECT airports.name FROM airports WHERE airports.elevation BETWEEN 50 and 50,False,Find the name of airports whose altitude is between -50 and 50.,613,SELECT name FROM airports WHERE elevation BETWEEN -50 AND 50,flight_4,['airports']
SELECT airports.name FROM airports WHERE airports.elevation BETWEEN 50 and 50,False,What are the names of all airports whose elevation is between -50 and 50?,614,SELECT name FROM airports WHERE elevation BETWEEN -50 AND 50,flight_4,['airports']
SELECT COUNT( DISTINCT airports.city ) FROM airports HAVING COUNT( * ) > 3,False,How many cities are there that have more than 3 airports?,617,SELECT count(*) FROM (SELECT city FROM airports GROUP BY city HAVING count(*)  >  3),flight_4,['airports']
"SELECT airports.city , COUNT( * ) FROM airports GROUP BY airports.city HAVING COUNT( * ) > 3",False,What is the count of cities with more than 3 airports?,618,SELECT count(*) FROM (SELECT city FROM airports GROUP BY city HAVING count(*)  >  3),flight_4,['airports']
SELECT shipments.shipment_id FROM shipments WHERE shipments.shipment_tracking_number = '3452',False,"Find the id of the order whose shipment tracking number is ""3452"".",621,"SELECT order_id FROM shipments WHERE shipment_tracking_number = ""3452""",tracking_orders,['shipments']
SELECT order_items.order_id FROM order_items WHERE order_items.product_id = 11,False,Find the ids of all the order items whose product id is 11.,623,SELECT order_item_id FROM order_items WHERE product_id = 11,tracking_orders,['order_items']
SELECT cars_data.year FROM cars_data WHERE cars_data.weight BETWEEN 3000 and 4000,False,In which years cars were produced weighing no less than 3000 and no more than 4000 ?,649,select distinct year from cars_data where weight between 3000 and 4000;,car_1,['cars_data']
SELECT cartoon.directed_by FROM cartoon WHERE cartoon.directed_by = 'Ben Jones',False,"List all cartoon directed by ""Ben Jones"".",665,"SELECT Title FROM Cartoon WHERE Directed_by = ""Ben Jones"";",tvshow,['cartoon']
SELECT tv_channel.content FROM tv_channel JOIN tv_series ON tv_channel.id = tv_series.channel WHERE tv_channel.series_name = 'Sky Radio',False,What is the content of the series Sky Radio?,670,"SELECT Content FROM TV_Channel WHERE series_name = ""Sky Radio"";",tvshow,"['tv_series', 'tv_channel']"
SELECT tv_channel.id FROM tv_channel GROUP BY tv_channel.id HAVING COUNT( * ) > 2,False,find id of the tv channels that from the countries where have more than two tv channels.,681,SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2,tvshow,['tv_channel']
SELECT tv_channel.id FROM tv_channel JOIN tv_series ON tv_channel.id = tv_series.channel GROUP BY tv_channel.id HAVING COUNT( * ) > 2,False,What are the ids of all tv channels that have more than 2 TV channels?,682,SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2,tvshow,"['tv_series', 'tv_channel']"
"SELECT department.name , department.num_employees FROM department JOIN management ON department.department_id = management.department_id WHERE management.temporary_acting = 'yes'",False,Show the name and number of employees for the departments managed by heads whose temporary acting value is 'Yes'?,686,"SELECT T1.name ,  T1.num_employees FROM department AS T1 JOIN management AS T2 ON T1.department_id  =  T2.department_id WHERE T2.temporary_acting  =  'Yes'",department_management,"['management', 'department']"
SELECT DISTINCT head.age FROM head JOIN management ON head.head_id = management.head_id WHERE management.temporary_acting = 'yes',False,What are the distinct ages of the heads who are acting?,687,SELECT DISTINCT T1.age FROM management AS T2 JOIN head AS T1 ON T1.head_id  =  T2.head_id WHERE T2.temporary_acting  =  'Yes',department_management,"['management', 'head']"
SELECT catalog_contents.catalog_entry_name FROM catalog_contents WHERE catalog_contents.product_stock_number LIKE '%2%',False,"Find the names of all the products whose stock number starts with ""2"".",704,"SELECT catalog_entry_name FROM catalog_contents WHERE product_stock_number LIKE ""2%""",product_catalog,['catalog_contents']
SELECT catalog_contents.catalog_entry_name FROM catalog_contents WHERE catalog_contents.product_stock_number LIKE '%2%',False,"Which catalog contents have a product stock number that starts from ""2""? Show the catalog entry names.",705,"SELECT catalog_entry_name FROM catalog_contents WHERE product_stock_number LIKE ""2%""",product_catalog,['catalog_contents']
SELECT COUNT( * ) FROM genre JOIN track ON genre.genreid = track.genreid WHERE genre.name = 'rock',False,How many tracks belong to rock genre?,730,"SELECT COUNT(*) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId  =  T2.GenreId WHERE T1.Name  =  ""Rock""",chinook_1,"['genre', 'track']"
SELECT COUNT( * ) FROM genre JOIN track ON genre.genreid = track.genreid WHERE genre.name = 'rock',False,Count the number of tracks that are part of the rock genre.,731,"SELECT COUNT(*) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId  =  T2.GenreId WHERE T1.Name  =  ""Rock""",chinook_1,"['genre', 'track']"
SELECT AVG( track.unitprice ) FROM genre JOIN track ON genre.genreid = track.genreid WHERE genre.name = 'jazz',False,Find the average unit price of jazz tracks.,733,"SELECT AVG(UnitPrice) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId  =  T2.GenreId WHERE T1.Name  =  ""Jazz""",chinook_1,"['genre', 'track']"
SELECT AVG( track.unitprice ) FROM genre JOIN track ON genre.genreid = track.genreid WHERE genre.name = 'rock',False,What is the average unit price of rock tracks?,754,"SELECT AVG(T2.UnitPrice) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId  =  T2.GenreId WHERE T1.Name  =  ""Rock""",chinook_1,"['genre', 'track']"
"SELECT medicine.name , medicine.trade_name FROM medicine WHERE medicine.fda_approved = 'yes'",False,What are the names and trade names of the medicines which has 'Yes' value in the FDA record?,760,"SELECT name ,  trade_name FROM medicine WHERE FDA_approved  =  'Yes'",medicine_enzyme_interaction,['medicine']
"SELECT medicine.name , medicine.trade_name FROM medicine WHERE medicine.fda_approved = 'yes'",False,What are the names and trade names of the medcines that are FDA approved?,761,"SELECT name ,  trade_name FROM medicine WHERE FDA_approved  =  'Yes'",medicine_enzyme_interaction,['medicine']
"SELECT medicine.id , medicine.name FROM medicine_enzyme_interaction JOIN medicine ON medicine_enzyme_interaction.medicine_id = medicine.id HAVING COUNT( * ) >= 4",False,"For every medicine id, what are the names of the medicines that can interact with more than one enzyme?",763,"SELECT T1.id ,  T1.Name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id  =  T1.id GROUP BY T1.id HAVING count(*)  >=  2",medicine_enzyme_interaction,"['medicine_enzyme_interaction', 'medicine']"
"SELECT university.school , university.location FROM university WHERE university.affiliation = 'public'",False,List all public schools and their locations.,774,"SELECT school ,  LOCATION FROM university WHERE affiliation  =  'Public'",university_basketball,['university']
"SELECT university.school , university.location FROM university WHERE university.affiliation = 'public'",False,What are the public schools and what are their locations?,775,"SELECT school ,  LOCATION FROM university WHERE affiliation  =  'Public'",university_basketball,['university']
SELECT university.school FROM university WHERE university.founded > 1850 OR university.affiliation = 'public',False,Find the schools that were either founded after 1850 or public.,788,SELECT school FROM university WHERE founded  >  1850 OR affiliation  =  'Public',university_basketball,['university']
SELECT university.school FROM university WHERE university.founded > 1850 OR university.affiliation = 'public',False,What are the schools that were either founded before 1850 or are public?,789,SELECT school FROM university WHERE founded  >  1850 OR affiliation  =  'Public',university_basketball,['university']
"SELECT MAX( player.weight ) , MIN( player.height ) FROM player",False,What is the maximum and minimum height of all players?,798,"SELECT max(weight) ,  min(weight) FROM Player",soccer_1,['player']
SELECT DISTINCT customers.customer_details FROM policies JOIN customers ON policies.customer_id = customers.customer_id WHERE policies.policy_type_code = 'deputy',False,Find the names of the customers who have an deputy policy.,821,"SELECT DISTINCT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.policy_type_code  =  ""Deputy""",insurance_and_eClaims,"['policies', 'customers']"
"SELECT products.product_color , SUM( order_items.product_quantity ) FROM order_items JOIN products ON order_items.product_id = products.product_id GROUP BY products.product_color",False,"What are the different product names, and what is the sum of quantity ordered for each product?",862,"SELECT T2.product_name ,  sum(T1.product_quantity) FROM Order_items AS T1 JOIN Products AS T2 ON T1.product_id  =  T2.product_id GROUP BY T2.product_name",customers_and_invoices,"['products', 'order_items']"
SELECT SUM( checking.balance ) FROM accounts JOIN savings ON accounts.custid = savings.custid ORDER BY checking.balance ASC,False,Find the total checking and saving balance of all accounts sorted by the total balance in ascending order.,877,SELECT T1.balance + T2.balance FROM checking AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid ORDER BY T1.balance + T2.balance,small_bank_1,"['checking', 'savings', 'accounts']"
"SELECT SUM( checking.balance ) FROM checking ORDER BY checking.balance , savings.balance ASC",False,"What is the sum of checking and savings balances for all customers, ordered by the total balance?",878,SELECT T1.balance + T2.balance FROM checking AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid ORDER BY T1.balance + T2.balance,small_bank_1,"['checking', 'savings']"
"SELECT roles.role_description , COUNT( employees.employee_id ) FROM employees JOIN employees ON employees.role_code = employees.employee_id WHERE roles.role_description != roles.role_description GROUP BY employees.role_code",False,List roles that have more than one employee. List the role description and number of employees.,922,"SELECT Roles.role_description , count(Employees.employee_id) FROM ROLES JOIN Employees ON Employees.role_code = Roles.role_code GROUP BY Employees.role_code HAVING count(Employees.employee_id)  >  1;",cre_Doc_Control_Systems,"['employees', 'roles']"
SELECT documents.document_id FROM documents WHERE documents.document_status_code = 'done' AND documents.document_type_code = 'paper',False,List the document ids for any documents with the status code done and the type code paper.,924,"SELECT document_id FROM Documents WHERE document_status_code = ""done"" AND document_type_code = ""Paper"";",cre_Doc_Control_Systems,['documents']
"SELECT AVG( people.height ) , AVG( people.weight ) FROM people WHERE people.sex = 'm'",False,What are the average height and weight across males (sex is M)?,966,"SELECT avg(height) ,  avg(weight) FROM people WHERE sex  =  'M'",candidate_poll,['people']
"SELECT party.lieutenant_governor , party.comptroller FROM party WHERE party.party = 'democratic'",False,Show the lieutenant governor and comptroller from the democratic party.,985,"SELECT Lieutenant_Governor ,  Comptroller FROM party WHERE Party  =  ""Democratic""",election,['party']
"SELECT party.lieutenant_governor , party.comptroller FROM party WHERE party.party = 'democratic'",False,Who are the lieutenant governor and comptroller from the democratic party?,986,"SELECT Lieutenant_Governor ,  Comptroller FROM party WHERE Party  =  ""Democratic""",election,['party']
"SELECT bank.bname , bank.city FROM bank JOIN loan ON bank.branch_id = loan.branch_id WHERE loan.loan_type = 'business'",False,Find the city and name of bank branches that provide business loans.,1047,"SELECT T1.bname ,  T1.city FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id  =  T2.branch_id WHERE T2.loan_type  =  'Business'",loan_1,"['loan', 'bank']"
"SELECT bank.bname , bank.city FROM bank JOIN loan ON bank.branch_id = loan.branch_id WHERE loan.loan_type = 'business'",False,What are the names and cities of bank branches that offer loans for business?,1048,"SELECT T1.bname ,  T1.city FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id  =  T2.branch_id WHERE T2.loan_type  =  'Business'",loan_1,"['loan', 'bank']"
"SELECT train.time , train.train_number FROM train WHERE train.destination = 'Chennai,' ORDER BY train.time ASC",False,"Give me the times and numbers of all trains that go to Chennai, ordered by time.",1066,"SELECT TIME ,  train_number FROM train WHERE destination  =  'Chennai' ORDER BY TIME",station_weather,['train']
SELECT COUNT( * ) FROM files WHERE files.duration = '4',False,How many songs have 4 minute duration?,1098,"SELECT count(*) FROM files WHERE duration LIKE ""4:%""",music_1,['files']
SELECT files.duration FROM files WHERE files.duration NOT IN (SELECT AVG( files.duration ) FROM files ORDER BY files.duration DESC LIMIT 4) GROUP BY files.duration,False,What is the count of the songs that last approximately 4 minutes?,1099,"SELECT count(*) FROM files WHERE duration LIKE ""4:%""",music_1,['files']
SELECT AVG( song.rating ) FROM artist JOIN song ON artist.artist_name = song.artist_name WHERE artist.gender = 'female',False,What is the average rating of songs produced by female artists?,1100,"SELECT avg(T2.rating) FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T1.gender  =  ""Female""",music_1,"['song', 'artist']"
SELECT AVG( song.rating ) FROM artist JOIN song ON artist.artist_name = song.artist_name WHERE artist.gender = 'female',False,"How many songs, on average, are sung by a female artist?",1101,"SELECT avg(T2.rating) FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T1.gender  =  ""Female""",music_1,"['song', 'artist']"
SELECT artist.country FROM artist JOIN song ON artist.artist_name = song.artist_name WHERE artist.gender = 'female' AND song.languages = 'Bangla',False,What is the country of origin of the artist who is female and produced a song in Bangla?,1102,"SELECT T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T1.gender  =  ""Female"" AND T2.languages  =  ""bangla""",music_1,"['song', 'artist']"
SELECT artist.country FROM artist JOIN song ON artist.artist_name = song.artist_name WHERE artist.gender = 'female' AND song.languages = 'Bangla',False,What countries are the female artists who sung in the language Bangla from?,1103,"SELECT T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T1.gender  =  ""Female"" AND T2.languages  =  ""bangla""",music_1,"['song', 'artist']"
SELECT artist.artist_name FROM artist WHERE artist.gender = 'male' AND artist.gender = 'male',False,What are the names of all male British artists?,1115,"SELECT artist_name FROM artist WHERE country  =  ""UK"" AND gender  =  ""Male""",music_1,['artist']
SELECT song.song_name FROM song WHERE song.genre_is = 'modern' OR song.languages = 'English',False,Find the names of songs whose genre is modern or language is English.,1116,"SELECT song_name FROM song WHERE genre_is  =  ""modern"" OR languages  =  ""english""",music_1,['song']
SELECT song.song_name FROM song WHERE song.genre_is = 'modern' OR song.languages = 'English',False,What are the names of the songs that are modern or sung in English?,1117,"SELECT song_name FROM song WHERE genre_is  =  ""modern"" OR languages  =  ""english""",music_1,['song']
"SELECT AVG( song.rating ) , AVG( song.resolution ) FROM song WHERE song.languages = 'Bangla'",False,What are the average rating and resolution of songs that are in Bangla?,1118,"SELECT avg(rating) ,  avg(resolution) FROM song WHERE languages  =  ""bangla""",music_1,['song']
"SELECT song.f_id , song.genre_is , song.artist_name FROM song WHERE song.languages = 'English' ORDER BY song.rating ASC",False,"List the id, genre and artist name of English songs ordered by rating.",1120,"SELECT f_id ,  genre_is ,  artist_name FROM song WHERE languages  =   ""english"" ORDER BY rating",music_1,['song']
"SELECT song.f_id , song.genre_is , song.artist_name FROM song WHERE song.languages = 'English' ORDER BY song.rating ASC",False,"What is the id, genre, and name of the artist for every English song ordered by ascending rating?",1121,"SELECT f_id ,  genre_is ,  artist_name FROM song WHERE languages  =   ""english"" ORDER BY rating",music_1,['song']
"SELECT player.bats , player.bats FROM player JOIN all_star ON player.player_id = all_star.player_id WHERE all_star.year = 1998",False,What are first and last names of players participating in all star game in 1998?,1124,"SELECT name_first ,  name_last FROM player AS T1 JOIN all_star AS T2 ON T1.player_id  =  T2.player_id WHERE YEAR  =  1998",baseball_1,"['all_star', 'player']"
"SELECT player.name_first , player.name_first FROM player JOIN all_star ON player.player_id = all_star.player_id WHERE all_star.year = 1998",False,List the first and last name for players who participated in all star game in 1998.,1125,"SELECT name_first ,  name_last FROM player AS T1 JOIN all_star AS T2 ON T1.player_id  =  T2.player_id WHERE YEAR  =  1998",baseball_1,"['all_star', 'player']"
"SELECT hall_of_fame.ballots , COUNT( * ) FROM hall_of_fame GROUP BY hall_of_fame.ballots",False,How many players enter hall of fame each year?,1126,"SELECT yearid ,  count(*) FROM hall_of_fame GROUP BY yearid;",baseball_1,['hall_of_fame']
"SELECT hall_of_fame.ballots , COUNT( * ) FROM hall_of_fame GROUP BY hall_of_fame.ballots",False,Count the number of players who enter hall of fame for each year.,1127,"SELECT yearid ,  count(*) FROM hall_of_fame GROUP BY yearid;",baseball_1,['hall_of_fame']
"SELECT player.name_first , player.name_first FROM player WHERE player.death_country = 'null'",False,Find all the players' first name and last name who have empty death record.,1130,"SELECT name_first ,  name_last FROM player WHERE death_year = '';",baseball_1,['player']
"SELECT player.name_first , player.name_first FROM player WHERE player.death_city = 'null'",False,What are the first name and last name of the players whose death record is empty?,1131,"SELECT name_first ,  name_last FROM player WHERE death_year = '';",baseball_1,['player']
SELECT MAX( postseason.league_id_loser ) FROM postseason JOIN team ON postseason.team_id_loser = team.team_id_br WHERE team.name = 'Boston Red Stockings',False,List the maximum scores of the team Boston Red Stockings when the team won in postseason?,1136,SELECT max(T1.wins) FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_winner  =  T2.team_id_br WHERE T2.name  =  'Boston Red Stockings';,baseball_1,"['postseason', 'team']"
SELECT MAX( postseason.league_id_loser ) FROM postseason JOIN team ON postseason.team_id_loser = team.team_id_br WHERE team.name = 'Boston Red Stockings',False,What are the maximum scores the team Boston Red Stockings got when the team won in postseason?,1137,SELECT max(T1.wins) FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_winner  =  T2.team_id_br WHERE T2.name  =  'Boston Red Stockings';,baseball_1,"['postseason', 'team']"
SELECT COUNT( * ) FROM postseason JOIN team ON postseason.league_id_loser = team.div_id WHERE team.name = 'Boston Red Stockings' AND postseason.losses = 2009,False,How many times did Boston Red Stockings lose in 2009 postseason?,1138,SELECT count(*) FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_loser  =  T2.team_id_br WHERE T2.name  =  'Boston Red Stockings' AND T1.year = 2009;,baseball_1,"['postseason', 'team']"
SELECT COUNT( * ) FROM postseason JOIN team ON postseason.team_id_loser = team.team_id_br WHERE team.name = 'Boston Red Stockings' AND postseason.losses = 2009,False,"Count the number of times the team ""Boston Red Stockings"" lost in 2009 postseason.",1139,SELECT count(*) FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_loser  =  T2.team_id_br WHERE T2.name  =  'Boston Red Stockings' AND T1.year = 2009;,baseball_1,"['postseason', 'team']"
SELECT COUNT( * ) FROM postseason WHERE postseason.losses = 1885 AND postseason.ties = 1,False,"How many games in 1885 postseason resulted in ties (that is, the value of ""ties"" is '1')?",1140,SELECT count(*) FROM postseason WHERE YEAR  =  1885 AND ties  =  1;,baseball_1,['postseason']
SELECT COUNT( * ) FROM postseason WHERE postseason.losses = 1885 AND postseason.ties = 1,False,"Find the number of tied games (the value of ""ties"" is '1') in 1885 postseason.",1141,SELECT count(*) FROM postseason WHERE YEAR  =  1885 AND ties  =  1;,baseball_1,['postseason']
SELECT COUNT( * ) FROM salary JOIN team ON salary.team_id = team.team_id_br WHERE team.name = 'Boston Red Stockings' AND salary.salary = 2000,False,How many players were in the team Boston Red Stockings in 2000?,1144,SELECT count(*) FROM salary AS T1 JOIN team AS T2 ON T1.team_id  =  T2.team_id_br WHERE T2.name  = 'Boston Red Stockings' AND T1.year  =  2000,baseball_1,"['team', 'salary']"
SELECT COUNT( * ) FROM salary JOIN team ON salary.league_id = team.div_id WHERE team.name = 'Boston Red Stockings' AND salary.salary = 2000,False,How many players did Boston Red Stockings have in 2000?,1145,SELECT count(*) FROM salary AS T1 JOIN team AS T2 ON T1.team_id  =  T2.team_id_br WHERE T2.name  = 'Boston Red Stockings' AND T1.year  =  2000,baseball_1,"['team', 'salary']"
SELECT COUNT( * ) FROM home_game JOIN park ON home_game.park_id = park.park_id WHERE home_game.attendance = 1907 AND park.park_alias = 'Columbia Park',False,"How many games were played in park ""Columbia Park"" in 1907?",1146,SELECT count(*) FROM home_game AS T1 JOIN park AS T2 ON T1.park_id  =  T2.park_id WHERE T1.year = 1907 AND T2.park_name = 'Columbia Park';,baseball_1,"['home_game', 'park']"
SELECT COUNT( * ) FROM home_game JOIN park ON home_game.park_id = park.park_id WHERE home_game.attendance = 1907 AND park.park_alias = 'Columbia Park',False,"Count the number of games taken place in park ""Columbia Park"" in 1907.",1147,SELECT count(*) FROM home_game AS T1 JOIN park AS T2 ON T1.park_id  =  T2.park_id WHERE T1.year = 1907 AND T2.park_name = 'Columbia Park';,baseball_1,"['home_game', 'park']"
SELECT COUNT( * ) FROM home_game JOIN park ON home_game.park_id = park.park_id WHERE home_game.attendance = 2000 AND park.city = 'Atlanta',False,How many games were played in city Atlanta in 2000?,1148,SELECT count(*) FROM home_game AS T1 JOIN park AS T2 ON T1.park_id  =  T2.park_id WHERE T1.year  =  2000 AND T2.city  =  'Atlanta';,baseball_1,"['home_game', 'park']"
SELECT COUNT( * ) FROM home_game JOIN park ON home_game.park_id = park.park_id WHERE home_game.attendance = 2000 AND park.city = 'Atlanta',False,Find the number of games taken place in city Atlanta in 2000.,1149,SELECT count(*) FROM home_game AS T1 JOIN park AS T2 ON T1.park_id  =  T2.park_id WHERE T1.year  =  2000 AND T2.city  =  'Atlanta';,baseball_1,"['home_game', 'park']"
SELECT SUM( home_game.attendance ) FROM home_game JOIN team ON home_game.team_id = team.team_id_br WHERE team.name = 'Boston Red Stockings' AND home_game.games BETWEEN 2000 and 2010,False,What is the total home game attendance of team Boston Red Stockings from 2000 to 2010?,1150,SELECT sum(T1.attendance) FROM home_game AS T1 JOIN team AS T2 ON T1.team_id  =  T2.team_id_br WHERE T2.name  =  'Boston Red Stockings' AND T1.year BETWEEN 2000 AND 2010;,baseball_1,"['home_game', 'team']"
SELECT SUM( home_game.games ) FROM home_game JOIN team ON home_game.team_id = team.team_id_br WHERE team.name = 'Boston Red Stockings' AND home_game.attendance BETWEEN 2000 and 2010,False,How many games in total did team Boston Red Stockings attend from 2000 to 2010?,1151,SELECT sum(T1.attendance) FROM home_game AS T1 JOIN team AS T2 ON T1.team_id  =  T2.team_id_br WHERE T2.name  =  'Boston Red Stockings' AND T1.year BETWEEN 2000 AND 2010;,baseball_1,"['home_game', 'team']"
SELECT SUM( salary.salary ) FROM salary JOIN player ON salary.player_id = player.player_id WHERE player.name_first = 'Len and last name Barker' AND player.name_last = 'Len and last name Barker' AND salary.salary BETWEEN 1985 and 1990,False,How much did the the player with first name Len and last name Barker earn between 1985 to 1990 in total?,1152,SELECT sum(T1.salary) FROM salary AS T1 JOIN player AS T2 ON T1.player_id = T2.player_id WHERE T2.name_first  =  'Len' AND T2.name_last = 'Barker' AND T1.year BETWEEN 1985 AND 1990;,baseball_1,"['player', 'salary']"
SELECT SUM( salary.salary ) FROM salary JOIN player ON salary.player_id = player.player_id WHERE player.name_first = 'Barker' AND player.name_last = 'Len' AND salary.year BETWEEN 1985 and 1990,False,Compute the total salary that the player with first name Len and last name Barker received between 1985 to 1990.,1153,SELECT sum(T1.salary) FROM salary AS T1 JOIN player AS T2 ON T1.player_id = T2.player_id WHERE T2.name_first  =  'Len' AND T2.name_last = 'Barker' AND T1.year BETWEEN 1985 AND 1990;,baseball_1,"['player', 'salary']"
SELECT SUM( home_game.games ) FROM home_game JOIN team ON home_game.team_id = team.team_id_br WHERE team.name = 'Boston Red Stockings' AND home_game.attendance BETWEEN 1990 and 2000,False,How many home games did the team Boston Red Stockings play from 1990 to 2000 in total?,1154,SELECT sum(T1.games) FROM home_game AS T1 JOIN team AS T2 ON T1.team_id = T2.team_id_br WHERE T2.name = 'Boston Red Stockings' AND T1.year BETWEEN 1990 AND 2000;,baseball_1,"['home_game', 'team']"
SELECT SUM( home_game.games ) FROM home_game JOIN team ON home_game.team_id = team.team_id_br WHERE team.name = 'Boston Red Stockings' AND home_game.attendance BETWEEN 1990 and 2000,False,Count the total number of games the team Boston Red Stockings attended from 1990 to 2000.,1155,SELECT sum(T1.games) FROM home_game AS T1 JOIN team AS T2 ON T1.team_id = T2.team_id_br WHERE T2.name = 'Boston Red Stockings' AND T1.year BETWEEN 1990 AND 2000;,baseball_1,"['home_game', 'team']"
"SELECT mountain.id , mountain.name FROM mountain JOIN photos ON mountain.id = photos.mountain_id WHERE mountain.height > 'mountains'",False,What are the id and name of the photos for mountains?,1160,"SELECT T1.id ,  T1.name FROM mountain AS T1 JOIN photos AS T2 ON T1.id  =  T2.mountain_id WHERE T1.height  >  4000",mountain_photos,"['mountain', 'photos']"
SELECT channel.name FROM channel JOIN broadcast ON channel.channel_id = broadcast.channel_id WHERE broadcast.time_of_day = 'morning',False,Find the names of the channels that are broadcast in the morning.,1170,SELECT t1.name FROM channel AS t1 JOIN broadcast AS t2 ON t1.channel_id  =  t2.channel_id WHERE t2.time_of_day  =  'Morning',program_share,"['broadcast', 'channel']"
SELECT channel.name FROM channel JOIN broadcast ON channel.channel_id = broadcast.channel_id WHERE broadcast.time_of_day = 'morning',False,Which channels are broadcast in the morning? Give me the channel names.,1171,SELECT t1.name FROM channel AS t1 JOIN broadcast AS t2 ON t1.channel_id  =  t2.channel_id WHERE t2.time_of_day  =  'Morning',program_share,"['broadcast', 'channel']"
"SELECT COUNT( * ) , block.blockfloor FROM block JOIN room ON block.blockfloor = room.blockfloor JOIN block ON block.blockcode = room.blockcode GROUP BY block.blockfloor",False,Find the number of rooms located on each block floor.,1186,"SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",hospital_1,"['block', 'room']"
"SELECT COUNT( * ) , block.blockfloor FROM block JOIN room ON block.blockfloor = room.blockfloor JOIN block ON block.blockcode = room.blockcode GROUP BY block.blockfloor",False,How many rooms does each block floor have?,1187,"SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",hospital_1,"['block', 'room']"
"SELECT COUNT( * ) , block.blockcode FROM block JOIN room ON block.blockfloor = room.blockfloor JOIN block ON block.blockcode = room.blockcode GROUP BY block.blockcode",False,Find the number of rooms for different block code?,1188,"SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",hospital_1,"['block', 'room']"
"SELECT COUNT( * ) , block.blockcode FROM block JOIN room ON block.blockfloor = room.blockfloor JOIN block ON block.blockcode = room.blockcode GROUP BY block.blockcode",False,How many rooms are located for each block code?,1189,"SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",hospital_1,"['block', 'room']"
SELECT ship.name FROM ship WHERE ship.nationality NOT IN (SELECT AVG( ship.name ) FROM ship ORDER BY ship.nationality ASC LIMIT ship.nationality),False,What are the names of the ships  that are from either the US or the UK?,1211,"SELECT Name FROM ship WHERE Nationality  =  ""United States"" OR Nationality  =  ""United Kingdom""",ship_mission,['ship']
SELECT company.name FROM company WHERE company.industry = 'banking' OR company.industry = 'retailing',False,Show the names of companies in the banking or retailing industry?,1225,"SELECT Name FROM company WHERE Industry  =  ""Banking"" OR Industry  =  ""Retailing""",company_employee,['company']
"SELECT project_staff.date_from , project_staff.date_to FROM project_staff WHERE project_staff.role_code = 'researchers'",False,When did researchers start and stop working?,1252,"SELECT date_from ,  date_to FROM Project_Staff WHERE role_code  =  'researcher'",tracking_grants_for_research,['project_staff']
SELECT COUNT( * ) FROM project_staff WHERE project_staff.role_code = 'leaders' OR project_staff.date_from<'1989-04-24 23:51:54',False,How many project staff worked as leaders or started working before '1989-04-24 23:51:54'?,1261,SELECT count(*) FROM Project_Staff WHERE role_code  =  'leader' OR date_from  <  '1989-04-24 23:51:54',tracking_grants_for_research,['project_staff']
SELECT COUNT( * ) FROM project_staff WHERE project_staff.role_code = 'leaders' OR project_staff.date_from<'1989-04-24 23:51:54',False,How many project members were leaders or started working before '1989-04-24 23:51:54'?,1262,SELECT count(*) FROM Project_Staff WHERE role_code  =  'leader' OR date_from  <  '1989-04-24 23:51:54',tracking_grants_for_research,['project_staff']
SELECT project_staff.role_code FROM project_staff WHERE project_staff.staff_id = 1 AND project_staff.date_from = 1 AND project_staff.date_to = 1 AND project_staff.date_from = 1 AND project_staff.date_to = 1,False,What are the staff roles of the staff who,1267,SELECT role_code FROM Project_Staff WHERE date_from  >  '2003-04-19 15:06:20' AND date_to  <  '2016-03-15 00:33:18',tracking_grants_for_research,['project_staff']
SELECT COUNT( * ) FROM person WHERE person.age > 30 AND person.job = 'engineers',False,HOw many engineers are older than 30?,1274,SELECT count(*) FROM Person WHERE age  >  30 AND job  =  'engineer',network_2,['person']
SELECT person.name FROM person WHERE person.gender = 'males' ORDER BY person.age ASC,False,Find the name and age of all males in order of their age.,1287,SELECT name FROM Person WHERE gender  =  'male' ORDER BY age,network_2,['person']
SELECT personfriend.name FROM person JOIN personfriend ON person.name = personfriend.friend WHERE person.city = 'New York',False,What are the names of all friends who are from New York?,1300,SELECT T2.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T1.city  =  'new york city',network_2,"['personfriend', 'person']"
"SELECT faculty.fname , faculty.lname FROM faculty WHERE faculty.sex = 'm' AND faculty.building = 'NEB'",False,Find the first names and last names of male (sex is M) faculties who live in building NEB.,1322,"SELECT Fname ,  Lname FROM FACULTY WHERE sex  =  ""M"" AND Building  =  ""NEB""",college_3,['faculty']
"SELECT faculty.fname , faculty.lname FROM faculty WHERE faculty.sex = 'm' AND faculty.building = 'NEB'",False,What are the full names of faculties with sex M and who live in building NEB?,1323,"SELECT Fname ,  Lname FROM FACULTY WHERE sex  =  ""M"" AND Building  =  ""NEB""",college_3,['faculty']
SELECT faculty.room FROM faculty WHERE faculty.rank = 'professor' AND faculty.building = 'NEB',False,Find the rooms of faculties with rank professor who live in building NEB.,1324,"SELECT Room FROM FACULTY WHERE Rank  =  ""Professor"" AND Building  =  ""NEB""",college_3,['faculty']
SELECT faculty.room FROM faculty WHERE faculty.rank = 'professors' AND faculty.building = 'NEB',False,What are the rooms for members of the faculty who are professors and who live in building NEB?,1325,"SELECT Room FROM FACULTY WHERE Rank  =  ""Professor"" AND Building  =  ""NEB""",college_3,['faculty']
SELECT student.lname FROM student WHERE student.sex = 'f' ORDER BY student.age DESC,False,"What are the last names of female students, ordered by age descending?",1327,"SELECT LName FROM STUDENT WHERE Sex  =  ""F"" ORDER BY Age DESC",college_3,['student']
"SELECT faculty.lname FROM faculty WHERE faculty.building = 'Barton,' ORDER BY faculty.lname ASC",False,"What are the last names of faculty in building Barton, sorted by last name?",1329,"SELECT Lname FROM FACULTY WHERE Building  =  ""Barton"" ORDER BY Lname",college_3,['faculty']
"SELECT faculty.fname FROM faculty WHERE faculty.rank = 'professors,' ORDER BY faculty.fname ASC",False,"What are the first names for all faculty professors, ordered by first name?",1331,"SELECT Fname FROM FACULTY WHERE Rank  =  ""Professor"" ORDER BY Fname",college_3,['faculty']
"SELECT faculty.fname , faculty.lname FROM course JOIN faculty ON course.instructor = faculty.facid WHERE course.cname = 'course.cname'",False,Find the first name and last name of the instructor of course that has course name,1334,"SELECT T2.Fname ,  T2.Lname FROM COURSE AS T1 JOIN FACULTY AS T2 ON T1.Instructor  =  T2.FacID WHERE T1.CName  =  ""COMPUTER LITERACY""",college_3,"['course', 'faculty']"
"SELECT airport.international_passengers , airport.domestic_passengers FROM airport WHERE airport.airport_name = 'Heathrow'",False,"What are the number of international and domestic passengers of the airport named London ""Heathrow""?",1344,"SELECT International_Passengers ,  Domestic_Passengers FROM airport WHERE Airport_Name  =  ""London Heathrow""",aircraft,['airport']
"SELECT college.cname , college.enr FROM college WHERE college.enr > 10000 AND college.enr > 10000",False,What are the names and enrollment numbers for colleges that have more than 10000 enrolled and are located in Louisiana?,1367,"SELECT cName ,  enr FROM College WHERE enr  >  10000 AND state = ""LA""",soccer_2,['college']
SELECT COUNT( * ) FROM student WHERE student.sex = 'f' AND student.age<25,False,How many female students (sex is F) whose age is below 25?,1455,SELECT count(*) FROM student WHERE sex  =  'F' AND age  <  25,dorm_1,['student']
SELECT COUNT( * ) FROM student WHERE student.sex = 'f' AND student.age<25,False,How many girl students who are younger than 25?,1456,SELECT count(*) FROM student WHERE sex  =  'F' AND age  <  25,dorm_1,['student']
"SELECT student.major , AVG( student.age ) , MIN( student.age ) FROM student GROUP BY student.major",False,"Show the average, minimum, and maximum age for different majors.",1499,"SELECT major ,  avg(age) ,  min(age) ,  max(age) FROM Student GROUP BY major",game_1,['student']
"SELECT student.major , AVG( student.age ) , MIN( student.age ) , MAX( student.age ) FROM student",False,"What are the average, minimum, and max ages for each of the different majors?",1500,"SELECT major ,  avg(age) ,  min(age) ,  max(age) FROM Student GROUP BY major",game_1,['student']
SELECT student.lname FROM sportsinfo JOIN student ON sportsinfo.stuid = student.stuid WHERE sportsinfo.onscholarship = 'y',False,Show last names for all student who are on scholarship.,1501,SELECT T2.Lname FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID WHERE T1.onscholarship  =  'Y',game_1,"['student', 'sportsinfo']"
SELECT student.lname FROM sportsinfo JOIN student ON sportsinfo.stuid = student.stuid WHERE sportsinfo.onscholarship = 'y',False,What are the last names for all scholarship students?,1502,SELECT T2.Lname FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID WHERE T1.onscholarship  =  'Y',game_1,"['student', 'sportsinfo']"
SELECT SUM( sportsinfo.gamesplayed ) FROM sportsinfo WHERE sportsinfo.sportname = 'football' AND sportsinfo.onscholarship = 'y',False,How many games are played for all football games by students on scholarship?,1503,"SELECT sum(gamesplayed) FROM Sportsinfo WHERE sportname  =  ""Football"" AND onscholarship  =  'Y'",game_1,['sportsinfo']
SELECT SUM( sportsinfo.gamesplayed ) FROM sportsinfo WHERE sportsinfo.sportname = 'football' AND sportsinfo.onscholarship = 'y',False,What is the total number of all football games played by scholarship students?,1504,"SELECT sum(gamesplayed) FROM Sportsinfo WHERE sportname  =  ""Football"" AND onscholarship  =  'Y'",game_1,['sportsinfo']
"SELECT documents.document_name , documents.document_date FROM projects JOIN documents ON projects.project_id = documents.project_id WHERE projects.project_details = 'Graph Database'",False,Show the document name and the document date for all documents on project with details 'Graph Database project'.,1556,"SELECT document_name ,  document_date FROM Documents AS T1 JOIN projects AS T2 ON T1.project_id  =  T2.project_id WHERE T2.project_details  =  'Graph Database project'",cre_Docs_and_Epenses,"['documents', 'projects']"
"SELECT documents.document_name , documents.document_date FROM projects JOIN documents ON projects.project_id = documents.project_id WHERE projects.project_details = 'Graph Database'",False,What are the names and dates for documents corresponding to project that has the details 'Graph Database project'?,1557,"SELECT document_name ,  document_date FROM Documents AS T1 JOIN projects AS T2 ON T1.project_id  =  T2.project_id WHERE T2.project_details  =  'Graph Database project'",cre_Docs_and_Epenses,"['documents', 'projects']"
"SELECT ref_document_types.document_type_name , COUNT( * ) FROM documents JOIN ref_document_types ON documents.document_type_code = ref_document_types.document_type_code GROUP BY documents.document_type_code",False,How many documents are there of each type?,1561,"SELECT document_type_code ,  count(*) FROM Documents GROUP BY document_type_code",cre_Docs_and_Epenses,"['documents', 'ref_document_types']"
"SELECT statements.statement_details , documents.document_name FROM statements JOIN documents ON statements.statement_id = documents.document_id WHERE projects.project_details = 'Private Project'",False,Show the statement detail and the corresponding document name for the statement with detail 'Private Project'.,1562,"SELECT T1.statement_details ,  T2.document_name FROM Statements AS T1 JOIN Documents AS T2 ON T1.statement_id  =  T2.document_id WHERE T1.statement_details  =  'Private Project'",cre_Docs_and_Epenses,"['documents', 'statements']"
"SELECT statements.statement_details , documents.document_name FROM documents JOIN statements ON documents.document_id = statements.statement_id WHERE projects.project_details = 'Private Project'",False,"What are the details for statements with the details 'Private Project', and what are the names of the corresponding documents?",1563,"SELECT T1.statement_details ,  T2.document_name FROM Statements AS T1 JOIN Documents AS T2 ON T1.statement_id  =  T2.document_id WHERE T1.statement_details  =  'Private Project'",cre_Docs_and_Epenses,"['documents', 'statements']"
"SELECT documents.document_name , documents.document_description , documents.document_date FROM documents JOIN ref_document_types ON documents.document_type_code = ref_document_types.document_type_code",False,"Return the type name, type description, and date of creation for each document.",1567,"SELECT T1.document_type_name ,  T1.document_type_description ,  T2.Document_date FROM Ref_document_types AS T1 JOIN Documents AS T2 ON T1.document_type_code  =  T2.document_type_code",cre_Docs_and_Epenses,"['documents', 'ref_document_types']"
"SELECT ref_budget_codes.budget_type_code , documents.document_description , documents.document_id FROM documents , ref_budget_codes , ref_document_types",False,Show the budget type code and description and the corresponding document id.,1576,"SELECT T2.budget_type_code ,  T2.budget_type_description ,  T1.document_id FROM Documents_with_expenses AS T1 JOIN Ref_budget_codes AS T2 ON T1.budget_type_code  =  T2.budget_type_code",cre_Docs_and_Epenses,"['documents', 'documents_with_expenses', 'ref_document_types', 'ref_budget_codes']"
SELECT documents.document_id FROM documents JOIN ref_document_types ON documents.document_type_code = ref_document_types.document_type_code WHERE ref_budget_codes.budget_type_description = 'Government',False,Show ids for all documents with budget types described as 'Government'.,1578,"SELECT T1.document_id FROM Documents_with_expenses AS T1 JOIN Ref_Budget_Codes AS T2 ON T1.Budget_Type_code  =  T2.Budget_Type_code WHERE T2.budget_type_Description  =  ""Government""",cre_Docs_and_Epenses,"['documents', 'documents_with_expenses', 'ref_document_types', 'ref_budget_codes']"
SELECT documents.document_id FROM documents WHERE documents.document_description = 'Government',False,Give the ids for documents that have the budget description 'Government'.,1579,"SELECT T1.document_id FROM Documents_with_expenses AS T1 JOIN Ref_Budget_Codes AS T2 ON T1.Budget_Type_code  =  T2.Budget_Type_code WHERE T2.budget_type_Description  =  ""Government""",cre_Docs_and_Epenses,"['documents', 'documents_with_expenses', 'ref_budget_codes']"
"SELECT ref_budget_codes.budget_type_code , COUNT( * ) FROM ref_budget_codes GROUP BY ref_budget_codes.budget_type_code",False,Show budget type codes and the number of documents in each budget type.,1580,"SELECT budget_type_code ,  count(*) FROM Documents_with_expenses GROUP BY budget_type_code",cre_Docs_and_Epenses,"['documents_with_expenses', 'ref_budget_codes']"
"SELECT station.location , SUM( station.total_passengers ) FROM station GROUP BY station.location",False,Show all locations and the total number of platforms and passengers for all train stations in each location.,1585,"SELECT LOCATION ,  sum(number_of_platforms) ,  sum(total_passengers) FROM station GROUP BY LOCATION",train_station,['station']
SELECT station.location FROM station WHERE station.number_of_platforms >= 15 AND station.total_passengers > 25,False,Show all locations that have train stations with at least 15 platforms and train stations with more than 25 total passengers.,1586,SELECT DISTINCT LOCATION FROM station WHERE number_of_platforms  >=  15 AND total_passengers  >  25,train_station,['station']
"SELECT station.name , station.location FROM station ORDER BY station.name , station.annual_interchanges ASC",False,List the names and locations of all stations ordered by their yearly entry exit and interchange amounts.,1592,"SELECT name ,  LOCATION FROM station ORDER BY Annual_entry_exit ,  Annual_interchanges",train_station,['station']
SELECT staff.date_of_birth FROM staff WHERE staff.nickname = 'Janessa Sawayn',False,What is the date of birth for the staff member named Janessa Sawayn?,1596,"SELECT date_of_birth FROM Staff WHERE first_name = ""Janessa"" AND last_name = ""Sawayn"";",driving_school,['staff']
SELECT staff.date_joined_staff FROM staff WHERE staff.nickname = 'Janessa Sawayn',False,When did the staff member named Janessa Sawayn join the company?,1598,"SELECT date_joined_staff FROM Staff WHERE first_name = ""Janessa"" AND last_name = ""Sawayn"";",driving_school,['staff']
SELECT staff.nickname FROM staff WHERE staff.first_name = 'Janessa' AND staff.last_name = 'Janessa Sawayn',False,What is the nickname of the employee named Janessa Sawayn?,1602,"SELECT nickname FROM Staff WHERE first_name = ""Janessa"" AND last_name = ""Sawayn"";",driving_school,['staff']
SELECT addresses.city FROM addresses JOIN staff ON addresses.address_id = staff.staff_address_id WHERE customers.first_name = 'Janessa' AND customers.last_name = 'Sawayn',False,In what city does Janessa Sawayn live?,1604,"SELECT T1.city FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id WHERE T2.first_name = ""Janessa"" AND T2.last_name = ""Sawayn"";",driving_school,"['addresses', 'staff']"
SELECT addresses.zip_postcode FROM addresses JOIN staff ON addresses.address_id = staff.staff_address_id WHERE staff.first_name = 'Janessa' AND staff.last_name = 'Janessa Sawayn',False,What is the zip code of the hosue of the employee named Janessa Sawayn?,1608,"SELECT T1.zip_postcode FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id WHERE T2.first_name = ""Janessa"" AND T2.last_name = ""Sawayn"";",driving_school,"['addresses', 'staff']"
SELECT addresses.state_province_county FROM addresses JOIN staff ON addresses.address_id = staff.staff_address_id GROUP BY addresses.state_province_county HAVING COUNT( * ) >= 2,False,List the states which have between 2 to 4 staffs living there.,1611,SELECT T1.state_province_county FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id GROUP BY T1.state_province_county HAVING count(*) BETWEEN 2 AND 4;,driving_school,"['addresses', 'staff']"
SELECT addresses.state_province_county FROM addresses JOIN staff ON addresses.address_id = staff.staff_address_id GROUP BY addresses.state_province_county HAVING COUNT( * ) >= 2,False,What are the names of the states that have 2 to 4 employees living there?,1612,SELECT T1.state_province_county FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id GROUP BY T1.state_province_county HAVING count(*) BETWEEN 2 AND 4;,driving_school,"['addresses', 'staff']"
SELECT COUNT( * ) FROM customers JOIN lessons ON customers.customer_id = lessons.customer_id WHERE customers.first_name = 'Rylan' AND customers.last_name = 'Goodwin',False,How many lessons taken by customer with first name as Rylan and last name as Goodwin were completed?,1623,"SELECT count(*) FROM Lessons AS T1 JOIN Customers AS T2 ON T1.customer_id  = T2.customer_id WHERE T2.first_name = ""Rylan"" AND T2.last_name = ""Goodwin"" AND T1.lesson_status_code = ""Completed"";",driving_school,"['customers', 'lessons']"
SELECT COUNT( * ) FROM customers JOIN lessons ON customers.customer_id = lessons.customer_id WHERE customers.first_name = 'Ryan' AND customers.last_name = 'Goodwin',False,How many lessons did the customer Ryan Goodwin complete?,1624,"SELECT count(*) FROM Lessons AS T1 JOIN Customers AS T2 ON T1.customer_id  = T2.customer_id WHERE T2.first_name = ""Rylan"" AND T2.last_name = ""Goodwin"" AND T1.lesson_status_code = ""Completed"";",driving_school,"['customers', 'lessons']"
"SELECT airports.name , airports.country , airports.country , airports.elevation FROM airports WHERE airports.city = 'New York'",False,"What is the name, city, country, and elevation for every airport in the city of New York?",1648,"SELECT name ,  city ,  country ,  elevation FROM airports WHERE city  =  'New York'",flight_4,['airports']
SELECT COUNT( * ) FROM airports WHERE airports.name LIKE '%Interanation%',False,How many airports' names have the word Interanation in them?,1656,SELECT count(*) FROM airports WHERE name LIKE '%International%',flight_4,['airports']
SELECT COUNT( * ) FROM routes JOIN airports ON routes.dst_apid = airports.apid WHERE airports.country = 'Canadian',False,How many routes end in a Canadian airport?,1660,SELECT count(*) FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.dst_apid WHERE country  =  'Canada',flight_4,"['routes', 'airports']"
SELECT COUNT( DISTINCT airports.name ) FROM airlines JOIN routes ON airlines.alid = routes.alid JOIN airports ON routes.alid = airports.apid WHERE airlines.name = 'American Airlines',False,Find the number of different airports which are the destinations of the American Airlines.,1665,SELECT count(DISTINCT dst_apid) FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid WHERE T1.name  =  'American Airlines',flight_4,"['routes', 'airlines', 'airports']"
SELECT COUNT( DISTINCT airports.name ) FROM airlines JOIN routes ON airlines.alid = routes.alid JOIN airports ON routes.dst_apid = airports.apid WHERE airlines.name = 'American Airlines',False,What is the number of different different airports that are destinations for American Airlines?,1666,SELECT count(DISTINCT dst_apid) FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid WHERE T1.name  =  'American Airlines',flight_4,"['routes', 'airlines', 'airports']"
SELECT airports.city FROM airports GROUP BY airports.city HAVING COUNT( * ) > 2,False,List the cities which have more than 2 airports sorted by the number of airports.,1671,SELECT city FROM airports GROUP BY city HAVING count(*)  >  2 ORDER BY count(*),flight_4,['airports']
SELECT airports.city FROM airports GROUP BY airports.city HAVING COUNT( * ) > 2,False,What are the cities that have more than 2 airports sorted by number of airports?,1672,SELECT city FROM airports GROUP BY city HAVING count(*)  >  2 ORDER BY count(*),flight_4,['airports']
"SELECT routes.src_ap , airports.name , COUNT( * ) FROM routes JOIN airports ON routes.src_apid = airports.apid GROUP BY airports.name",False,Find the number of routes for each source airport and the airport name.,1673,"SELECT count(*) ,  T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.src_apid GROUP BY T1.name",flight_4,"['routes', 'airports']"
SELECT COUNT( * ) FROM routes JOIN airports ON routes.dst_apid = airports.apid WHERE airports.country = 'Italian',False,What is the number of routes whose destinations are Italian airports?,1678,SELECT count(*) FROM routes AS T1 JOIN airports AS T2 ON T1.dst_apid  =  T2.apid WHERE T2.country  =  'Italy',flight_4,"['routes', 'airports']"
SELECT customers.customer_name FROM customers JOIN orders ON customers.customer_id = orders.customer_id WHERE orders.date_order_placed >= 2009-01-01 AND orders.date_order_placed <= 2010-01-01,False,Give me the names of customers who have placed orders between 2009-01-01 and 2010-01-01.,1693,"SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.date_order_placed >= ""2009-01-01"" AND T2.date_order_placed <= ""2010-01-01""",tracking_orders,"['customers', 'orders']"
SELECT customers.customer_name FROM customers JOIN orders ON customers.customer_id = orders.customer_id WHERE orders.date_order_placed = '2009-01-01' OR orders.date_order_placed<'2010-01-01',False,Which customers made orders between 2009-01-01 and 2010-01-01? Find their names.,1694,"SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.date_order_placed >= ""2009-01-01"" AND T2.date_order_placed <= ""2010-01-01""",tracking_orders,"['customers', 'orders']"
SELECT DISTINCT order_items.product_id FROM orders JOIN order_items ON orders.order_id = order_items.order_id WHERE orders.date_order_placed = '1975-01-01' OR orders.date_order_placed<'1976-01-01',False,Give me a list of distinct product ids from orders placed between 1975-01-01 and 1976-01-01?,1695,"SELECT DISTINCT T2.product_id FROM orders AS T1 JOIN order_items AS T2 ON T1.order_id = T2.order_id WHERE T1.date_order_placed >= ""1975-01-01"" AND T1.date_order_placed <= ""1976-01-01""",tracking_orders,"['orders', 'order_items']"
SELECT DISTINCT products.product_id FROM order_items JOIN orders ON order_items.order_id = orders.order_id WHERE orders.date_order_placed >= '1975-01-01' AND orders.date_order_placed <= '1976-01-01',False,What are the distinct ids of products ordered between 1975-01-01 and 1976-01-01??,1696,"SELECT DISTINCT T2.product_id FROM orders AS T1 JOIN order_items AS T2 ON T1.order_id = T2.order_id WHERE T1.date_order_placed >= ""1975-01-01"" AND T1.date_order_placed <= ""1976-01-01""",tracking_orders,"['orders', 'order_items']"
SELECT orders.date_order_placed FROM orders JOIN shipments ON orders.order_id = shipments.order_id WHERE shipments.shipment_tracking_number = 3,False,When was the order placed whose shipment tracking number is 3452? Give me the date.,1697,SELECT T1.date_order_placed FROM orders AS T1 JOIN shipments AS T2 ON T1.order_id = T2.order_id WHERE T2.shipment_tracking_number = 3452,tracking_orders,"['orders', 'shipments']"
SELECT orders.date_order_placed FROM orders JOIN shipments ON orders.order_id = shipments.order_id WHERE shipments.shipment_tracking_number = 3,False,On which day was the order placed whose shipment tracking number is 3452?,1698,SELECT T1.date_order_placed FROM orders AS T1 JOIN shipments AS T2 ON T1.order_id = T2.order_id WHERE T2.shipment_tracking_number = 3452,tracking_orders,"['orders', 'shipments']"
SELECT invoices.invoice_number FROM invoices WHERE invoices.invoice_date > '1989-09-03' OR invoices.invoice_date<'2007-12-25',False,Find the invoice numbers which are created before 1989-09-03 or after 2007-12-25.,1701,"SELECT invoice_number FROM invoices WHERE invoice_date < ""1989-09-03"" OR invoice_date > ""2007-12-25""",tracking_orders,['invoices']
SELECT invoices.invoice_number FROM invoices WHERE invoices.invoice_date > '1989-09-03' OR invoices.invoice_date<'2007-12-25',False,What are the invoice numbers created before 1989-09-03 or after 2007-12-25?,1702,"SELECT invoice_number FROM invoices WHERE invoice_date < ""1989-09-03"" OR invoice_date > ""2007-12-25""",tracking_orders,['invoices']
SELECT DISTINCT invoices.invoice_details FROM invoices WHERE invoices.invoice_date > '1989-09-03' OR invoices.invoice_date<'2007-12-25',False,Find the distinct details of invoices which are created before 1989-09-03 or after 2007-12-25.,1703,"SELECT DISTINCT invoice_details FROM invoices WHERE invoice_date < ""1989-09-03"" OR invoice_date > ""2007-12-25""",tracking_orders,['invoices']
SELECT DISTINCT invoices.invoice_details FROM invoices WHERE invoices.invoice_date > '1989-09-03' OR invoices.invoice_date<'2007-12-25',False,What are the distinct details of invoices created before 1989-09-03 or after 2007-12-25?,1704,"SELECT DISTINCT invoice_details FROM invoices WHERE invoice_date < ""1989-09-03"" OR invoice_date > ""2007-12-25""",tracking_orders,['invoices']
SELECT customers.customer_name FROM customers JOIN orders ON customers.customer_id = orders.customer_id GROUP BY orders.customer_id HAVING COUNT( * ) >= 2,False,What are the names of the customers who have made two or less orders?,1708,SELECT T2.customer_name FROM orders AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T2.customer_id HAVING count(*)  <=  2,tracking_orders,"['customers', 'orders']"
"SELECT singer.name , singer.country , singer.age FROM singer ORDER BY singer.age ASC",False,"Show name, country, age for all singers ordered by age from the oldest to the youngest.",1709,"SELECT name ,  country ,  age FROM singer ORDER BY age DESC",concert_singer,['singer']
"SELECT AVG( singer.age ) , MIN( singer.age ) , MAX( singer.age ) FROM singer WHERE singer.country = 'French'",False,"What is the average, minimum, and maximum age for all French singers?",1712,"SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France'",concert_singer,['singer']
"SELECT MAX( stadium.capacity ) , AVG( stadium.average ) FROM stadium",False,What is the maximum capacity and the average of all stadiums ?,1719,"select max(capacity), average from stadium",concert_singer,['stadium']
"SELECT AVG( stadium.average ) , MAX( stadium.capacity ) FROM stadium",False,What is the average and maximum capacities for all stadiums ?,1720,"select avg(capacity) ,  max(capacity) from stadium",concert_singer,['stadium']
"SELECT stadium.stadium_id , COUNT( * ) FROM concert JOIN stadium ON concert.stadium_id = stadium.stadium_id GROUP BY concert.stadium_id",False,"For each stadium, how many concerts play there?",1726,"SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id",concert_singer,"['concert', 'stadium']"
"SELECT concert.concert_name , concert.theme , COUNT( * ) FROM concert JOIN singer_in_concert ON concert.concert_id = singer_in_concert.concert_id GROUP BY concert.theme",False,"What are the names , themes , and number of singers for every concert ?",1728,"select t2.concert_name ,  t2.theme ,  count(*) from singer_in_concert as t1 join concert as t2 on t1.concert_id  =  t2.concert_id group by t2.concert_id",concert_singer,"['concert', 'singer_in_concert']"
"SELECT car_makers.fullname , COUNT( * ) FROM model_list JOIN car_makers ON model_list.maker = car_makers.id GROUP BY car_makers.id",False,"What is the full name of each car maker, along with its id and how many models it produces?",1736,"SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;",car_1,"['car_makers', 'model_list']"
"SELECT COUNT( * ) , car_makers.fullname FROM car_makers JOIN model_list ON car_makers.id = model_list.maker GROUP BY car_makers.maker",False,How many car models are produced by each maker ? Only list the count and the maker full name .,1737,"select count(*) ,  t2.fullname from model_list as t1 join car_makers as t2 on t1.maker  =  t2.id group by t2.id;",car_1,"['car_makers', 'model_list']"
SELECT cars_data.accelerate FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid WHERE car_names.make = 'amc hornet sportabout (sw',False,What is the accelerate of the car make amc hornet sportabout (sw)?,1739,SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';,car_1,"['cars_data', 'car_names']"
SELECT cars_data.accelerate FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid WHERE car_names.make = 'amc hornet sportabout' AND car_names.make = 'sw',False,How much does the car accelerate that makes amc hornet sportabout (sw)?,1740,SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';,car_1,"['cars_data', 'car_names']"
SELECT COUNT( * ) FROM car_makers WHERE car_makers.country = 'france',False,How many car makers are there in france?,1741,SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';,car_1,"['car_makers', 'countries']"
SELECT COUNT( * ) FROM car_makers JOIN countries ON car_makers.country = countries.countryid JOIN car_makers ON car_makers.country = countries.countryid JOIN model_list ON car_makers.id = model_list.maker JOIN countries ON countries.countryid = countries.continent WHERE countries.countryname = 'France' AND countries.countryname = 'France',False,What is the number of makers of care in France?,1742,SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';,car_1,"['car_makers', 'model_list', 'countries']"
SELECT MIN( cars_data.weight ) FROM cars_data WHERE cars_data.cylinders = 1974 AND cars_data.cylinders = 8,False,What is the smallest weight of the car produced with 8 cylinders on 1974 ?,1743,select min(weight) from cars_data where cylinders  =  8 and year  =  1974,car_1,['cars_data']
SELECT MIN( cars_data.weight ) FROM cars_data WHERE cars_data.cylinders = 1974 AND cars_data.cylinders = 8,False,What is the minimum weight of the car with 8 cylinders produced in 1974 ?,1744,select min(weight) from cars_data where cylinders  =  8 and year  =  1974,car_1,['cars_data']
"SELECT car_makers.maker , model_list.model FROM car_makers JOIN model_list ON car_makers.id = model_list.maker",False,What are all the makers and models?,1745,"SELECT Maker ,  Model FROM MODEL_LIST;",car_1,"['car_makers', 'model_list']"
"SELECT car_makers.maker , model_list.model FROM car_makers JOIN model_list ON car_makers.id = model_list.maker",False,What are the makers and models?,1746,"SELECT Maker ,  Model FROM MODEL_LIST;",car_1,"['car_makers', 'model_list']"
"SELECT countries.countryname , car_makers.id FROM countries JOIN car_makers ON countries.countryid = car_makers.country GROUP BY countries.countryid HAVING COUNT( * ) >= 1",False,What are the countries having at least one car maker? List name and id.,1747,"SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;",car_1,"['car_makers', 'countries']"
SELECT AVG( cars_data.edispl ) FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid WHERE car_names.make = 'volvos',False,What is the average edispl for all volvos?,1752,SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';,car_1,"['cars_data', 'car_names']"
SELECT COUNT( * ) FROM model_list JOIN car_makers ON model_list.maker = car_makers.id WHERE car_makers.maker = 'American Motor Company',False,What is the number of car models created by the car maker American Motor Company?,1756,SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';,car_1,"['car_makers', 'model_list']"
SELECT countries.countryid FROM car_makers GROUP BY car_makers.country HAVING COUNT( car_makers.id ) >= 4,False,How many countries has more than 2 car makers ?,1761,select count(*) from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  2,car_1,"['car_makers', 'countries']"
"SELECT shop.name , COUNT( * ) FROM hiring JOIN shop ON hiring.shop_id = shop.shop_id GROUP BY shop.shop_id",False,Find the number of employees hired in each shop; show the shop name as well.,1777,"SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name",employee_hire_evaluation,"['hiring', 'shop']"
"SELECT COUNT( * ) , shop.name FROM shop JOIN hiring ON shop.shop_id = hiring.shop_id GROUP BY shop.shop_id",False,"For each shop, return the number of employees working there and the name of the shop.",1778,"SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name",employee_hire_evaluation,"['hiring', 'shop']"
"SELECT DISTINCT tv_channel.series_name , tv_channel.content FROM tv_channel",False,List the number of different series names and contents in the TV Channel table.,1783,"SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel;",tvshow,['tv_channel']
"SELECT COUNT( * ) , tv_channel.content FROM tv_channel JOIN tv_series ON tv_channel.id = tv_series.channel GROUP BY tv_channel.content",False,How many different series and contents are listed in the TV Channel table?,1784,"SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel;",tvshow,"['tv_series', 'tv_channel']"
SELECT tv_channel.series_name FROM tv_channel JOIN cartoon ON tv_channel.id = cartoon.channel WHERE cartoon.title = 'The Rise of the Blue Beetle',False,"What is the TV Channel that shows the cartoon ""The Rise of the Blue Beetle!""? List the TV Channel's series name.",1787,"SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = ""The Rise of the Blue Beetle!"";",tvshow,"['cartoon', 'tv_channel']"
SELECT tv_channel.series_name FROM tv_channel JOIN cartoon ON tv_channel.id = cartoon.channel WHERE cartoon.title = 'The Rise of the Blue Beetle',False,"What is the series name of the TV Channel that shows the cartoon ""The Rise of the Blue Beetle""?",1788,"SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = ""The Rise of the Blue Beetle!"";",tvshow,"['cartoon', 'tv_channel']"
"SELECT MIN( tv_series.share ) , MAX( tv_series.share ) FROM tv_series",False,What is minimum and maximum share of TV series?,1793,"SELECT max(SHARE) , min(SHARE) FROM TV_series;",tvshow,['tv_series']
"SELECT tv_channel.package_option , tv_channel.series_name FROM tv_channel WHERE tv_channel.hight_definition_tv = 1",False,Find the package choice and series name of the TV channel that has high definition TV.,1803,"SELECT package_option ,  series_name FROM TV_Channel WHERE hight_definition_TV  =  ""yes""",tvshow,['tv_channel']
"SELECT tv_channel.package_option , tv_channel.series_name FROM tv_channel WHERE tv_channel.hight_definition_tv = 'y'",False,What are the package options and the name of the series for the TV Channel that supports high definition TV?,1804,"SELECT package_option ,  series_name FROM TV_Channel WHERE hight_definition_TV  =  ""yes""",tvshow,['tv_channel']
"SELECT DISTINCT tv_channel.pixel_aspect_ratio_par , tv_channel.country FROM tv_channel WHERE tv_channel.language != 'English'",False,find the pixel aspect ratio and nation of the tv channels that do not use English.,1807,"SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != 'English'",tvshow,['tv_channel']
"SELECT album.title , album.albumid FROM album JOIN track ON album.albumid = track.albumid WHERE track.unitprice > 1",False,Show the album names and ids for albums that contain tracks with unit price bigger than 1.,1815,"SELECT T1.Title ,  T2.AlbumID FROM ALBUM AS T1 JOIN TRACK AS T2 ON T1.AlbumId  =  T2.AlbumId WHERE T2.UnitPrice  >  1 GROUP BY T2.AlbumID",chinook_1,"['track', 'album']"
"SELECT album.title , album.albumid FROM album JOIN track ON album.albumid = track.albumid WHERE track.unitprice > 1",False,What are the titles and ids for albums containing tracks with unit price greater than 1?,1816,"SELECT T1.Title ,  T2.AlbumID FROM ALBUM AS T1 JOIN TRACK AS T2 ON T1.AlbumId  =  T2.AlbumId WHERE T2.UnitPrice  >  1 GROUP BY T2.AlbumID",chinook_1,"['track', 'album']"
SELECT customer.lastname FROM customer JOIN invoice ON customer.customerid = invoice.customerid WHERE invoice.total > 20,False,What are the last names of customers without invoice totals exceeding 20?,1818,SELECT LastName FROM CUSTOMER EXCEPT SELECT T1.LastName FROM CUSTOMER AS T1 JOIN Invoice AS T2 ON T1.CustomerId  =  T2.CustomerId WHERE T2.total  >  20,chinook_1,"['invoice', 'customer']"
SELECT AVG( track.name ) FROM genre JOIN track ON genre.genreid = track.genreid WHERE genre.name = 'Pop',False,Find the average millisecond length of Latin and Pop tracks.,1820,"SELECT AVG(Milliseconds) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId  =  T2.GenreId WHERE T1.Name  =  ""Latin"" OR T1.Name  =  ""Pop""",chinook_1,"['genre', 'track']"
"SELECT artist.name , album.artistid FROM album JOIN artist ON album.artistid = artist.artistid GROUP BY album.artistid HAVING COUNT( * ) >= 3",False,Please list the name and id of all artists that have at least 3 albums in alphabetical order.,1821,"SELECT T2.Name ,  T1.ArtistId FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistID GROUP BY T1.ArtistId HAVING COUNT(*)  >=  3 ORDER BY T2.Name",chinook_1,"['album', 'artist']"
"SELECT artist.name , album.artistid FROM album JOIN artist ON album.artistid = artist.artistid HAVING COUNT( * ) >= 3 EXCEPT SELECT artist.name , album.artistid FROM album JOIN artist ON album.artistid = artist.artistid HAVING COUNT( * ) >= 3",False,"What are the names and ids of artists with 3 or more albums, listed in alphabetical order?",1822,"SELECT T2.Name ,  T1.ArtistId FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistID GROUP BY T1.ArtistId HAVING COUNT(*)  >=  3 ORDER BY T2.Name",chinook_1,"['album', 'artist']"
SELECT artist.name FROM artist WHERE artist.artistid NOT IN (SELECT album.artistid FROM album),False,Find the names of artists that do not have any albums.,1823,SELECT Name FROM ARTIST EXCEPT SELECT T2.Name FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistId,chinook_1,"['album', 'artist']"
SELECT artist.name FROM artist WHERE artist.artistid NOT IN (SELECT album.artistid FROM album),False,What are the names of artists who have not released any albums?,1824,SELECT Name FROM ARTIST EXCEPT SELECT T2.Name FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistId,chinook_1,"['album', 'artist']"
"SELECT medicine.id , medicine.name , COUNT( * ) FROM medicine_enzyme_interaction JOIN medicine ON medicine_enzyme_interaction.medicine_id = medicine.id GROUP BY medicine.id ORDER BY COUNT( * ) DESC LIMIT 1",False,"What are the ids, names and FDA approval status of medicines in descending order of the number of enzymes that it can interact with.",1827,"SELECT T1.id ,  T1.Name ,  T1.FDA_approved FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id  =  T1.id GROUP BY T1.id ORDER BY count(*) DESC",medicine_enzyme_interaction,"['medicine_enzyme_interaction', 'medicine']"
"SELECT medicine.id , medicine.name , COUNT( * ) FROM medicine_enzyme_interaction JOIN medicine ON medicine_enzyme_interaction.medicine_id = medicine.id GROUP BY medicine.id ORDER BY COUNT( * ) DESC",False,"What are the ids, names, and FDA approval status for medicines ordered by descending number of possible enzyme interactions?",1828,"SELECT T1.id ,  T1.Name ,  T1.FDA_approved FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id  =  T1.id GROUP BY T1.id ORDER BY count(*) DESC",medicine_enzyme_interaction,"['medicine_enzyme_interaction', 'medicine']"
SELECT university.founded FROM university WHERE university.affiliation != 'public' ORDER BY university.founded ASC LIMIT 1,False,Find the founded year of the newest non public school.,1833,SELECT founded FROM university WHERE affiliation != 'Public' ORDER BY founded DESC LIMIT 1,university_basketball,['university']
SELECT university.founded FROM university WHERE university.founded > (SELECT MAX( university.founded ) FROM university WHERE university.affiliation != 'public'),False,What is the founded year of the non public school that was founded most recently?,1834,SELECT founded FROM university WHERE affiliation != 'Public' ORDER BY founded DESC LIMIT 1,university_basketball,['university']
SELECT player.player_api_id FROM player JOIN player_attributes ON player.player_fifa_api_id = player_attributes.player_api_id WHERE player.height >= 180 AND player_attributes.overall_rating > 85,False,List all of the player ids with a height of at least 180cm and an overall rating higher than 85.,1839,SELECT player_api_id FROM Player WHERE height  >=  180 INTERSECT SELECT player_api_id FROM Player_Attributes WHERE overall_rating  >  85,soccer_1,"['player', 'player_attributes']"
SELECT player_attributes.overall_rating FROM player_attributes ORDER BY player_attributes.overall_rating DESC LIMIT 3,False,Who are the top 3 players in terms of overall rating?,1840,SELECT DISTINCT T1.player_name FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id  =  T2.player_api_id ORDER BY overall_rating DESC LIMIT 3,soccer_1,"['player', 'player_attributes']"
"SELECT player.player_name , player.birthday FROM player JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id ORDER BY player_attributes.potential DESC LIMIT 5",False,List the names and birthdays of the top five players in terms of potential.,1841,"SELECT DISTINCT T1.player_name ,  T1.birthday FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id  =  T2.player_api_id ORDER BY potential DESC LIMIT 5",soccer_1,"['player', 'player_attributes']"
SELECT people.name FROM debate_people JOIN people ON debate_people.affirmative = people.people_id,False,List the names of people that have not been on the affirmative side of debates.,1851,SELECT Name FROM people WHERE People_id NOT IN (SELECT Affirmative FROM debate_people),debate,"['people', 'debate_people']"
SELECT customers.customer_details FROM customers WHERE customers.customer_id NOT IN (SELECT policies.customer_id FROM policies),False,What are the names of customers who do not have any policies?,1855,SELECT customer_details FROM customers EXCEPT SELECT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id,insurance_and_eClaims,"['customers', 'policies']"
SELECT DISTINCT customers.customer_details FROM policies JOIN customers ON policies.customer_id = customers.customer_id WHERE policies.policy_type_code = 'deputy' OR policies.policy_type_code = 'uniformed',False,Find the names of customers who either have an deputy policy or uniformed policy.,1856,"SELECT DISTINCT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.policy_type_code  =  ""Deputy"" OR t1.policy_type_code  =  ""Uniform""",insurance_and_eClaims,"['policies', 'customers']"
SELECT products.product_color FROM products WHERE products.product_id NOT IN (SELECT order_items.product_id FROM order_items),False,Show all product names without an order.,1866,SELECT product_name FROM Products EXCEPT SELECT T1.product_name FROM Products AS T1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id,customers_and_invoices,"['products', 'order_items']"
SELECT products.parent_product_id FROM products WHERE products.product_id NOT IN (SELECT order_items.product_id FROM order_items),False,What are the names of products that have never been ordered?,1867,SELECT product_name FROM Products EXCEPT SELECT T1.product_name FROM Products AS T1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id,customers_and_invoices,"['products', 'order_items']"
"SELECT products.product_color , COUNT( * ) FROM order_items JOIN products ON order_items.product_id = products.product_id JOIN order_items ON orders.order_id = order_items.order_id GROUP BY order_items.product_id",False,Show all product names and the number of customers having an order on each product.,1868,"SELECT T2.product_name ,  count(*) FROM Order_items AS T1 JOIN Products AS T2 ON T1.product_id  =  T2.product_id JOIN Orders AS T3 ON T3.order_id  =  T1.order_id GROUP BY T2.product_name",customers_and_invoices,"['orders', 'products', 'order_items']"
"SELECT products.product_color , COUNT( * ) FROM order_items JOIN products ON order_items.product_id = products.product_id GROUP BY order_items.product_id",False,"What are teh names of the different products, as well as the number of customers who have ordered each product.",1869,"SELECT T2.product_name ,  count(*) FROM Order_items AS T1 JOIN Products AS T2 ON T1.product_id  =  T2.product_id JOIN Orders AS T3 ON T3.order_id  =  T1.order_id GROUP BY T2.product_name",customers_and_invoices,"['orders', 'products', 'order_items']"
"SELECT checking.balance , savings.balance FROM accounts JOIN checking ON accounts.custid = checking.custid WHERE accounts.name = 'Brown’s'",False,Find the checking balance and saving balance in the Brown’s account.,1874,"SELECT T2.balance ,  T3.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid WHERE T1.name  =  'Brown'",small_bank_1,"['checking', 'savings', 'accounts']"
"SELECT checking.balance , savings.balance FROM accounts JOIN checking ON accounts.custid = checking.custid WHERE accounts.name = 'Brown'",False,What are the checking and savings balances in accounts belonging to Brown?,1875,"SELECT T2.balance ,  T3.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid WHERE T1.name  =  'Brown'",small_bank_1,"['checking', 'savings', 'accounts']"
"SELECT accounts.name FROM accounts, checking, savings WHERE accounts.name = (SELECT accounts.name , checking.balance , savings.balance , SUM( savings.balance ) FROM accounts JOIN checking ON accounts.custid = checking.custid JOIN savings ON checking.balance = savings.custid)",False,"Find the name, checking balance and savings balance of all accounts in the bank sorted by their total checking and savings balance in descending order.",1876,"SELECT T2.balance ,  T3.balance ,  T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid ORDER BY T2.balance + T3.balance DESC",small_bank_1,"['checking', 'savings', 'accounts']"
"SELECT checking.balance , checking.balance , accounts.name , SUM( savings.balance ) FROM accounts JOIN checking ON accounts.custid = checking.custid JOIN savings ON accounts.custid = savings.custid ORDER BY checking.balance , accounts.name ASC",False,"What are the names, checking balances, and savings balances of customers, ordered by the total of checking and savings balances descending?",1877,"SELECT T2.balance ,  T3.balance ,  T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid ORDER BY T2.balance + T3.balance DESC",small_bank_1,"['checking', 'savings', 'accounts']"
"SELECT accounts.name , savings.balance FROM accounts JOIN savings ON accounts.custid = savings.custid JOIN accounts ON accounts.custid = savings.custid WHERE savings.balance<savings.balance GROUP BY accounts.name",False,Find the name and total checking and savings balance of the accounts whose savings balance is lower than corresponding checking balance.,1880,"SELECT T1.name ,  T3.balance + T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid WHERE T3.balance  <  T2.balance",small_bank_1,"['checking', 'savings', 'accounts']"
"SELECT SUM( checking.balance ) , accounts.name FROM accounts JOIN savings ON accounts.custid = savings.custid WHERE savings.balance<savings.balance GROUP BY accounts.name",False,"What are the names of customers who have a savings balance lower than their checking balance, and what is the total of their checking and savings balances?",1881,"SELECT T1.name ,  T3.balance + T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid WHERE T3.balance  <  T2.balance",small_bank_1,"['checking', 'savings', 'accounts']"
SELECT endowment.donator_name FROM endowment WHERE endowment.amount<9,False,Show the names of all the donors except those whose donation amount less than 9.,1886,SELECT donator_name FROM endowment EXCEPT SELECT donator_name FROM endowment WHERE amount  <  9,school_finance,['endowment']
SELECT building.name FROM building JOIN institution ON building.building_id = institution.building_id WHERE institution.founded = 2003 EXCEPT SELECT building.name FROM building JOIN institution ON building.building_id = institution.building_id WHERE institution.founded = 2003,False,Show the names of buildings except for those having an institution founded in 2003.,1890,SELECT name FROM building EXCEPT SELECT T1.name FROM building AS T1 JOIN institution AS T2 ON T1.building_id  =  T2.building_id WHERE T2.founded  =  2003,protein_institute,"['building', 'institution']"
"SELECT payments.customer_id , MAX( payments.amount_paid ) FROM payments GROUP BY payments.customer_id",False,What is the maximum total amount paid by a customer? List the customer id and amount.,1894,"SELECT customer_id ,  sum(amount_paid) FROM Payments GROUP BY customer_id ORDER BY sum(amount_paid) DESC LIMIT 1",products_for_hire,['payments']
"SELECT draft_copies.document_id , COUNT( * ) FROM draft_copies GROUP BY draft_copies.document_id ORDER BY COUNT( * ) DESC LIMIT 1",False,Which document has the most draft copies? List its document id and number of draft copies.,1901,"SELECT document_id , count(copy_number) FROM Draft_Copies GROUP BY document_id ORDER BY count(copy_number) DESC LIMIT 1;",cre_Doc_Control_Systems,['draft_copies']
SELECT employees.employee_name FROM employees WHERE employees.employee_id NOT IN (SELECT circulation_history.employee_id FROM circulation_history),False,List the employees who have not showed up in any circulation history of documents. List the employee's name.,1902,SELECT employee_name FROM Employees EXCEPT SELECT Employees.employee_name FROM Employees JOIN Circulation_History ON Circulation_History.employee_id = Employees.employee_id,cre_Doc_Control_Systems,"['employees', 'circulation_history']"
SELECT COUNT( * ) FROM participants JOIN participants_in_events ON participants.participant_id = participants_in_events.participant_id WHERE participants.participant_details LIKE '%Dr%',False,How many events had participants whose details had the substring 'Dr.',1903,SELECT count(*) FROM participants AS T1 JOIN Participants_in_Events AS T2 ON T1.Participant_ID  =  T2.Participant_ID WHERE T1.participant_details LIKE '%Dr.%',local_govt_in_alabama,"['participants_in_events', 'participants']"
SELECT perpetrator.country FROM perpetrator GROUP BY perpetrator.country ORDER BY COUNT( * ) DESC LIMIT 1,False,What is the country that has the most perpetrators?,1921,"SELECT Country ,  COUNT(*) FROM perpetrator GROUP BY Country ORDER BY COUNT(*) DESC LIMIT 1",perpetrator,['perpetrator']
"SELECT journalist.name , event.name FROM news_report JOIN event ON news_report.event_id = event.event_id JOIN journalist ON news_report.journalist_id = journalist.journalist_id ORDER BY event.name ASC",False,Show the names of journalists and the names of the events they reported in ascending order,1945,"SELECT T3.Name ,  T2.Name FROM news_report AS T1 JOIN event AS T2 ON T1.Event_ID  =  T2.Event_ID JOIN journalist AS T3 ON T1.journalist_ID  =  T3.journalist_ID ORDER BY T2.Event_Attendance ASC",news_report,"['journalist', 'event', 'news_report']"
SELECT DISTINCT customer.cust_name FROM customer JOIN loan ON customer.cust_id = loan.cust_id ORDER BY loan.amount ASC,False,"What are the names of the different customers who have taken out a loan, ordered by the total amount that they have taken?",1950,SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id GROUP BY T1.cust_name ORDER BY sum(T2.amount),loan_1,"['loan', 'customer']"
SELECT customer.cust_name FROM customer WHERE customer.acc_type = 'checking' INTERSECT SELECT customer.cust_name FROM customer WHERE customer.acc_type = 'checking',False,What are the names of customers who have both savings and checking accounts?,1952,SELECT cust_name FROM customer WHERE acc_type  =  'saving' INTERSECT SELECT cust_name FROM customer WHERE acc_type  =  'checking',loan_1,['customer']
SELECT customer.cust_name FROM customer EXCEPT SELECT customer.cust_name FROM customer JOIN loan ON customer.cust_id = loan.cust_id WHERE loan.loan_type != 'Mortgages',False,Find the name of customers who do not have a loan with a type of Mortgages.,1955,SELECT cust_name FROM customer EXCEPT SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id WHERE T2.loan_type  =  'Mortgages',loan_1,"['loan', 'customer']"
SELECT customer.cust_name FROM customer EXCEPT SELECT customer.cust_name FROM customer JOIN loan ON customer.cust_id = loan.cust_id WHERE loan.loan_type = 'Mortage',False,What are the names of customers who have not taken a Mortage loan?,1956,SELECT cust_name FROM customer EXCEPT SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id WHERE T2.loan_type  =  'Mortgages',loan_1,"['loan', 'customer']"
SELECT bank.bname FROM customer JOIN bank ON customer.branch_id = bank.branch_id WHERE customer.credit_score<100,False,Find the names of bank branches that have provided a loan to any customer whose credit score is below 100.,1961,SELECT T2.bname FROM loan AS T1 JOIN bank AS T2 ON T1.branch_id  =  T2.branch_id JOIN customer AS T3 ON T1.cust_id  =  T3.cust_id WHERE T3.credit_score  <  100,loan_1,"['loan', 'bank', 'customer']"
SELECT bank.bname FROM customer JOIN bank ON customer.branch_id = bank.branch_id WHERE customer.credit_score<100,False,What are the names of banks that have loaned money to customers with credit scores below 100?,1962,SELECT T2.bname FROM loan AS T1 JOIN bank AS T2 ON T1.branch_id  =  T2.branch_id JOIN customer AS T3 ON T1.cust_id  =  T3.cust_id WHERE T3.credit_score  <  100,loan_1,"['loan', 'bank', 'customer']"
SELECT AVG( customer.credit_score ) FROM customer JOIN loan ON customer.cust_id = loan.cust_id,False,Find the average credit score of the customers who have some loan.,1963,SELECT avg(credit_score) FROM customer WHERE cust_id IN (SELECT cust_id FROM loan),loan_1,"['loan', 'customer']"
SELECT AVG( customer.credit_score ) FROM customer JOIN loan ON customer.cust_id = loan.cust_id,False,What is the average credit score for customers who have taken a loan?,1964,SELECT avg(credit_score) FROM customer WHERE cust_id IN (SELECT cust_id FROM loan),loan_1,"['loan', 'customer']"
"SELECT train.name , train.time FROM route JOIN train ON route.train_id = train.id JOIN route ON station.id = route.station_id WHERE station.local_authority = 'Chiltern'",False,Find names and times of trains that run through stations for the local authority Chiltern.,1968,"SELECT t3.name ,  t3.time FROM station AS t1 JOIN route AS t2 ON t1.id  =  t2.station_id JOIN train AS t3 ON t2.train_id  =  t3.id WHERE t1.local_authority  =  ""Chiltern""",station_weather,"['route', 'station', 'train']"
SELECT player.position FROM player WHERE player.points > 20 20 INTERSECT SELECT player.position FROM player WHERE player.points<10,False,What are the positions of both players that have more than 20 20 points and less than 10 points?,1974,SELECT POSITION FROM player WHERE Points  >  20 INTERSECT SELECT POSITION FROM player WHERE Points  <  10,sports_competition,['player']
SELECT competition.country FROM competition WHERE competition.competition_type = 'friendly' INTERSECT SELECT competition.country FROM competition WHERE competition.competition_type = 'tournament',False,What are the countries that participated in both friendly and tournament type competitions?,1978,SELECT country FROM competition WHERE competition_type  =  'Friendly' INTERSECT SELECT country FROM competition WHERE competition_type  =  'Tournament',sports_competition,['competition']
SELECT competition.country FROM competition EXCEPT SELECT competition.country FROM competition WHERE competition.competition_type = 'friendly',False,What are the countries that have never participated in any friendly-type competitions?,1980,SELECT country FROM competition EXCEPT SELECT country FROM competition WHERE competition_type  =  'Friendly',sports_competition,['competition']
"SELECT artist.country , artist.artist_name FROM artist , song ORDER BY song.rating DESC LIMIT 3",False,What are the names of the singers who sang the top 3 most highly rated songs and what countries do they hail from?,1984,"SELECT T1.artist_name ,  T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name ORDER BY T2.rating DESC LIMIT 3",music_1,"['song', 'artist']"
SELECT artist.artist_name FROM artist JOIN song ON artist.artist_name = song.artist_name WHERE artist.country = 'UK' AND song.languages = 'English',False,Find the names of the artists who are from UK and have produced English songs.,1987,"SELECT artist_name FROM artist WHERE country  =  ""UK"" INTERSECT SELECT artist_name FROM song WHERE languages  =  ""english""",music_1,"['song', 'artist']"
SELECT artist.artist_name FROM artist JOIN song ON artist.artist_name = song.artist_name WHERE artist.country = 'UK' AND song.languages = 'English',False,What are the names of the artists that are from the UK and sang songs in English?,1988,"SELECT artist_name FROM artist WHERE country  =  ""UK"" INTERSECT SELECT artist_name FROM song WHERE languages  =  ""english""",music_1,"['song', 'artist']"
SELECT DISTINCT song.song_name FROM song WHERE song.resolution > (SELECT MIN( song.resolution ) FROM song WHERE song.languages = 'English'),False,Find the distinct names of all songs that have a higher resolution than some songs in English.,1993,"SELECT DISTINCT song_name FROM song WHERE resolution  >  (SELECT min(resolution) FROM song WHERE languages  =  ""english"")",music_1,['song']
SELECT DISTINCT song.song_name FROM song WHERE song.resolution > (SELECT MIN( song.resolution ) FROM song WHERE song.languages = 'English'),False,What are the different names for all songs that have a higher resolution than English songs?,1994,"SELECT DISTINCT song_name FROM song WHERE resolution  >  (SELECT min(resolution) FROM song WHERE languages  =  ""english"")",music_1,['song']
"SELECT artist.artist_name , artist.country FROM artist JOIN song ON artist.artist_name = song.artist_name WHERE song.song_name = 'love'",False,"What is the name and country of origin of the artist who released a song that has ""love"" in its title?",1997,"SELECT T1.artist_name ,  T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.song_name LIKE ""%love%""",music_1,"['song', 'artist']"
SELECT artist.country FROM artist JOIN song ON artist.artist_name = song.artist_name WHERE song.song_name LIKE '%love%',False,"What are the names of the artists who released a song that has the word love in its title, and where are the artists from?",1998,"SELECT T1.artist_name ,  T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.song_name LIKE ""%love%""",music_1,"['song', 'artist']"
"SELECT DISTINCT artist.artist_name , artist.gender FROM artist JOIN song ON artist.artist_name = song.artist_name WHERE song.releasedate = 'March'",False,List the name and gender for all artists who released songs in March.,1999,"SELECT T1.artist_name ,  T1.gender FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.releasedate LIKE ""%Mar%""",music_1,"['song', 'artist']"
SELECT artist.artist_name FROM artist GROUP BY song.releasedate ORDER BY song.releasedate ASC LIMIT 1,False,What are the names and genders of all artists who released songs in the month of March?,2000,"SELECT T1.artist_name ,  T1.gender FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.releasedate LIKE ""%Mar%""",music_1,"['song', 'artist']"
SELECT song.f_id FROM files WHERE files.formats = 'mp4' OR song.resolution > 720,False,What are the ids of songs that are available in either mp4 format or have resolution above 720?,2001,"SELECT f_id FROM files WHERE formats  =  ""mp4"" UNION SELECT f_id FROM song WHERE resolution  >  720",music_1,"['files', 'song']"
SELECT song.f_id FROM files WHERE files.formats = 'mp4' OR song.resolution > 720,False,What are the ids of all songs that are available on mp4 or have a higher resolution than 720?,2002,"SELECT f_id FROM files WHERE formats  =  ""mp4"" UNION SELECT f_id FROM song WHERE resolution  >  720",music_1,"['files', 'song']"
SELECT artist.artist_name FROM artist JOIN song ON artist.artist_name = song.artist_name WHERE artist.country = 'UK' AND song.languages = 'English',False,Return the names of singers who are from UK and released an English song.,2005,"SELECT artist_name FROM artist WHERE country  =  ""UK"" INTERSECT SELECT T1.artist_name FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.languages  =  ""english""",music_1,"['song', 'artist']"
SELECT artist.artist_name FROM artist JOIN song ON artist.artist_name = song.artist_name WHERE artist.country = 'UK' AND song.languages = 'English',False,What are the names of all singers that are from the UK and released a song in English?,2006,"SELECT artist_name FROM artist WHERE country  =  ""UK"" INTERSECT SELECT T1.artist_name FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.languages  =  ""english""",music_1,"['song', 'artist']"
"SELECT MAX( song.resolution ) , MIN( song.resolution ) FROM files JOIN song ON files.f_id = song.f_id WHERE files.duration = 3",False,What are the maximum and minimum resolution of songs whose duration is 3 minutes?,2007,"SELECT max(T2.resolution) ,  min(T2.resolution) FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T1.duration LIKE ""3:%""",music_1,"['files', 'song']"
"SELECT MAX( song.resolution ) , MIN( song.resolution ) FROM files JOIN song ON files.f_id = song.f_id WHERE files.duration = 3",False,What is the maximum and minimum resolution of all songs that are approximately 3 minutes long?,2008,"SELECT max(T2.resolution) ,  min(T2.resolution) FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T1.duration LIKE ""3:%""",music_1,"['files', 'song']"
"SELECT MAX( files.duration ) , AVG( song.resolution ) FROM files JOIN song ON files.f_id = song.f_id ORDER BY song.languages ASC",False,What are the maximum duration and resolution of songs grouped and ordered by languages?,2009,"SELECT max(T1.duration) ,  max(T2.resolution) ,  T2.languages FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id GROUP BY T2.languages ORDER BY T2.languages",music_1,"['files', 'song']"
"SELECT MAX( files.duration ) , AVG( song.resolution ) FROM files JOIN song ON files.f_id = song.f_id ORDER BY song.languages ASC",False,"What are the maximum duration and resolution of all songs, for each language, ordered alphabetically by language?",2010,"SELECT max(T1.duration) ,  max(T2.resolution) ,  T2.languages FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id GROUP BY T2.languages ORDER BY T2.languages",music_1,"['files', 'song']"
"SELECT genre.g_name , genre.rating , MIN( genre.rating ) FROM files JOIN song ON files.f_id = song.f_id GROUP BY genre.g_name",False,What are the shortest duration and lowest rating of songs grouped by genre and ordered by genre?,2011,"SELECT min(T1.duration) ,  min(T2.rating) ,  T2.genre_is FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id GROUP BY T2.genre_is ORDER BY T2.genre_is",music_1,"['files', 'song']"
"SELECT COUNT( * ) , artist.artist_name FROM artist JOIN song ON artist.artist_name = song.artist_name WHERE song.languages = 'English' GROUP BY artist.artist_name",False,Find the names and number of works of all artists who have at least one English songs.,2013,"SELECT T1.artist_name ,  count(*) FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.languages  =  ""english"" GROUP BY T2.artist_name HAVING count(*)  >=  1",music_1,"['song', 'artist']"
"SELECT song.artist_name , COUNT( * ) FROM song WHERE song.languages = 'English' GROUP BY artist.artist_name",False,What are the names and number of works for all artists who have sung at least one song in English?,2014,"SELECT T1.artist_name ,  count(*) FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.languages  =  ""english"" GROUP BY T2.artist_name HAVING count(*)  >=  1",music_1,"['song', 'artist']"
"SELECT DISTINCT artist.artist_name , artist.country FROM artist JOIN song ON artist.artist_name = song.artist_name WHERE song.resolution > 900",False,Find the name and country of origin for all artists who have release at least one song of resolution above 900.,2015,"SELECT T1.artist_name ,  T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.resolution  >  900 GROUP BY T2.artist_name HAVING count(*)  >=  1",music_1,"['song', 'artist']"
"SELECT DISTINCT artist.artist_name , artist.country FROM artist JOIN song ON artist.artist_name = song.artist_name WHERE song.resolution > 900",False,What is the name and country of origin for each artist who has released a song with a resolution higher than 900?,2016,"SELECT T1.artist_name ,  T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.resolution  >  900 GROUP BY T2.artist_name HAVING count(*)  >=  1",music_1,"['song', 'artist']"
SELECT song.song_name FROM song WHERE song.rating<(SELECT MIN( song.rating ) FROM song WHERE song.languages = 'English'),False,What are the names of the songs whose rating is below the rating of all songs in English?,2017,SELECT song_name FROM song WHERE rating  <   (SELECT min(rating) FROM song WHERE languages  =  'english'),music_1,['song']
SELECT song.song_name FROM song WHERE song.rating<(SELECT MIN( song.rating ) FROM song WHERE song.languages = 'English'),False,What are the song names for every song whose rating is less than the minimum rating for English songs?,2018,SELECT song_name FROM song WHERE rating  <   (SELECT min(rating) FROM song WHERE languages  =  'english'),music_1,['song']
SELECT song.artist_name FROM song WHERE song.languages = 'English' EXCEPT SELECT artist.artist_name FROM artist JOIN song ON artist.artist_name = song.artist_name WHERE song.languages = 'English' AND song.rating > 8,False,Find the names of the artists who have produced English songs but have never received rating higher than 8.,2025,"SELECT DISTINCT artist_name FROM song WHERE languages  =  ""english"" EXCEPT SELECT DISTINCT artist_name FROM song WHERE rating  >  8",music_1,"['song', 'artist']"
SELECT song.artist_name FROM song WHERE song.languages = 'English' EXCEPT SELECT song.artist_name FROM song WHERE song.languages = 'English' AND song.rating > '8',False,What are the names of the different artists that have produced a song in English but have never receieved a rating higher than 8?,2026,"SELECT DISTINCT artist_name FROM song WHERE languages  =  ""english"" EXCEPT SELECT DISTINCT artist_name FROM song WHERE rating  >  8",music_1,['song']
SELECT artist.artist_name FROM artist JOIN song ON artist.artist_name = song.artist_name WHERE artist.country = 'Bangladesh' AND song.rating > 7,False,Find the names of the artists who are from Bangladesh and have never received rating higher than 7.,2027,"SELECT DISTINCT artist_name FROM artist WHERE country  =  ""Bangladesh"" EXCEPT SELECT DISTINCT artist_name FROM song WHERE rating  >  7",music_1,"['song', 'artist']"
SELECT DISTINCT artist.artist_name FROM artist JOIN song ON artist.artist_name = song.artist_name WHERE artist.country = 'Bangladesh' AND song.rating > 7,False,What are the names of the different artists from Bangladesh who never received a rating higher than a 7?,2028,"SELECT DISTINCT artist_name FROM artist WHERE country  =  ""Bangladesh"" EXCEPT SELECT DISTINCT artist_name FROM song WHERE rating  >  7",music_1,"['song', 'artist']"
SELECT player.birth_city FROM player GROUP BY player.birth_city ORDER BY COUNT( * ) ASC LIMIT 3,False,List three countries which are the origins of the least players.,2029,SELECT birth_country FROM player GROUP BY birth_country ORDER BY count(*) ASC LIMIT 3;,baseball_1,['player']
"SELECT player.birth_city , COUNT( * ) FROM player GROUP BY player.bats",False,What are the three countries that the least players are from?,2030,SELECT birth_country FROM player GROUP BY birth_country ORDER BY count(*) ASC LIMIT 3;,baseball_1,['player']
SELECT college.country FROM college WHERE college.city = 'Yale University',False,What is the average height of the players from the college named 'Yale University'?,2031,SELECT avg(T1.height) FROM player AS T1 JOIN player_college AS T2 ON T1.player_id  =  T2.player_id JOIN college AS T3 ON T3.college_id  =  T2.college_id WHERE T3.name_full  =  'Yale University';,baseball_1,"['player_college', 'player', 'college']"
SELECT college.country FROM college WHERE college.city = 'Yale University',False,Find the average height of the players who belong to the college called 'Yale University'.,2032,SELECT avg(T1.height) FROM player AS T1 JOIN player_college AS T2 ON T1.player_id  =  T2.player_id JOIN college AS T3 ON T3.college_id  =  T2.college_id WHERE T3.name_full  =  'Yale University';,baseball_1,"['player_college', 'player', 'college']"
"SELECT team.year , COUNT( * ) FROM postseason JOIN team ON postseason.team_id_loser = team.year WHERE team.name = 'Boston Red Stockings'",False,"For each year, return the year and the number of times the team Boston Red Stockings won in the postseasons.",2034,"SELECT count(*) ,  T1.year FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_winner  =  T2.team_id_br WHERE T2.name  =  'Boston Red Stockings' GROUP BY T1.year",baseball_1,"['postseason', 'team']"
SELECT park.city FROM college WHERE college.city = 2001,False,List the 3 highest salaries of the players in 2001?,2035,SELECT salary FROM salary WHERE YEAR  =  2001 ORDER BY salary DESC LIMIT 3;,baseball_1,"['salary', 'college']"
SELECT SUM( salary.salary ) FROM salary WHERE salary.year = 2001 ORDER BY salary.salary DESC LIMIT 3,False,How much salary did the top 3 well-paid players get in 2001?,2036,SELECT salary FROM salary WHERE YEAR  =  2001 ORDER BY salary DESC LIMIT 3;,baseball_1,['salary']
SELECT SUM( salary.salary ) FROM salary WHERE salary.year = 2010 AND salary.year = 2001,False,What were all the salary values of players in 2010 and 2001?,2037,SELECT salary FROM salary WHERE YEAR  =  2010 UNION SELECT salary FROM salary WHERE YEAR  =  2001,baseball_1,['salary']
SELECT SUM( salary.salary ) FROM salary WHERE salary.year = 2001 AND salary.salary <= 2010,False,List all the salary values players received in 2010 and 2001.,2038,SELECT salary FROM salary WHERE YEAR  =  2010 UNION SELECT salary FROM salary WHERE YEAR  =  2001,baseball_1,['salary']
SELECT hall_of_fame.inducted FROM hall_of_fame GROUP BY hall_of_fame.inducted ORDER BY COUNT( * ) ASC LIMIT 1,False,In which year did the least people enter hall of fame?,2039,SELECT yearid FROM hall_of_fame GROUP BY yearid ORDER BY count(*) ASC LIMIT 1;,baseball_1,['hall_of_fame']
SELECT hall_of_fame.ballots FROM hall_of_fame GROUP BY hall_of_fame.ballots ORDER BY COUNT( * ) ASC LIMIT 1,False,Find the year in which the least people enter hall of fame.,2040,SELECT yearid FROM hall_of_fame GROUP BY yearid ORDER BY count(*) ASC LIMIT 1;,baseball_1,['hall_of_fame']
SELECT photos.name FROM photos JOIN camera_lens ON photos.camera_lens_id = camera_lens.id WHERE camera_lens.brand = 'Sigma' OR camera_lens.brand = 'Olympus',False,What are the names of photos taken with the lens brand 'Sigma' or 'Olympus'?,2041,SELECT T1.name FROM camera_lens AS T1 JOIN photos AS T2 ON T2.camera_lens_id  =  T1.id WHERE T1.brand  =  'Sigma' OR T1.brand  =  'Olympus',mountain_photos,"['camera_lens', 'photos']"
"SELECT camera_lens.name , COUNT( * ) FROM photos JOIN camera_lens ON photos.camera_lens_id = camera_lens.id GROUP BY photos.camera_lens_id",False,What is the name of each camera lens and the number of photos taken by it? Order the result by the count of photos.,2042,"SELECT T1.name ,  count(*) FROM camera_lens AS T1 JOIN photos AS T2 ON T1.id  =  T2.camera_lens_id GROUP BY T1.id ORDER BY count(*)",mountain_photos,"['camera_lens', 'photos']"
SELECT program.name FROM program JOIN broadcast ON program.program_id = broadcast.program_id WHERE broadcast.time_of_day = 'morning',False,Find the names of programs that are never broadcasted in the morning.,2043,"SELECT name FROM program EXCEPT SELECT t1.name FROM program AS t1 JOIN broadcast AS t2 ON t1.program_id  =  t2.program_id WHERE t2.Time_of_day  =  ""Morning""",program_share,"['program', 'broadcast']"
SELECT program.name FROM program JOIN broadcast ON program.program_id = broadcast.program_id WHERE broadcast.time_of_day = 'morning',False,Which programs are never broadcasted in the morning? Give me the names of the programs.,2044,"SELECT name FROM program EXCEPT SELECT t1.name FROM program AS t1 JOIN broadcast AS t2 ON t1.program_id  =  t2.program_id WHERE t2.Time_of_day  =  ""Morning""",program_share,"['program', 'broadcast']"
SELECT department.name FROM department GROUP BY department.name ORDER BY COUNT( * ) DESC LIMIT 1,False,Which department has the largest number of employees?,2045,SELECT name FROM department GROUP BY departmentID ORDER BY count(departmentID) DESC LIMIT 1;,hospital_1,['department']
SELECT physician.name FROM physician WHERE physician.employeeid NOT IN (SELECT appointment.physician FROM appointment),False,List the name of physicians who never took any appointment.,2049,SELECT name FROM physician EXCEPT SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID,hospital_1,"['physician', 'appointment']"
SELECT physician.name FROM physician WHERE physician.employeeid NOT IN (SELECT appointment.physician FROM appointment),False,Which physicians have never taken any appointment? Find their names.,2050,SELECT name FROM physician EXCEPT SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID,hospital_1,"['physician', 'appointment']"
"SELECT physician.name , affiliated_with.department FROM affiliated_with JOIN physician ON affiliated_with.physician = physician.employeeid WHERE affiliated_with.primaryaffiliation = 1",False,Find the names of all physicians and their primary affiliated departments' names.,2051,"SELECT T1.name ,  T3.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID  =  T2.physician JOIN department AS T3 ON T2.department  =  T3.DepartmentID WHERE T2.PrimaryAffiliation  =  1",hospital_1,"['physician', 'affiliated_with', 'department']"
"SELECT physician.name , affiliated_with.department FROM affiliated_with JOIN physician ON affiliated_with.physician = physician.employeeid WHERE affiliated_with.primaryaffiliation = 1",False,What are the name and primarily affiliated department name of each physician?,2052,"SELECT T1.name ,  T3.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID  =  T2.physician JOIN department AS T3 ON T2.department  =  T3.DepartmentID WHERE T2.PrimaryAffiliation  =  1",hospital_1,"['physician', 'affiliated_with', 'department']"
SELECT patient.name FROM appointment JOIN patient ON appointment.patient = patient.ssn ORDER BY appointment.appointmentid ASC LIMIT 1,False,What is the name of the patient who made the most recent appointment?,2053,SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1,hospital_1,"['patient', 'appointment']"
SELECT COUNT( * ) FROM physician JOIN prescribes ON physician.employeeid = prescribes.physician WHERE physician.name = 'John Dorian',False,How many patients' prescriptions are made by physician John Dorian?,2055,"SELECT count(T1.SSN) FROM patient AS T1 JOIN prescribes AS T2 ON T1.SSN  =  T2.patient JOIN physician AS T3 ON T2.physician  =  T3.employeeid WHERE T3.name = ""John Dorian""",hospital_1,"['prescribes', 'patient', 'physician']"
SELECT COUNT( * ) FROM physician JOIN prescribes ON physician.employeeid = prescribes.physician WHERE physician.name = 'John',False,Find the number of patients' prescriptions physician John Dorian made.,2056,"SELECT count(T1.SSN) FROM patient AS T1 JOIN prescribes AS T2 ON T1.SSN  =  T2.patient JOIN physician AS T3 ON T2.physician  =  T3.employeeid WHERE T3.name = ""John Dorian""",hospital_1,"['prescribes', 'patient', 'physician']"
SELECT physician.name FROM prescribes JOIN medication ON prescribes.medication = medication.code JOIN prescribes ON physician.employeeid = prescribes.physician WHERE medication.name = 'Thesisin',False,What is the names of the physicians who prescribe medication Thesisin?,2059,"SELECT DISTINCT T1.name FROM physician AS T1 JOIN prescribes AS T2 ON T1.employeeid = T2.physician JOIN medication AS T3 ON T3.code = T2.medication WHERE T3.name  =  ""Thesisin""",hospital_1,"['prescribes', 'medication', 'physician']"
SELECT physician.name FROM physician JOIN prescribes ON physician.employeeid = prescribes.physician WHERE medication.name = 'Thesisin',False,List the names of all the physicians who prescribe Thesisin as medication.,2060,"SELECT DISTINCT T1.name FROM physician AS T1 JOIN prescribes AS T2 ON T1.employeeid = T2.physician JOIN medication AS T3 ON T3.code = T2.medication WHERE T3.name  =  ""Thesisin""",hospital_1,"['prescribes', 'medication', 'physician']"
"SELECT physician.name , physician.position FROM physician JOIN prescribes ON physician.employeeid = prescribes.physician WHERE medication.brand = 'X'",False,Find the name and position of physicians who prescribe some medication whose brand is X?,2061,"SELECT DISTINCT T1.name ,  T1.position FROM physician AS T1 JOIN prescribes AS T2 ON T1.employeeid = T2.physician JOIN medication AS T3 ON T3.code = T2.medication WHERE T3.Brand  =  ""X""",hospital_1,"['prescribes', 'medication', 'physician']"
SELECT AVG( procedures.cost ) FROM procedures JOIN trained_in ON procedures.code = trained_in.treatment JOIN procedures ON procedures.code = trained_in.physician WHERE physician.name = 'John Wen',False,What is the average cost of procedures that physician John Wen was trained in?,2069,"SELECT avg(T3.cost) FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  ""John Wen""",hospital_1,"['trained_in', 'procedures', 'physician']"
SELECT AVG( procedures.cost ) FROM procedures JOIN trained_in ON procedures.code = trained_in.physician JOIN procedures ON procedures.code = trained_in.physician WHERE physician.name = 'John Wen',False,Compute the mean price of procedures physician John Wen was trained in.,2070,"SELECT avg(T3.cost) FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  ""John Wen""",hospital_1,"['trained_in', 'procedures', 'physician']"
SELECT procedures.name FROM procedures JOIN trained_in ON procedures.code = trained_in.physician JOIN physician ON trained_in.physician = physician.employeeid WHERE physician.name = 'John Wen' OR procedures.cost > 1000,False,Find all procedures which cost more than 1000 or which physician John Wen was trained in.,2073,"SELECT name FROM procedures WHERE cost  >  1000 UNION SELECT T3.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  ""John Wen""",hospital_1,"['trained_in', 'procedures', 'physician']"
SELECT procedures.name FROM trained_in JOIN physician ON trained_in.treatment = physician.employeeid JOIN trained_in ON physician.employeeid = trained_in.physician WHERE physician.name = 'John Wen' OR procedures.cost > 1000,False,What are the procedures that cost more than 1000 or are specialized in by physician John Wen?,2074,"SELECT name FROM procedures WHERE cost  >  1000 UNION SELECT T3.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  ""John Wen""",hospital_1,"['physician', 'trained_in', 'procedures']"
SELECT procedures.name FROM procedures JOIN trained_in ON procedures.code = trained_in.treatment JOIN physician ON physician.employeeid = trained_in.physician WHERE physician.name = 'John Wen' AND procedures.cost > 1000,False,Find the names of all procedures which cost more than 1000 but which physician John Wen was not trained in?,2075,"SELECT name FROM procedures WHERE cost  >  1000 EXCEPT SELECT T3.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  ""John Wen""",hospital_1,"['trained_in', 'procedures', 'physician']"
SELECT procedures.name FROM procedures JOIN trained_in ON procedures.code = trained_in.treatment JOIN physician ON trained_in.physician = physician.employeeid JOIN procedures ON procedures.code = trained_in.treatment JOIN physician ON physician.employeeid = trained_in.physician WHERE physician.name != 'John Wen' AND procedures.cost > 1000,False,"Among the procedures that cost more than 1000, which were not specialized in by physician John Wen?",2076,"SELECT name FROM procedures WHERE cost  >  1000 EXCEPT SELECT T3.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  ""John Wen""",hospital_1,"['trained_in', 'procedures', 'physician']"
SELECT procedures.name FROM procedures JOIN trained_in ON procedures.code = trained_in.treatment JOIN physician ON trained_in.physician = physician.employeeid WHERE physician.name = 'John Wen' AND procedures.cost<5000,False,Find the names of all procedures such that the cost is less than 5000 and physician John Wen was trained in.,2077,"SELECT name FROM procedures WHERE cost  <  5000 INTERSECT SELECT T3.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  ""John Wen""",hospital_1,"['trained_in', 'procedures', 'physician']"
SELECT procedures.name FROM trained_in JOIN physician ON trained_in.physician = physician.employeeid WHERE procedures.cost<5000 AND physician.name = 'John Wen' AND procedures.cost<5000,False,What procedures cost less than 5000 and have John Wen as a trained physician?,2078,"SELECT name FROM procedures WHERE cost  <  5000 INTERSECT SELECT T3.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  ""John Wen""",hospital_1,"['physician', 'trained_in', 'procedures']"
SELECT patient.name FROM patient,False,Find the names of patients who are not using the medication of Procrastin-X.,2079,SELECT name FROM patient EXCEPT SELECT T1.name FROM patient AS T1 JOIN Prescribes AS T2 ON T2.Patient  =  T1.SSN JOIN Medication AS T3 ON T2.Medication  =  T3.Code WHERE T3.name  =  'Procrastin-X',hospital_1,"['prescribes', 'patient', 'medication']"
SELECT patient.name FROM patient,False,What are the names of patients who are not taking the medication of Procrastin-X.,2080,SELECT name FROM patient EXCEPT SELECT T1.name FROM patient AS T1 JOIN Prescribes AS T2 ON T2.Patient  =  T1.SSN JOIN Medication AS T3 ON T2.Medication  =  T3.Code WHERE T3.name  =  'Procrastin-X',hospital_1,"['prescribes', 'patient', 'medication']"
SELECT company.headquarters FROM company WHERE company.industry = 'banking' INTERSECT SELECT company.headquarters FROM company WHERE company.industry = 'oil and gas',False,Show the headquarters that have both companies in banking industry and companies in oil and gas industry.,2088,"SELECT Headquarters FROM company WHERE Industry  =  ""Banking"" INTERSECT SELECT Headquarters FROM company WHERE Industry  =  ""Oil and gas""",company_employee,['company']
"SELECT company.name , people.name FROM employment JOIN people ON employment.people_id = people.people_id JOIN company ON employment.company_id = company.company_id ORDER BY employment.year_working DESC",False,Show names of companies and that of employees in descending order of number of years working for that employee.,2089,"SELECT T3.Name ,  T2.Name FROM employment AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID JOIN company AS T3 ON T1.Company_ID  =  T3.Company_ID ORDER BY T1.Year_working",company_employee,"['people', 'company', 'employment']"
SELECT film_market_estimation.year FROM film_market_estimation JOIN market ON film_market_estimation.market_id = market.market_id WHERE market.country = 'Japan',False,"Please list the years of film market estimations when the market is in country ""Japan"" in descending order.",2093,"SELECT T1.Year FROM film_market_estimation AS T1 JOIN market AS T2 ON T1.Market_ID  =  T2.Market_ID WHERE T2.Country  =  ""Japan"" ORDER BY T1.Year DESC",film_rank,"['market', 'film_market_estimation']"
SELECT film_market_estimation.year FROM film_market_estimation JOIN market ON film_market_estimation.market_id = market.market_id WHERE market.country = 'Japan',False,"What are the years of film market estimation for the market of Japan, ordered by year descending?",2094,"SELECT T1.Year FROM film_market_estimation AS T1 JOIN market AS T2 ON T1.Market_ID  =  T2.Market_ID WHERE T2.Country  =  ""Japan"" ORDER BY T1.Year DESC",film_rank,"['market', 'film_market_estimation']"
SELECT film.studio FROM film EXCEPT SELECT film.studio FROM film WHERE film.director != 'Walter Hill',False,"Show the studios that have not produced films with director ""Walter Hill"".",2101,"SELECT Studio FROM film EXCEPT SELECT Studio FROM film WHERE Director  =  ""Walter Hill""",film_rank,['film']
"SELECT student.fname , student.lname FROM student JOIN member_of_club ON student.stuid = member_of_club.stuid JOIN club ON club.clubid = member_of_club.clubid WHERE club.clubname = 'Bootup Baltimore' AND student.sex = 'f'",False,"Find all the female members of club ""Bootup Baltimore"". Show the first name and last name.",2117,"SELECT t3.fname ,  t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  ""Bootup Baltimore"" AND t3.sex  =  ""F""",club_1,"['student', 'member_of_club', 'club']"
"SELECT DISTINCT student.fname , student.lname FROM student JOIN member_of_club ON student.stuid = member_of_club.stuid JOIN club ON club.clubid = member_of_club.clubid WHERE club.clubname = 'Bootup Baltimore' AND student.sex = 'f'",False,"Give me the first name and last name for all the female members of the club ""Bootup Baltimore"".",2118,"SELECT t3.fname ,  t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  ""Bootup Baltimore"" AND t3.sex  =  ""F""",club_1,"['student', 'member_of_club', 'club']"
"SELECT DISTINCT student.fname , student.lname FROM club JOIN member_of_club ON club.clubid = member_of_club.clubid JOIN student ON student.stuid = member_of_club.stuid WHERE club.clubname = 'Bootup Baltimore' AND member_of_club.position = 'president'",False,"What are the first and last name of the president of the club ""Bootup Baltimore""?",2123,"SELECT t3.fname ,  t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  ""Bootup Baltimore"" AND t2.position  =  ""President""",club_1,"['student', 'member_of_club', 'club']"
"SELECT student.fname , student.lname FROM club JOIN member_of_club ON club.clubid = member_of_club.clubid WHERE club.clubname = 'Bootup Baltimore'",False,"Who is the president of the club ""Bootup Baltimore""? Give me the first and last name.",2124,"SELECT t3.fname ,  t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  ""Bootup Baltimore"" AND t2.position  =  ""President""",club_1,"['student', 'member_of_club', 'club']"
"SELECT student.fname , student.lname FROM club JOIN member_of_club ON club.clubid = member_of_club.clubid JOIN student ON member_of_club.stuid = student.stuid WHERE club.clubdesc = 'CTO' AND club.clubname = 'Hopkins Student Enterprises'",False,"Find the first name and last name for the ""CTO"" of the club ""Hopkins Student Enterprises""?",2126,"SELECT t3.fname ,  t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  ""Hopkins Student Enterprises"" AND t2.position  =  ""CTO""",club_1,"['student', 'member_of_club', 'club']"
SELECT COUNT( * ) FROM student JOIN member_of_club ON student.stuid = member_of_club.stuid JOIN club ON member_of_club.clubid = club.clubid WHERE student.fname = 'Eric Tai',False,"How many clubs does the student named ""Eric Tai"" belong to?",2135,"SELECT count(DISTINCT t1.clubname) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.fname  =  ""Eric"" AND t3.lname  =  ""Tai""",club_1,"['student', 'member_of_club', 'club']"
SELECT SUM( grants.grant_amount ) FROM grants JOIN organisation_types ON grants.organisation_id = organisation_types.organisation_type WHERE organisation_types.organisation_type_description = 'research',False,What is the total grant amount of the organisations described as research?,2147,SELECT sum(grant_amount) FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id  =  T2.organisation_id JOIN organisation_Types AS T3 ON T2.organisation_type  =  T3.organisation_type WHERE T3.organisation_type_description  =  'Research',tracking_grants_for_research,"['grants', 'organisations', 'organisation_types']"
SELECT SUM( grants.grant_amount ) FROM grants WHERE grants.grant_id = 'research',False,What is the total amount of grant money for research?,2148,SELECT sum(grant_amount) FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id  =  T2.organisation_id JOIN organisation_Types AS T3 ON T2.organisation_type  =  T3.organisation_type WHERE T3.organisation_type_description  =  'Research',tracking_grants_for_research,"['organisation_types', 'grants', 'organisations']"
SELECT projects.project_details FROM projects JOIN project_staff ON projects.project_id = project_staff.project_id WHERE project_staff.role_code = 'researcher',False,List the project details of the projects which did not hire any staff for a researcher role.,2149,SELECT project_details FROM Projects WHERE project_id NOT IN ( SELECT project_id FROM Project_Staff WHERE role_code  =  'researcher' ),tracking_grants_for_research,"['projects', 'project_staff']"
SELECT projects.project_details FROM projects JOIN project_staff ON projects.project_id = project_staff.project_id WHERE project_staff.role_code = (SELECT project_staff.project_id FROM project_staff UNION SELECT project_staff.role_code FROM project_staff),False,What are the details for all projects that did not hire any staff in a research role?,2150,SELECT project_details FROM Projects WHERE project_id NOT IN ( SELECT project_id FROM Project_Staff WHERE role_code  =  'researcher' ),tracking_grants_for_research,"['projects', 'project_staff']"
"SELECT project_staff.project_id , COUNT( * ) FROM project_staff GROUP BY project_staff.project_id",False,How many staff does each project has? List the project id and the number in an ascending order.,2151,"SELECT T1.project_id ,  count(*) FROM Project_Staff AS T1 JOIN Projects AS T2 ON T1.project_id  =  T2.project_id GROUP BY T1.project_id ORDER BY count(*) ASC",tracking_grants_for_research,"['projects', 'project_staff']"
"SELECT project_staff.project_id , COUNT( * ) FROM project_staff GROUP BY project_staff.project_id",False,"For each project id, how many staff does it have? List them in increasing order.",2152,"SELECT T1.project_id ,  count(*) FROM Project_Staff AS T1 JOIN Projects AS T2 ON T1.project_id  =  T2.project_id GROUP BY T1.project_id ORDER BY count(*) ASC",tracking_grants_for_research,"['projects', 'project_staff']"
SELECT projects.project_details FROM projects JOIN project_outcomes ON projects.project_id = project_outcomes.project_id,False,Which projects have no outcome? List the project details.,2153,SELECT project_details FROM Projects WHERE project_id NOT IN ( SELECT project_id FROM Project_outcomes ),tracking_grants_for_research,"['projects', 'project_outcomes']"
SELECT projects.project_details FROM projects EXCEPT SELECT projects.project_details FROM projects JOIN project_outcomes ON projects.project_id = project_outcomes.project_id,False,What are the details of the project with no outcomes?,2154,SELECT project_details FROM Projects WHERE project_id NOT IN ( SELECT project_id FROM Project_outcomes ),tracking_grants_for_research,"['projects', 'project_outcomes']"
"SELECT COUNT( * ) , grants.grant_id FROM documents JOIN grants ON documents.grant_id = grants.grant_id GROUP BY grants.grant_id HAVING COUNT( * ) > 1",False,How many documents can one grant have at most? List the grant id and number.,2155,"SELECT grant_id ,  count(*) FROM Documents GROUP BY grant_id ORDER BY count(*) DESC LIMIT 1",tracking_grants_for_research,"['documents', 'grants']"
SELECT organisations.organisation_details FROM organisations WHERE organisations.organisation_type = 'Sponsor' ORDER BY organisations.organisation_details ASC,False,What are all the details of the organisations described as 'Sponsor'? Sort the result in an ascending order.,2157,SELECT organisation_details FROM Organisations AS T1 JOIN organisation_Types AS T2 ON T1.organisation_type  =  T2.organisation_type WHERE T2.organisation_type_description  =  'Sponsor' ORDER BY organisation_details,tracking_grants_for_research,"['organisation_types', 'organisations']"
SELECT organisations.organisation_details FROM organisations WHERE organisations.organisation_type = 'Sponsors' ORDER BY organisations.organisation_details ASC,False,What are the details of all organizations that are described as Sponsors and sort the results in ascending order?,2158,SELECT organisation_details FROM Organisations AS T1 JOIN organisation_Types AS T2 ON T1.organisation_type  =  T2.organisation_type WHERE T2.organisation_type_description  =  'Sponsor' ORDER BY organisation_details,tracking_grants_for_research,"['organisation_types', 'organisations']"
SELECT projects.project_details FROM projects ORDER BY projects.organisation_id ASC,False,List the project details of the projects launched by the organisation,2161,SELECT project_details FROM Projects WHERE organisation_id IN ( SELECT organisation_id FROM Projects GROUP BY organisation_id ORDER BY count(*) DESC LIMIT 1 ),tracking_grants_for_research,['projects']
SELECT projects.project_details FROM projects GROUP BY projects.organisation_id ORDER BY COUNT( * ) DESC LIMIT 1,False,What are the details for the projects which were launched by the organization with the most projects?,2162,SELECT project_details FROM Projects WHERE organisation_id IN ( SELECT organisation_id FROM Projects GROUP BY organisation_id ORDER BY count(*) DESC LIMIT 1 ),tracking_grants_for_research,['projects']
SELECT COUNT( * ) FROM person WHERE person.age > (SELECT MAX( person.age ) FROM person WHERE person.job = 'engineers'),False,Find the number of people whose age is greater than all engineers.,2167,SELECT count(*) FROM Person WHERE age  >  (SELECT max(age) FROM person WHERE job  =  'engineer'),network_2,['person']
"SELECT COUNT( * ) , person.job FROM person WHERE person.job = 'engineer' GROUP BY person.job",False,How many people are older than every engineer?,2168,SELECT count(*) FROM Person WHERE age  >  (SELECT max(age) FROM person WHERE job  =  'engineer'),network_2,['person']
"SELECT person.name , person.age FROM person JOIN personfriend ON person.name = personfriend.name WHERE personfriend.friend = 'Dan' OR personfriend.friend = 'Alice'",False,Find the name and age of the person who is a friend of Dan or Alice.,2169,"SELECT DISTINCT T1.name ,  T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend  =  'Dan' OR T2.friend  =  'Alice'",network_2,"['personfriend', 'person']"
"SELECT DISTINCT personfriend.name , person.age FROM person JOIN personfriend ON person.name = personfriend.name WHERE person.gender = 'Dan' OR person.gender = 'alice'",False,What are the different names and ages of every friend of either Dan or alice?,2170,"SELECT DISTINCT T1.name ,  T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend  =  'Dan' OR T2.friend  =  'Alice'",network_2,"['personfriend', 'person']"
SELECT person.name FROM person WHERE person.name NOT IN (SELECT personfriend.name FROM personfriend WHERE personfriend.friend = 'student'),False,Find the name of the person who has no student friends.,2171,SELECT name FROM person EXCEPT SELECT T2.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T1.job  =  'student',network_2,"['personfriend', 'person']"
SELECT person.name FROM person EXCEPT SELECT personfriend.name FROM personfriend WHERE personfriend.friend = 'students',False,What are the names of the people who have no friends who are students?,2172,SELECT name FROM person EXCEPT SELECT T2.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T1.job  =  'student',network_2,"['personfriend', 'person']"
SELECT person.name FROM person WHERE personfriend.friend NOT IN (SELECT personfriend.name FROM personfriend),False,What are the names of all people who do not have friends?,2174,SELECT name FROM person EXCEPT SELECT name FROM PersonFriend,network_2,"['personfriend', 'person']"
SELECT customers.customer_name FROM customers JOIN mailshot_customers ON customers.customer_id = mailshot_customers.customer_id GROUP BY mailshot_customers.customer_id HAVING COUNT( * ) >= 2,False,Show the names of customers who have at least 2 mailshots with outcome code 'Order'.,2177,SELECT T2.customer_name FROM mailshot_customers AS T1 JOIN customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE outcome_code  =  'Order' GROUP BY T1.customer_id HAVING count(*)  >=  2,customers_campaigns_ecommerce,"['customers', 'mailshot_customers']"
SELECT department.dname FROM minor_in JOIN department ON minor_in.dno = department.dno GROUP BY minor_in.dno HAVING COUNT( * ) = 1,False,What is the name of the department htat has no students minoring in it?,2179,SELECT DName FROM DEPARTMENT EXCEPT SELECT T1.DName FROM DEPARTMENT AS T1 JOIN MINOR_IN AS T2 ON T1.DNO  =  T2.DNO,college_3,"['minor_in', 'department']"
SELECT DISTINCT student.fname FROM student JOIN enrolled_in ON student.stuid = enrolled_in.stuid JOIN gradeconversion ON gradeconversion.lettergrade = enrolled_in.stuid WHERE gradeconversion.gradepoint >= 3.8 GROUP BY enrolled_in.stuid,False,Find the distinct student first names of all students that have grade point at least 3.8 in one course.,2182,SELECT DISTINCT T3.Fname FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade  =  T2.lettergrade AND T1.StuID  =  T3.StuID WHERE T2.gradepoint  >=  3.8,college_3,"['enrolled_in', 'student', 'gradeconversion']"
SELECT DISTINCT student.fname FROM enrolled_in JOIN student ON enrolled_in.stuid = student.stuid WHERE gradeconversion.gradepoint >= 3.8 GROUP BY enrolled_in.stuid HAVING COUNT( * ) >= 3,False,What are the distinct first names for students with a grade point of 3.8 or above in at least one course?,2183,SELECT DISTINCT T3.Fname FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade  =  T2.lettergrade AND T1.StuID  =  T3.StuID WHERE T2.gradepoint  >=  3.8,college_3,"['enrolled_in', 'student', 'gradeconversion']"
SELECT faculty.lname FROM faculty JOIN member_of ON faculty.facid = member_of.facid JOIN department ON member_of.dno = department.dno WHERE department.dname = 'computer science',False,Find the last names of faculties who are members of computer science department.,2184,"SELECT T2.Lname FROM DEPARTMENT AS T1 JOIN FACULTY AS T2 ON T1.DNO  =  T3.DNO JOIN MEMBER_OF AS T3 ON T2.FacID  =  T3.FacID WHERE T1.DName  =  ""Computer Science""",college_3,"['member_of', 'faculty', 'department']"
SELECT faculty.lname FROM faculty JOIN member_of ON faculty.facid = member_of.facid JOIN department ON member_of.dno = department.dno WHERE department.dname = 'computer science',False,What are the last names of faculty who are part of the computer science department?,2185,"SELECT T2.Lname FROM DEPARTMENT AS T1 JOIN FACULTY AS T2 ON T1.DNO  =  T3.DNO JOIN MEMBER_OF AS T3 ON T2.FacID  =  T3.FacID WHERE T1.DName  =  ""Computer Science""",college_3,"['member_of', 'faculty', 'department']"
SELECT AVG( gradeconversion.gradepoint ) FROM student WHERE student.lname = 'Smith',False,Find the average grade point of student whose last name is Smith.,2186,"SELECT avg(T2.gradepoint) FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade  =  T2.lettergrade AND T1.StuID  =  T3.StuID WHERE T3.LName  =  ""Smith""",college_3,"['enrolled_in', 'student', 'gradeconversion']"
SELECT AVG( gradeconversion.gradepoint ) FROM student WHERE student.lname = 'Smith',False,What is the average gradepoint for students with the last name Smith?,2187,"SELECT avg(T2.gradepoint) FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade  =  T2.lettergrade AND T1.StuID  =  T3.StuID WHERE T3.LName  =  ""Smith""",college_3,"['enrolled_in', 'student', 'gradeconversion']"
"SELECT MAX( gradeconversion.gradepoint ) , MIN( gradeconversion.gradepoint ) FROM student WHERE student.city_code = 'NYC'",False,What is the maximum and minimum grade point of students who live in NYC?,2188,"SELECT max(T2.gradepoint) ,  min(T2.gradepoint) FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade  =  T2.lettergrade AND T1.StuID  =  T3.StuID WHERE T3.city_code  =  ""NYC""",college_3,"['enrolled_in', 'student', 'gradeconversion']"
"SELECT MAX( gradeconversion.gradepoint ) , MIN( gradeconversion.gradepoint ) FROM student WHERE student.city_code = 'NYC'",False,Give the maximum and minimum gradepoints for students living in NYC?,2189,"SELECT max(T2.gradepoint) ,  min(T2.gradepoint) FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade  =  T2.lettergrade AND T1.StuID  =  T3.StuID WHERE T3.city_code  =  ""NYC""",college_3,"['enrolled_in', 'student', 'gradeconversion']"
SELECT course.cname FROM course WHERE course.credits = '4' UNION SELECT course.cname FROM course WHERE course.credits = 3 AND course.hours = '4',False,Find the names of courses that have either 3 credits or 1 credit but 4 hours.,2190,SELECT CName FROM COURSE WHERE Credits  =  3 UNION SELECT CName FROM COURSE WHERE Credits  =  1 AND Hours  =  4,college_3,['course']
"SELECT course.cname FROM course JOIN 3 credits, or 1 ON course.credits = 3 credits, or 1 UNION SELECT course.cname FROM course WHERE course.credits = 1 AND course.hours = 4",False,"What are the names of courses that give either 3 credits, or 1 credit and 4 hours?",2191,SELECT CName FROM COURSE WHERE Credits  =  3 UNION SELECT CName FROM COURSE WHERE Credits  =  1 AND Hours  =  4,college_3,"['or', 'course']"
SELECT tryout.cname FROM tryout JOIN player ON tryout.pid = player.pid WHERE player.pname LIKE '%D%',False,Which colleges do the tryout players whose name starts with letter D go to?,2214,SELECT T1.cName FROM  tryout AS T1 JOIN player AS T2 ON T1.pID  =  T2.pID WHERE T2.pName LIKE 'D%',soccer_2,"['player', 'tryout']"
SELECT tryout.cname FROM tryout JOIN player ON tryout.pid = player.pid WHERE player.pname LIKE '%D%',False,Which colleges does each player with a name that starts with the letter D  who tried out go to?,2215,SELECT T1.cName FROM  tryout AS T1 JOIN player AS T2 ON T1.pID  =  T2.pID WHERE T2.pName LIKE 'D%',soccer_2,"['player', 'tryout']"
SELECT tryout.cname FROM tryout WHERE tryout.ppos = 'goal' INTERSECT SELECT tryout.cname FROM tryout WHERE tryout.ppos = 'mid',False,What are the names of all schools that have students trying out for the position of goal and 'mid'-field.,2217,SELECT cName FROM  tryout WHERE pPos  =  'goalie' INTERSECT SELECT cName FROM  tryout WHERE pPos  =  'mid',soccer_2,['tryout']
SELECT tryout.cname FROM tryout WHERE tryout.ppos = 'mid' EXCEPT SELECT tryout.cname FROM tryout WHERE tryout.ppos = 'goalies',False,What are the names of the schools with some players in the mid position but no goalies?,2219,SELECT cName FROM  tryout WHERE pPos  =  'mid' EXCEPT SELECT cName FROM  tryout WHERE pPos  =  'goalie',soccer_2,['tryout']
"SELECT COUNT( * ) , dorm.dormid FROM dorm JOIN has_amenity ON dorm.dormid = has_amenity.dormid GROUP BY dorm.dormid",False,"For each dorm, how many amenities does it have?",2263,"SELECT count(*) ,  T1.dormid FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid WHERE T1.student_capacity  >  100 GROUP BY T1.dormid",dorm_1,"['has_amenity', 'dorm']"
SELECT COUNT( * ) FROM student JOIN lives_in ON student.stuid = lives_in.stuid JOIN dorm ON dorm.dormid = lives_in.dormid WHERE dorm.gender = 'm',False,Find the total number of students living in the male dorm (with gender M).,2266,SELECT count(*) FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid WHERE T3.gender  =  'M',dorm_1,"['student', 'dorm', 'lives_in']"
SELECT COUNT( * ) FROM student JOIN lives_in ON student.stuid = lives_in.stuid JOIN dorm ON dorm.dormid = lives_in.dormid WHERE dorm.gender = 'm',False,What are the total number of students who are living in a male dorm?,2267,SELECT count(*) FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid WHERE T3.gender  =  'M',dorm_1,"['student', 'dorm', 'lives_in']"
SELECT COUNT( * ) FROM student JOIN lives_in ON student.stuid = lives_in.stuid JOIN dorm ON dorm.dormid = lives_in.dormid WHERE dorm.dorm_name = 'Smith Hall' AND student.sex = 'f',False,How many female students live in Smith Hall?,2269,SELECT count(*) FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid WHERE T3.dorm_name  =  'Smith Hall' AND T1.sex  =  'F',dorm_1,"['student', 'dorm', 'lives_in']"
SELECT customers.state FROM customers GROUP BY customers.state ORDER BY COUNT( * ) DESC LIMIT 1,False,Which state has the most customers?,2284,SELECT state FROM customers GROUP BY state ORDER BY count(*) LIMIT 1,customer_complaints,['customers']
SELECT customers.state FROM customers GROUP BY customers.state ORDER BY COUNT( * ) DESC LIMIT 1,False,Give the state that has the most customers.,2285,SELECT state FROM customers GROUP BY state ORDER BY count(*) LIMIT 1,customer_complaints,['customers']
SELECT sportsinfo.onscholarship FROM sportsinfo JOIN student ON sportsinfo.stuid = student.stuid WHERE student.major = 600 AND sportsinfo.onscholarship = 'y',False,Show student ids who are on scholarship and have major 600.,2292,SELECT StuID FROM Student WHERE major  =  600 INTERSECT SELECT StuID FROM Sportsinfo WHERE onscholarship  =  'Y',game_1,"['student', 'sportsinfo']"
SELECT sportsinfo.stuid FROM sportsinfo JOIN student ON sportsinfo.stuid = student.stuid WHERE sportsinfo.onscholarship = 'y' AND sportsinfo.onscholarship = 'y' AND student.major = 600,False,What are the student ids for those on scholarship in major number 600?,2293,SELECT StuID FROM Student WHERE major  =  600 INTERSECT SELECT StuID FROM Sportsinfo WHERE onscholarship  =  'Y',game_1,"['student', 'sportsinfo']"
SELECT sportsinfo.stuid FROM sportsinfo WHERE student.sex = 'f' AND sportsinfo.sportname = 'football',False,Show student ids who are female and play football.,2294,"SELECT StuID FROM Student WHERE sex  =  'F' INTERSECT SELECT StuID FROM Sportsinfo WHERE sportname  =  ""Football""",game_1,"['student', 'sportsinfo']"
SELECT sportsinfo.stuid FROM sportsinfo WHERE student.sex = 'f' AND sportsinfo.sportname = 'football',False,What are the ids of all female students who play football?,2295,"SELECT StuID FROM Student WHERE sex  =  'F' INTERSECT SELECT StuID FROM Sportsinfo WHERE sportname  =  ""Football""",game_1,"['student', 'sportsinfo']"
SELECT student.stuid FROM sportsinfo JOIN student ON sportsinfo.stuid = student.stuid WHERE student.sex = 'm' AND sportsinfo.sportname != 'football',False,Show all male student ids who don't play football.,2296,"SELECT StuID FROM Student WHERE sex  =  'M' EXCEPT SELECT StuID FROM Sportsinfo WHERE sportname  =  ""Football""",game_1,"['student', 'sportsinfo']"
SELECT sportsinfo.stuid FROM sportsinfo,False,What are the ids of all male students who do not play football?,2297,"SELECT StuID FROM Student WHERE sex  =  'M' EXCEPT SELECT StuID FROM Sportsinfo WHERE sportname  =  ""Football""",game_1,"['student', 'sportsinfo']"
SELECT student.stuid FROM student WHERE student.stuid NOT IN (SELECT sportsinfo.stuid FROM plays_games UNION SELECT plays_games.stuid FROM plays_games),False,What are the ids of all students who are not video game players?,2301,SELECT StuID FROM Student EXCEPT SELECT StuID FROM Plays_games,game_1,"['student', 'plays_games']"
SELECT plays_games.stuid FROM plays_games INTERSECT SELECT sportsinfo.sportname FROM sportsinfo,False,Show ids of students who play video game and play sports.,2302,SELECT StuID FROM Sportsinfo INTERSECT SELECT StuID FROM Plays_games,game_1,"['sportsinfo', 'plays_games']"
SELECT plays_games.stuid FROM plays_games INTERSECT SELECT sportsinfo.sportname FROM sportsinfo,False,What are the ids of all students who played video games and sports?,2303,SELECT StuID FROM Sportsinfo INTERSECT SELECT StuID FROM Plays_games,game_1,"['sportsinfo', 'plays_games']"
SELECT services.service_name FROM services WHERE services.service_id NOT IN (SELECT forms.service_id FROM forms),False,Find name of the services that has never been used.,2310,SELECT service_name FROM services EXCEPT SELECT t1.service_name FROM services AS t1 JOIN party_services AS t2 ON t1.service_id  =  t2.service_id,e_government,"['party_services', 'services', 'forms']"
SELECT services.service_name FROM services WHERE services.service_id NOT IN (SELECT forms.service_id FROM forms),False,What are the names of the services that have never been used?,2311,SELECT service_name FROM services EXCEPT SELECT t1.service_name FROM services AS t1 JOIN party_services AS t2 ON t1.service_id  =  t2.service_id,e_government,"['party_services', 'services', 'forms']"
"SELECT addresses.town_city , addresses.state_province_county FROM addresses",False,Find the name of all the cities and states.,2312,SELECT town_city FROM addresses UNION SELECT state_province_county FROM addresses,e_government,['addresses']
"SELECT addresses.town_city , addresses.state_province_county FROM addresses",False,What are the names of all cities and states?,2313,SELECT town_city FROM addresses UNION SELECT state_province_county FROM addresses,e_government,['addresses']
SELECT documents.document_id FROM documents JOIN documents_with_expenses ON documents.document_id = documents_with_expenses.document_id WHERE documents.document_type_code = 'CV',False,Show ids for all documents in type CV without expense budgets.,2326,"SELECT document_id FROM Documents WHERE document_type_code  =  ""CV"" EXCEPT SELECT document_id FROM Documents_with_expenses",cre_Docs_and_Epenses,"['documents', 'documents_with_expenses']"
SELECT documents_with_expenses.document_id FROM documents_with_expenses INTERSECT SELECT documents.document_id FROM documents WHERE documents.document_type_code = 'CV',False,What are the ids of documents with the type code CV that do not have expenses.,2327,"SELECT document_id FROM Documents WHERE document_type_code  =  ""CV"" EXCEPT SELECT document_id FROM Documents_with_expenses",cre_Docs_and_Epenses,"['documents', 'documents_with_expenses']"
SELECT DISTINCT documents.document_name FROM documents_with_expenses JOIN documents ON documents_with_expenses.document_id = documents.document_id WHERE documents.document_name LIKE '%s%',False,Give the ids of documents that have expenses and contain the letter s in their names.,2329,SELECT T1.document_id FROM Documents AS T1 JOIN Documents_with_expenses AS T2 ON T1.document_id  =  T2.document_id WHERE T1.document_name LIKE '%s%',cre_Docs_and_Epenses,"['documents', 'documents_with_expenses']"
SELECT accounts.account_details FROM accounts WHERE accounts.account_details LIKE '%5%',False,What are the account details with the largest value or with value having char '5' in it?,2330,"SELECT max(Account_details) FROM Accounts UNION SELECT Account_details FROM Accounts WHERE Account_details LIKE ""%5%""",cre_Docs_and_Epenses,['accounts']
SELECT accounts.account_details FROM accounts WHERE accounts.account_details LIKE '%5%',False,"Return the account details with the greatest value, as well as those that include the character 5.",2331,"SELECT max(Account_details) FROM Accounts UNION SELECT Account_details FROM Accounts WHERE Account_details LIKE ""%5%""",cre_Docs_and_Epenses,['accounts']
"SELECT lessons.lesson_id FROM lessons JOIN staff ON lessons.staff_id = staff.staff_id WHERE staff.first_name = 'Janessa, last name as Sawayn' AND staff.last_name = 's'",False,"List lesson id of all lessons taught by staff with first name as Janessa, last name as Sawayn and nickname containing letter 's'.",2338,"SELECT T1.lesson_id FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = ""Janessa"" AND T2.last_name = ""Sawayn"" AND nickname LIKE ""%s%"";",driving_school,"['lessons', 'staff']"
SELECT lessons.lesson_id FROM lessons JOIN staff ON lessons.staff_id = staff.staff_id WHERE staff.nickname LIKE '%s%',False,What are the the lesson ids of all staff taught by Janessa Sawayn whose nickname has the letter s?,2339,"SELECT T1.lesson_id FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = ""Janessa"" AND T2.last_name = ""Sawayn"" AND nickname LIKE ""%s%"";",driving_school,"['lessons', 'staff']"
SELECT customers.last_name FROM customers UNION SELECT staff.last_name FROM staff,False,What are the last names that are used by customers and staff?,2343,SELECT last_name FROM Customers INTERSECT SELECT last_name FROM Staff,driving_school,"['customers', 'staff']"
SELECT staff.first_name FROM staff WHERE staff.staff_id NOT IN (SELECT lessons.staff_id FROM lessons),False,What is the first name of the staff who did not give any lesson?,2344,SELECT first_name FROM Staff EXCEPT SELECT T2.first_name FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id  =  T2.staff_id,driving_school,"['lessons', 'staff']"
SELECT staff.first_name FROM staff WHERE staff.staff_id NOT IN (SELECT lessons.staff_id FROM lessons),False,What is the first name of all employees who do not give any lessons?,2345,SELECT first_name FROM Staff EXCEPT SELECT T2.first_name FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id  =  T2.staff_id,driving_school,"['lessons', 'staff']"
"SELECT COUNT( * ) , airports.city FROM airports WHERE airports.country = 'US' GROUP BY airports.city ORDER BY COUNT( * ) DESC",False,How many airports are there per city in the US ordered from most to least?,2349,"SELECT count(*) ,  city FROM airports WHERE country  =  'United States' GROUP BY city ORDER BY count(*) DESC",flight_4,['airports']
"SELECT routes.src_ap , airports.name , COUNT( * ) FROM routes JOIN airports ON routes.src_apid = airports.apid GROUP BY routes.src_ap ORDER BY COUNT( * ) DESC",False,"Find the number of routes and airport name for each source airport, order the results by decreasing number of routes.",2350,"SELECT count(*) ,  T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.src_apid GROUP BY T1.name ORDER BY count(*) DESC",flight_4,"['routes', 'airports']"
"SELECT COUNT( * ) , airports.name FROM airports JOIN routes ON airports.apid = routes.src_apid GROUP BY airports.name ORDER BY COUNT( * ) DESC LIMIT 1",False,"For each  airport name, how many routes start at that airport, ordered from most to least?",2351,"SELECT count(*) ,  T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.src_apid GROUP BY T1.name ORDER BY count(*) DESC",flight_4,"['routes', 'airports']"
SELECT COUNT( * ) FROM routes JOIN airlines ON routes.alid = airlines.alid JOIN airports ON routes.dst_apid = airports.apid WHERE airports.country = 'American Airlines' AND airlines.country = 'Italy',False,Return the number of routes with destination airport in Italy operated by the airline with name 'American Airlines'.,2352,SELECT count(*) FROM routes AS T1 JOIN airports AS T2 ON T1.dst_apid  =  T2.apid JOIN airlines AS T3 ON T1.alid  =  T3.alid WHERE T2.country  =  'Italy' AND T3.name  =  'American Airlines',flight_4,"['routes', 'airlines', 'airports']"
SELECT COUNT( * ) FROM routes JOIN airlines ON routes.alid = airlines.alid WHERE airlines.country = 'Italy' AND airlines.callsign = 'American Airlines',False,What is the number of routes operated by the airline American Airlines whose destinations are in Italy?,2353,SELECT count(*) FROM routes AS T1 JOIN airports AS T2 ON T1.dst_apid  =  T2.apid JOIN airlines AS T3 ON T1.alid  =  T3.alid WHERE T2.country  =  'Italy' AND T3.name  =  'American Airlines',flight_4,"['routes', 'airlines', 'airports']"
"SELECT products.product_name , COUNT( * ) FROM products JOIN order_items ON products.product_id = order_items.product_id GROUP BY products.product_name",False,List the name and count of each product in all orders.,2356,"SELECT T3.product_name ,  count(*) FROM orders AS T1 JOIN order_items AS T2 JOIN products AS T3 ON T1.order_id = T2.order_id AND T2.product_id = T3.product_id GROUP BY T3.product_id",tracking_orders,"['orders', 'products', 'order_items']"
"SELECT stadium.name FROM concert, stadium WHERE stadium.stadium_id = (SELECT stadium.name FROM concert JOIN stadium ON concert.stadium_id = stadium.stadium_id WHERE concert.year = 2014 AND concert.year = 2014)",False,Show names for all stadiums except for stadiums having a concert in year 2014.,2367,SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014,concert_singer,"['concert', 'stadium']"
SELECT stadium.name FROM stadium WHERE stadium.stadium_id NOT IN (SELECT concert.stadium_id FROM stadium WHERE concert.year = 2014),False,What are the names of all stadiums that did not have a concert in 2014?,2368,SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014,concert_singer,"['concert', 'stadium']"
SELECT COUNT( * ) FROM stadium JOIN concert ON stadium.stadium_id = concert.stadium_id ORDER BY stadium.capacity DESC LIMIT 1,False,Find the number of concerts happened in the stadium with the highest capacity .,2371,select count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1),concert_singer,"['concert', 'stadium']"
SELECT COUNT( * ) FROM stadium JOIN concert ON stadium.stadium_id = concert.stadium_id ORDER BY stadium.capacity DESC LIMIT 1,False,What are the number of concerts that occurred in the stadium with the largest capacity ?,2372,select count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1),concert_singer,"['concert', 'stadium']"
SELECT model_list.model FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid ORDER BY cars_data.horsepower ASC LIMIT 1,False,Which model of the car has the minimum horsepower?,2373,SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;,car_1,"['cars_data', 'car_names']"
SELECT model_list.model FROM cars_data ORDER BY cars_data.horsepower ASC LIMIT 1,False,What is the model of the car with the smallest amount of horsepower?,2374,SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;,car_1,"['cars_data', 'car_names']"
SELECT DISTINCT model_list.model FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid WHERE cars_data.year > 1980,False,Which distinct car models are the produced after 1980?,2375,SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;,car_1,"['cars_data', 'model_list', 'car_names']"
SELECT DISTINCT model_list.model FROM cars_data JOIN model_list ON cars_data.id = model_list.modelid WHERE cars_data.year > 1980,False,What are the different models for the cards produced after 1980?,2376,SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;,car_1,"['cars_data', 'model_list', 'car_names']"
"SELECT continents.continent , COUNT( * ) FROM countries JOIN continents ON countries.continent = continents.contid GROUP BY continents.continent",False,How many car makers are there in each continents? List the continent name and the count.,2377,"SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;",car_1,"['car_makers', 'continents', 'countries']"
"SELECT continents.continent , COUNT( * ) FROM countries JOIN continents ON countries.continent = continents.contid GROUP BY continents.continent",False,What is the name of each continent and how many car makers are there in each one?,2378,"SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;",car_1,"['car_makers', 'continents', 'countries']"
SELECT COUNT( * ) FROM model_list JOIN car_makers ON model_list.maker = car_makers.id WHERE car_makers.country = 'usa',False,How many car models are produced in the usa?,2379,SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa';,car_1,"['car_makers', 'model_list', 'countries']"
SELECT COUNT( * ) FROM model_list JOIN car_makers ON model_list.maker = car_makers.id WHERE car_makers.country = 'United States',False,What is the count of the car models produced in the United States?,2380,SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa';,car_1,"['car_makers', 'model_list', 'countries']"
SELECT model_list.model FROM cars_data JOIN model_list ON cars_data.id = model_list.modelid ORDER BY cars_data.mpg DESC LIMIT 1,False,"Which model saves the most gasoline? That is to say, have the maximum miles per gallon.",2381,SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.mpg DESC LIMIT 1;,car_1,"['cars_data', 'model_list', 'car_names']"
SELECT model_list.model FROM model_list JOIN car_names ON model_list.modelid = car_names.model GROUP BY model_list.model ORDER BY COUNT( * ) DESC LIMIT 1,False,Which model has the most version(make) of cars?,2383,SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;,car_1,"['model_list', 'car_names']"
SELECT model_list.model FROM model_list GROUP BY model_list.model ORDER BY COUNT( * ) DESC LIMIT 1,False,What model has the most different versions?,2384,SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;,car_1,"['model_list', 'car_names']"
SELECT COUNT( * ) FROM cars_data ORDER BY cars_data.horsepower DESC LIMIT 1,False,How many cars have a larger accelerate than the car with the largest horsepower?,2385,SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );,car_1,['cars_data']
SELECT COUNT( * ) FROM cars_data ORDER BY cars_data.horsepower DESC LIMIT 1,False,What is the number of cars with a greater accelerate than the one with the most horsepower?,2386,SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );,car_1,['cars_data']
SELECT countries.countryname FROM countries WHERE countries.countryid NOT IN (SELECT car_makers.country FROM car_makers),False,What are the name of the countries where there is not a single car maker?,2387,SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;,car_1,"['car_makers', 'countries']"
SELECT countries.countryname FROM countries WHERE countries.countryid NOT IN (SELECT car_makers.country FROM car_makers),False,What are the names of the countries with no car makers?,2388,SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;,car_1,"['car_makers', 'countries']"
SELECT shop.name FROM shop WHERE shop.shop_id = 'no',False,Which shops run with no employees? Find the shop names,2396,SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring),employee_hire_evaluation,"['hiring', 'shop']"
SELECT shop.district FROM shop WHERE shop.number_products > 3000 INTERSECT SELECT shop.district FROM shop WHERE shop.number_products > 10000,False,Which district has both stores with less than 3000 products and stores with more than 10000 products?,2397,SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000,employee_hire_evaluation,['shop']
SELECT tv_channel.package_option FROM tv_channel JOIN cartoon ON tv_channel.id = cartoon.channel WHERE cartoon.directed_by != 'Ben Jones',False,find the package option of the tv channel that do not have any cartoon directed by Ben Jones.,2407,SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones'),tvshow,"['cartoon', 'tv_channel']"
SELECT tv_channel.package_option FROM tv_channel JOIN cartoon ON tv_channel.id = cartoon.channel WHERE cartoon.directed_by != 'Ben Jones',False,What are the package options of all tv channels that are not playing any cartoons directed by Ben Jones?,2408,SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones'),tvshow,"['cartoon', 'tv_channel']"
