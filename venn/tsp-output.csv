SQL,hyp_correct,NL_query,index,GT,DB,tables
SELECT COUNT(*) FROM management,False,How many acting statuses are there?,4,SELECT count(DISTINCT temporary_acting) FROM management,department_management,['management']
SELECT Catalogs.catalog_name FROM Catalogs,False,Find the names of all the catalog entries.,5,SELECT distinct(catalog_entry_name) FROM catalog_contents,product_catalog,"['catalog_contents', 'catalogs']"
SELECT Catalogs.catalog_name FROM Catalogs,False,What are all the catalog entry names?,6,SELECT distinct(catalog_entry_name) FROM catalog_contents,product_catalog,"['catalog_contents', 'catalogs']"
SELECT Catalogs.date_of_publication FROM Catalogs GROUP BY Catalogs.date_of_publication HAVING COUNT(*) > 1,False,On which days more than one revisions were made on catalogs.,12,SELECT date_of_latest_revision FROM Catalogs GROUP BY date_of_latest_revision HAVING count(*)  >  1,product_catalog,['catalogs']
SELECT COUNT(DISTINCT medicine_enzyme_interaction.interaction_type) FROM medicine_enzyme_interaction,False,How many kinds of enzymes are there?,37,SELECT count(*) FROM enzyme,medicine_enzyme_interaction,"['medicine_enzyme_interaction', 'enzyme']"
SELECT MAX(enzyme.OMIM) FROM enzyme WHERE enzyme.Chromosome = OMIM,False,What is the maximum Online Mendelian Inheritance in Man (OMIM) value of the enzymes?,41,SELECT max(OMIM) FROM enzyme,medicine_enzyme_interaction,['enzyme']
"SELECT COUNT(*) FROM medicine WHERE medicine.FDA_approved = ""no""",False,How many medicines have the FDA approval status 'No' ?,45,SELECT count(*) FROM medicine WHERE FDA_approved  =  'No',medicine_enzyme_interaction,['medicine']
"SELECT COUNT(*) FROM medicine WHERE medicine.FDA_approved != ""no""",False,How many medicines were not approved by the FDA?,46,SELECT count(*) FROM medicine WHERE FDA_approved  =  'No',medicine_enzyme_interaction,['medicine']
"SELECT ""Customers"" FROM Customers ORDER BY Customers.Customer_Details",False,Sort the customer names in alphabetical order.,71,SELECT customer_details FROM customers ORDER BY customer_details,insurance_and_eClaims,['customers']
SELECT COUNT(DISTINCT Claims_Processing.Claim_Stage_ID) FROM Claims_Processing,False,Find the number of distinct stages in claim processing.,75,SELECT count(*) FROM claims_processing_stages,insurance_and_eClaims,"['claims_processing', 'claims_processing_stages']"
SELECT Products.product_size FROM Products,False,Show all product sizes.,88,SELECT DISTINCT product_size FROM Products,customers_and_invoices,['products']
SELECT Products.product_color FROM Products,False,Show all product colors.,90,SELECT DISTINCT product_color FROM Products,customers_and_invoices,['products']
SELECT COUNT(*) FROM budget WHERE budget.Budget_invested_percent < (SELECT MIN(budget.Invested) FROM budget),False,How many budget record has a budget amount smaller than the invested amount?,106,SELECT count(*) FROM budget WHERE budgeted  <  invested,school_finance,['budget']
"SELECT COUNT(*), endowment.School_id FROM endowment WHERE endowment.amount > 8.5 GROUP BY endowment.School_id HAVING COUNT(*) > 1",False,Find the number of schools that have more than one donator whose donation amount is less than 8.5.,107,SELECT count(*) FROM (SELECT * FROM endowment WHERE amount  >  8.5 GROUP BY school_id HAVING count(*)  >  1),school_finance,['endowment']
SELECT Products_Booked.product_id FROM Products_Booked GROUP BY Products_Booked.product_id HAVING COUNT(*) >= 3,False,What is the id of the product that is booked for 3 times?,110,SELECT product_id FROM products_booked GROUP BY product_id HAVING count(*)  =  3,products_for_hire,['products_booked']
SELECT Employees.role_code FROM Employees,False,What are all role codes?,123,SELECT role_code FROM ROLES;,cre_Doc_Control_Systems,"['employees', 'roles']"
SELECT DISTINCT Participants_in_Events.Participant_ID FROM Participants_in_Events,False,What are all the distinct participant ids who attended any events?,134,SELECT count(DISTINCT participant_id) FROM participants_in_Events,local_govt_in_alabama,['participants_in_events']
SELECT SUM(perpetrator.Injured) FROM perpetrator ORDER BY perpetrator.Injured ASC,False,List the number of people injured by perpetrators in ascending order.,151,SELECT Injured FROM perpetrator ORDER BY Injured ASC,perpetrator,['perpetrator']
SELECT people.Name FROM people ORDER BY people.Date_of_Birth DESC,False,List all people names in the order of their date of birth from old to young.,159,SELECT name FROM people ORDER BY date_of_birth,candidate_poll,['people']
SELECT COUNT(*) FROM customer,False,How many customers are there?,190,SELECT sum(no_of_customers) FROM bank,loan_1,"['bank', 'customer']"
SELECT COUNT(*) FROM bank,False,What is the total number of customers across banks?,191,SELECT sum(no_of_customers) FROM bank,loan_1,['bank']
"SELECT COUNT(*) FROM bank WHERE bank.city = ""New York""",False,Find the number of customers in the banks at New York City.,192,SELECT sum(no_of_customers) FROM bank WHERE city  =  'New York City',loan_1,['bank']
"SELECT SUM(bank.no_of_customers) FROM bank WHERE bank.city = ""New York""",False,What is the total number of customers who use banks in New York City?,193,SELECT sum(no_of_customers) FROM bank WHERE city  =  'New York City',loan_1,['bank']
SELECT DISTINCT bank.branch_ID FROM bank JOIN loan ON bank.branch_ID = loan.branch_ID,False,Find the name of bank branches that provided some loans.,208,SELECT DISTINCT T1.bname FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id  =  T2.branch_id,loan_1,"['bank', 'loan']"
SELECT DISTINCT customer.cust_name FROM bank JOIN loan ON bank.branch_ID = loan.cust_ID JOIN customer ON bank.branch_ID = customer.branch_ID,False,What are the names of the different banks that have provided loans?,209,SELECT DISTINCT T1.bname FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id  =  T2.branch_id,loan_1,"['customer', 'bank', 'loan']"
SELECT COUNT(DISTINCT Fault_Log_Parts.fault_status) FROM Fault_Log_Parts,False,How many fault status codes are recorded in the fault log parts table?,211,SELECT DISTINCT fault_status FROM Fault_Log_Parts,assets_maintenance,['fault_log_parts']
SELECT SUM(club_rank.Total) FROM club JOIN club_rank ON club.Club_ID = club_rank.Club_ID,False,What is the total number of clubs?,216,SELECT count(*) FROM club,sports_competition,"['club_rank', 'club']"
SELECT SUM(club_rank.Total) FROM club_rank GROUP BY club_rank.Club_ID HAVING AVG(club_rank.Total) < 10,False,What is the total number of clubs that have less than 10 medals in total?,224,SELECT count(*) FROM club_rank WHERE Total  <  10,sports_competition,['club_rank']
SELECT club.name FROM club ORDER BY club.Start_year LIMIT 1,False,What are the names of all the clubs starting with the oldest?,226,SELECT name FROM club ORDER BY Start_year ASC,sports_competition,['club']
SELECT player.Position FROM player GROUP BY player.Position HAVING AVG(player.Points) > 20,False,List the position of players with average number of points scored by players of that position bigger than 20.,229,SELECT POSITION FROM player GROUP BY name HAVING avg(Points)  >=  20,sports_competition,['player']
SELECT player.Position FROM player GROUP BY player.Position HAVING AVG(player.Points) > 20,False,What are the positions of players whose average number of points scored by that position is larger than 20?,230,SELECT POSITION FROM player GROUP BY name HAVING avg(Points)  >=  20,sports_competition,['player']
SELECT competition.Competition_type FROM competition GROUP BY competition.Competition_type HAVING COUNT(*) <= 10,False,List the types of competition that have at most five competitions of that type.,231,SELECT Competition_type FROM competition GROUP BY Competition_type HAVING COUNT(*)  <=  5,sports_competition,['competition']
SELECT competition.Competition_type FROM competition GROUP BY competition.Competition_type HAVING COUNT(*) > 5 ORDER BY COUNT(*) DESC LIMIT 5,False,What are the types of competition that have most 5 competitions for that type?,232,SELECT Competition_type FROM competition GROUP BY Competition_type HAVING COUNT(*)  <=  5,sports_competition,['competition']
"SELECT song.song_name FROM song WHERE song.languages = ""English""",False,Find the names of all English songs.,237,"SELECT song_name FROM song WHERE languages  =  ""english""",music_1,['song']
"SELECT song.song_name FROM song WHERE song.languages = ""English""",False,What are the names of all songs in English?,238,"SELECT song_name FROM song WHERE languages  =  ""english""",music_1,['song']
"SELECT files.file_size FROM files WHERE files.formats = ""mp3""",False,What are the id of all the files in mp3 format?,240,"SELECT f_id FROM files WHERE formats  =  ""mp3""",music_1,['files']
"SELECT COUNT(*) FROM artist WHERE artist.country = ""Bangladeshi""",False,How many Bangladeshi artists are listed?,242,"SELECT count(*) FROM artist WHERE country  =  ""Bangladesh""",music_1,['artist']
"SELECT COUNT(*) FROM company WHERE company.Headquarters = ""VALUE""",False,How many companies are headquartered in the US?,250,SELECT count(*) FROM company WHERE Headquarters  =  'USA',company_employee,['company']
SELECT Student.Fname FROM Student,False,What are the first names of all the students?,277,SELECT DISTINCT fname FROM student,club_1,['student']
SELECT Student.Fname FROM Student,False,Find each student's first name.,278,SELECT DISTINCT fname FROM student,club_1,['student']
"SELECT Club.ClubDesc FROM Club WHERE Club.ClubName = ""Tennis club""",False,"What is the description of the club named ""Tennis Club""?",279,"SELECT clubdesc FROM club WHERE clubname  =  ""Tennis Club""",club_1,['club']
"SELECT Club.ClubDesc FROM Club WHERE Club.ClubName = ""Tennis club""",False,"Find the description of the club called ""Tennis Club"".",280,"SELECT clubdesc FROM club WHERE clubname  =  ""Tennis Club""",club_1,['club']
"SELECT Club.ClubLocation FROM Club WHERE Club.ClubName = ""Tennis club""",False,"What is the location of the club named ""Tennis Club""?",283,"SELECT clublocation FROM club WHERE clubname  =  ""Tennis Club""",club_1,['club']
"SELECT Club.ClubLocation FROM Club WHERE Club.ClubName = ""Tennis club""",False,"Where us the club named ""Tennis Club"" located?",284,"SELECT clublocation FROM club WHERE clubname  =  ""Tennis Club""",club_1,['club']
"SELECT SUM(Staff_Roles.role_description) FROM Staff_Roles WHERE Staff_Roles.role_code = ""researcher""",False,What is the complete description of the researcher role.,295,SELECT role_description FROM Staff_Roles WHERE role_code  =  'researcher',tracking_grants_for_research,['staff_roles']
"SELECT SUM(Staff_Roles.role_description) FROM Staff_Roles WHERE Staff_Roles.role_code = ""researcher""",False,What is the complete description of the job of a researcher?,296,SELECT role_description FROM Staff_Roles WHERE role_code  =  'researcher',tracking_grants_for_research,['staff_roles']
SELECT COUNT(*) FROM Project_Outcomes,False,How many Patent outcomes are generated from all the projects?,297,SELECT count(*) FROM Project_outcomes WHERE outcome_code  =  'Patent',tracking_grants_for_research,['project_outcomes']
SELECT COUNT(*) FROM Project_Outcomes,False,How many patents outcomes were listed for all the projects?,298,SELECT count(*) FROM Project_outcomes WHERE outcome_code  =  'Patent',tracking_grants_for_research,['project_outcomes']
SELECT Research_Outcomes.outcome_description FROM Research_Outcomes,False,What are the descriptions of all the project outcomes?,303,SELECT T1.outcome_description FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code  =  T2.outcome_code,tracking_grants_for_research,"['research_outcomes', 'project_outcomes']"
SELECT Research_Outcomes.outcome_description FROM Research_Outcomes,False,List the description of the outcomes for all projects.,304,SELECT T1.outcome_description FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code  =  T2.outcome_code,tracking_grants_for_research,"['research_outcomes', 'project_outcomes']"
"SELECT COUNT(*) FROM Person WHERE Person.gender = ""VALUE""",False,How many females does this network has?,305,SELECT count(*) FROM Person WHERE gender  =  'female',network_2,['person']
"SELECT COUNT(*) FROM Person WHERE Person.gender = ""VALUE""",False,How many females are in the network?,306,SELECT count(*) FROM Person WHERE gender  =  'female',network_2,['person']
SELECT PersonFriend.friend FROM PersonFriend GROUP BY PersonFriend.name HAVING COUNT(*) = 1,False,Find the person who has exactly one friend.,317,SELECT name FROM PersonFriend GROUP BY name HAVING count(*)  =  1,network_2,['personfriend']
SELECT Course.CName FROM Course WHERE Course.CID = 1,False,What are the names of courses with 1 credit?,330,SELECT CName FROM COURSE WHERE Credits  =  1,college_3,['course']
"SELECT Course.CName FROM Course WHERE Course.CID = ""MTW""",False,What are the course names for courses taught on MTW?,332,"SELECT CName FROM COURSE WHERE Days  =  ""MTW""",college_3,['course']
SELECT COUNT(DISTINCT Department.DName) FROM Department WHERE Department.Division = as,False,"What is the number of departments in Division ""AS""?",333,"SELECT count(*) FROM DEPARTMENT WHERE Division  =  ""AS""",college_3,['department']
SELECT COUNT(DISTINCT Department.DName) FROM Department WHERE Department.Division = as,False,How many departments are in the division AS?,334,"SELECT count(*) FROM DEPARTMENT WHERE Division  =  ""AS""",college_3,['department']
SELECT Student.Fname FROM Student ORDER BY Student.Age,False,"What are the first names of students, ordered by age from greatest to least?",346,SELECT Fname FROM STUDENT ORDER BY Age DESC,college_3,['student']
SELECT aircraft.Description FROM aircraft JOIN airport_aircraft ON aircraft.Aircraft_ID = airport_aircraft.Aircraft_ID,False,What are the descriptions for the aircrafts?,350,SELECT Description FROM aircraft,aircraft,"['airport_aircraft', 'aircraft']"
SELECT COUNT(*) FROM College,False,How many students are enrolled in college?,360,SELECT sum(enr) FROM College,soccer_2,['college']
"SELECT AVG(College.enr), College.cName FROM College GROUP BY College.cName",False,"How many students, on average, does each college have enrolled?",362,SELECT avg(enr) FROM College,soccer_2,['college']
SELECT COUNT(DISTINCT College.cName) FROM College,False,How many different colleges are there?,364,SELECT count(*) FROM College,soccer_2,['college']
SELECT DISTINCT Tryout.pPos FROM Tryout,False,What are the unique types of player positions in the tryout?,373,SELECT count(DISTINCT pPos) FROM tryout,soccer_2,['tryout']
SELECT DISTINCT Tryout.pPos FROM Tryout,False,What are the different types of player positions?,374,SELECT count(DISTINCT pPos) FROM tryout,soccer_2,['tryout']
SELECT * FROM College,False,How many students got accepted after the tryout?,375,SELECT count(*) FROM tryout WHERE decision  =  'yes',soccer_2,"['tryout', 'college']"
"SELECT AVG(College.enr) FROM College WHERE College.state = ""Florida""",False,What is average number of students enrolled in Florida colleges?,380,SELECT avg(enr) FROM College WHERE state  =  'FL',soccer_2,['college']
SELECT * FROM College ORDER BY College.enr DESC,False,What information do you have on colleges sorted by increasing enrollment numbers?,384,SELECT * FROM College ORDER BY enr,soccer_2,['college']
SELECT College.state FROM Tryout JOIN College ON Tryout.cName = College.cName,False,Find the states where have some college students in tryout.,387,SELECT DISTINCT state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName,soccer_2,"['tryout', 'college']"
"SELECT COUNT(DISTINCT Tryout.pPos) FROM Tryout WHERE Tryout.pPos = ""goalie"" OR Tryout.pPos = ""mid""",False,How many schools have some students playing in goalie and mid positions.,389,SELECT COUNT(*) FROM (SELECT cName FROM  tryout WHERE pPos  =  'goalie' INTERSECT SELECT cName FROM  tryout WHERE pPos  =  'mid'),soccer_2,['tryout']
"SELECT COUNT(*) FROM Tryout WHERE Tryout.pPos = ""goalie"" OR Tryout.pPos = ""mid mid""",False,How many schools have students playing in goalie and mid-field positions?,390,SELECT COUNT(*) FROM (SELECT cName FROM  tryout WHERE pPos  =  'goalie' INTERSECT SELECT cName FROM  tryout WHERE pPos  =  'mid'),soccer_2,['tryout']
"SELECT COUNT(*) FROM Tryout WHERE Tryout.pPos = ""mid"" AND Tryout.pPos != ""goalie""",False,How many states that have some college students playing in the mid position but not in the goalie position.,391,SELECT COUNT(*) FROM (SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'mid' EXCEPT SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'goalie'),soccer_2,"['tryout', 'college']"
"SELECT COUNT(*) FROM Tryout WHERE Tryout.pPos = ""mid"" AND Tryout.pPos != ""goalies""",False,What is the count of states with college students playing in the mid position but not as goalies?,392,SELECT COUNT(*) FROM (SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'mid' EXCEPT SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'goalie'),soccer_2,"['tryout', 'college']"
SELECT member.Hometown FROM member GROUP BY member.Hometown HAVING COUNT(*) > 100,False,What are the different cities that have more than 100 memberships?,414,SELECT DISTINCT city FROM branch WHERE membership_amount  >=  100,shop_membership,"['branch', 'member']"
SELECT DISTINCT member.Level FROM member,False,What are the different membership levels?,418,SELECT count(DISTINCT LEVEL) FROM member,shop_membership,['member']
"SELECT Dorm.dorm_name FROM Dorm WHERE Dorm.gender = ""VALUE""",False,What are the names of the all-female dorms?,423,SELECT dorm_name FROM dorm WHERE gender  =  'F',dorm_1,['dorm']
SELECT Dorm.dorm_name FROM Dorm JOIN Lives_in ON Dorm.dormid = Lives_in.dormid WHERE Lives_in.stuid > 300 GROUP BY Dorm.dormid,False,What are the names of all the dorms that can accomdate more than 300 students?,425,SELECT dorm_name FROM dorm WHERE student_capacity  >  300,dorm_1,"['lives_in', 'dorm']"
SELECT COUNT(DISTINCT Dorm_amenity.amenity_name) FROM Dorm_amenity,False,Find the number of distinct amenities.,430,SELECT count(*) FROM dorm_amenity,dorm_1,['dorm_amenity']
SELECT COUNT(*) FROM Dorm,False,How many diffrent dorm amenities are there?,431,SELECT count(*) FROM dorm_amenity,dorm_1,"['dorm_amenity', 'dorm']"
SELECT COUNT(*) FROM Dorm,False,How many dorms have amenities?,437,SELECT count(DISTINCT dormid) FROM has_amenity,dorm_1,"['has_amenity', 'dorm']"
SELECT DISTINCT Dorm.dorm_name FROM Dorm JOIN Dorm_amenity ON Dorm.dormid = Dorm_amenity.amenid ORDER BY Dorm_amenity.amenity_name,False,What are the different dorm amenity names in alphabetical order?,441,SELECT amenity_name FROM dorm_amenity ORDER BY amenity_name,dorm_1,"['dorm_amenity', 'dorm']"
SELECT Video_Games.GName FROM Video_Games,False,What are the names of all video games that are collectible cards?,457,"SELECT gname FROM Video_games WHERE gtype  =  ""Collectible card game""",game_1,['video_games']
"SELECT Video_Games.GType FROM Video_Games WHERE Video_Games.GName = ""Destiny""",False,What is the type of video game Call of Destiny.,458,"SELECT gtype FROM Video_games WHERE gname  =  ""Call of Destiny""",game_1,['video_games']
"SELECT Video_Games.GType FROM Video_Games WHERE Video_Games.GName = ""Call Destiny""",False,What type of game is Call of Destiny?,459,"SELECT gtype FROM Video_games WHERE gname  =  ""Call of Destiny""",game_1,['video_games']
SELECT DISTINCT Student.Advisor FROM Student,False,What are the advisors,469,SELECT advisor FROM Student GROUP BY advisor HAVING count(*)  >=  2,game_1,['student']
SELECT COUNT(*) FROM SportsInfo,False,How many sports do we have?,470,SELECT count(DISTINCT sportname) FROM Sportsinfo,game_1,['sportsinfo']
SELECT COUNT(DISTINCT Video_Games.GType) FROM Video_Games,False,How many different types of sports do we offer?,471,SELECT count(DISTINCT sportname) FROM Sportsinfo,game_1,"['video_games', 'sportsinfo']"
SELECT COUNT(DISTINCT Plays_Games.StuID) FROM Plays_Games,False,How many students play sports?,472,SELECT count(DISTINCT StuID) FROM Sportsinfo,game_1,"['plays_games', 'sportsinfo']"
SELECT Student.StuID FROM Student,False,List ids for all student who are on scholarship.,474,SELECT StuID FROM Sportsinfo WHERE onscholarship  =  'Y',game_1,"['student', 'sportsinfo']"
SELECT SportsInfo.StuID FROM SportsInfo,False,What are the ids for all sporty students who are on scholarship?,475,SELECT StuID FROM Sportsinfo WHERE onscholarship  =  'Y',game_1,['sportsinfo']
SELECT COUNT(*) FROM Plays_Games,False,How many games are played for all students?,476,SELECT sum(gamesplayed) FROM Sportsinfo,game_1,"['plays_games', 'sportsinfo']"
SELECT Forms.form_type_code FROM Forms,False,List all the types of forms.,487,SELECT DISTINCT form_type_code FROM forms,e_government,['forms']
SELECT school.Type FROM school GROUP BY school.Type HAVING COUNT(*) >= 2,False,Show the types of schools that have two schools.,504,SELECT TYPE FROM school GROUP BY TYPE HAVING count(*)  =  2,school_bus,['school']
SELECT COUNT(DISTINCT Ref_Budget_Codes.Budget_Type_Code) FROM Ref_Budget_Codes,False,How many budget types do we have?,519,SELECT count(*) FROM Ref_budget_codes,cre_Docs_and_Epenses,['ref_budget_codes']
SELECT station.Location FROM station JOIN train_station ON station.Station_ID = train_station.Station_ID,False,What are all locations of train stations?,528,SELECT DISTINCT LOCATION FROM station,train_station,"['train_station', 'station']"
"SELECT COUNT(*) FROM Staff JOIN Addresses ON Staff.staff_address_id = Addresses.address_id WHERE Addresses.state_province_county = ""Georgia""",False,How many staff live in state Georgia?,541,"SELECT count(*) FROM Addresses WHERE state_province_county = ""Georgia"";",driving_school,"['addresses', 'staff']"
"SELECT Customers.date_of_birth FROM Customers WHERE Customers.customer_status_code = ""Good customer""",False,When are the birthdays of customer who are classified as 'Good Customer' status?,543,SELECT date_of_birth FROM Customers WHERE customer_status_code  =  'Good Customer',driving_school,['customers']
"SELECT Customers.date_of_birth FROM Customers WHERE Customers.customer_status_code = ""Good customer""",False,What is the date of birth of every customer whose status code is 'Good Customer'?,544,SELECT date_of_birth FROM Customers WHERE customer_status_code  =  'Good Customer',driving_school,['customers']
"SELECT COUNT(*) FROM Lessons WHERE Lessons.lesson_status_code = ""cancelled""",False,How many lessons were in cancelled state?,547,"SELECT count(*) FROM Lessons WHERE lesson_status_code = ""Cancelled"";",driving_school,['lessons']
"SELECT COUNT(*) FROM Lessons WHERE Lessons.lesson_status_code = ""cancelled""",False,How many lessons have been cancelled?,548,"SELECT count(*) FROM Lessons WHERE lesson_status_code = ""Cancelled"";",driving_school,['lessons']
SELECT airports.name FROM airports WHERE airports.elevation BETWEEN 50 AND 50,False,Find the name of airports whose altitude is between -50 and 50.,557,SELECT name FROM airports WHERE elevation BETWEEN -50 AND 50,flight_4,['airports']
SELECT airports.name FROM airports WHERE airports.elevation BETWEEN 50 AND 50,False,What are the names of all airports whose elevation is between -50 and 50?,558,SELECT name FROM airports WHERE elevation BETWEEN -50 AND 50,flight_4,['airports']
"SELECT COUNT(*) FROM airports WHERE airports.country = ""Greenland""",False,In how many cities are there airports in the country of Greenland?,560,SELECT count(DISTINCT city) FROM airports WHERE country  =  'Greenland',flight_4,['airports']
SELECT COUNT(*) FROM airports GROUP BY airports.city HAVING COUNT(*) > 3,False,How many cities are there that have more than 3 airports?,561,SELECT count(*) FROM (SELECT city FROM airports GROUP BY city HAVING count(*)  >  3),flight_4,['airports']
SELECT COUNT(*) FROM airports GROUP BY airports.city HAVING COUNT(*) > 3,False,What is the count of cities with more than 3 airports?,562,SELECT count(*) FROM (SELECT city FROM airports GROUP BY city HAVING count(*)  >  3),flight_4,['airports']
SELECT Order_Items.order_id FROM Order_Items WHERE Order_Items.product_id = 11,False,Find the ids of all the order items whose product id is 11.,567,SELECT order_item_id FROM order_items WHERE product_id = 11,tracking_orders,['order_items']
SELECT AVG(cars_data.Horsepower) FROM cars_data WHERE cars_data.Cylinders = 4,False,What is the average miles per gallon(mpg) of the cars with 4 cylinders?,583,SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders  =  4;,car_1,['cars_data']
SELECT AVG(cars_data.Horsepower) FROM cars_data WHERE cars_data.Cylinders = 4,False,What is the average miles per gallon of all the cards with 4 cylinders?,584,SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders  =  4;,car_1,['cars_data']
SELECT COUNT(*) FROM car_names WHERE car_names.Model = 1980,False,"In 1980, how many cars were made?",592,SELECT count(*) FROM CARS_DATA WHERE YEAR  =  1980;,car_1,"['car_names', 'cars_data']"
SELECT cars_data.Year FROM cars_data WHERE cars_data.Weight <= 3000 AND 4000,False,In which years cars were produced weighing no less than 3000 and no more than 4000 ?,593,select distinct year from cars_data where weight between 3000 and 4000;,car_1,['cars_data']
"SELECT COUNT(DISTINCT Cartoon.Written_by) FROM Cartoon WHERE Cartoon.Written_by = ""Joseph Kuhr""",False,"How many cartoons were written by ""Joseph Kuhr""?",611,"SELECT count(*) FROM Cartoon WHERE Written_by = ""Joseph Kuhr"";",tvshow,['cartoon']
"SELECT COUNT(DISTINCT Cartoon.Written_by) FROM Cartoon WHERE Cartoon.Written_by = ""Joseph Kuhr""",False,What is the number of cartoones written by Joseph Kuhr?,612,"SELECT count(*) FROM Cartoon WHERE Written_by = ""Joseph Kuhr"";",tvshow,['cartoon']
"SELECT TV_series.Air_Date FROM TV_series WHERE TV_series.Episode = ""A Love of A Lifetime""",False,"What is the air date of TV series with Episode ""A Love of a Lifetime""?",621,"SELECT Air_Date FROM TV_series WHERE Episode = ""A Love of a Lifetime"";",tvshow,['tv_series']
"SELECT TV_series.Air_Date FROM TV_series WHERE TV_series.Episode = ""A Love of A Lifetime""",False,"When did the episode ""A Love of a Lifetime"" air?",622,"SELECT Air_Date FROM TV_series WHERE Episode = ""A Love of a Lifetime"";",tvshow,['tv_series']
"SELECT TV_series.Weekly_Rank FROM TV_series WHERE TV_series.Episode = ""A Love of A Lifetime""",False,"What is Weekly Rank of TV series with Episode ""A Love of a Lifetime""?",623,"SELECT Weekly_Rank FROM TV_series WHERE Episode = ""A Love of a Lifetime"";",tvshow,['tv_series']
"SELECT TV_series.Weekly_Rank FROM TV_series WHERE TV_series.Episode = ""A Love of A Lifetime""",False,"What is the weekly rank for the episode ""A Love of a Lifetime""?",624,"SELECT Weekly_Rank FROM TV_series WHERE Episode = ""A Love of a Lifetime"";",tvshow,['tv_series']
SELECT TV_Channel.Country FROM TV_Channel GROUP BY TV_Channel.Country HAVING COUNT(*) > 2,False,find id of the tv channels that from the countries where have more than two tv channels.,625,SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2,tvshow,['tv_channel']
SELECT TV_series.Channel FROM TV_series GROUP BY TV_series.Channel HAVING COUNT(*) > 2,False,What are the ids of all tv channels that have more than 2 TV channels?,626,SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2,tvshow,"['tv_series', 'tv_channel']"
"SELECT department.Name, COUNT(*) FROM management JOIN department ON department.Department_ID = management.head_ID WHERE management.temporary_acting = ""yes""",False,Show the name and number of employees for the departments managed by heads whose temporary acting value is 'Yes'?,630,"SELECT T1.name ,  T1.num_employees FROM department AS T1 JOIN management AS T2 ON T1.department_id  =  T2.department_id WHERE T2.temporary_acting  =  'Yes'",department_management,"['department', 'management']"
SELECT DISTINCT head.age FROM head,False,What are the distinct ages of the heads who are acting?,631,SELECT DISTINCT T1.age FROM management AS T2 JOIN head AS T1 ON T1.head_id  =  T2.head_id WHERE T2.temporary_acting  =  'Yes',department_management,"['management', 'head']"
"SELECT department.Department_ID, department.Name, COUNT(*) FROM department JOIN management ON department.Department_ID = management.head_ID GROUP BY management.department_ID HAVING COUNT(*) > 1",False,"Which department has more than 1 head at a time? List the id, name and the number of heads.",632,"SELECT T1.department_id ,  T1.name ,  count(*) FROM management AS T2 JOIN department AS T1 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id HAVING count(*)  >  1",department_management,"['department', 'management']"
"SELECT head.head_ID, head.name FROM head WHERE head.name LIKE ""% Ha %""",False,Which head's name has the substring 'Ha'? List the id and name.,633,"SELECT head_id ,  name FROM head WHERE name LIKE '%Ha%'",department_management,['head']
"SELECT Catalogs.catalog_publisher FROM Catalogs WHERE Catalogs.catalog_name LIKE ""% Murray %""",False,"Find all the catalog publishers whose name contains ""Murray""",636,"SELECT distinct(catalog_publisher) FROM catalogs WHERE catalog_publisher LIKE ""%Murray%""",product_catalog,['catalogs']
"SELECT Catalogs.catalog_publisher FROM Catalogs WHERE Catalogs.catalog_name LIKE ""% Murray %""",False,"Which catalog publishers have substring ""Murray"" in their names?",637,"SELECT distinct(catalog_publisher) FROM catalogs WHERE catalog_publisher LIKE ""%Murray%""",product_catalog,['catalogs']
"SELECT Catalogs.catalog_name, Catalogs.date_of_publication FROM Catalogs JOIN Catalog_Structure ON Catalogs.catalog_id = Catalog_Structure.catalog_id WHERE Catalog_Structure.catalog_level_name > 5",False,Find the names and publication dates of all catalogs that have catalog level number greater than 5.,638,"SELECT t1.catalog_name ,  t1.date_of_publication FROM catalogs AS t1 JOIN catalog_structure AS t2 ON t1.catalog_id  =  t2.catalog_id WHERE catalog_level_number  >  5",product_catalog,"['catalog_structure', 'catalogs']"
"SELECT Catalogs.catalog_name, Catalogs.date_of_publication FROM Catalogs JOIN Catalog_Structure ON Catalogs.catalog_id = Catalog_Structure.catalog_id WHERE Catalog_Structure.catalog_level_name > 5",False,What are the name and publication date of the catalogs with catalog level number above 5?,639,"SELECT t1.catalog_name ,  t1.date_of_publication FROM catalogs AS t1 JOIN catalog_structure AS t2 ON t1.catalog_id  =  t2.catalog_id WHERE catalog_level_number  >  5",product_catalog,"['catalog_structure', 'catalogs']"
"SELECT AVG(Catalog_Contents.price_in_euros), MIN(Catalog_Contents.price_in_dollars) FROM Catalog_Contents",False,Give me the average and minimum price (in Euro) of the products.,643,"SELECT avg(price_in_euros) ,  min(price_in_euros) FROM catalog_contents",product_catalog,['catalog_contents']
SELECT Catalog_Contents.product_stock_number FROM Catalog_Contents ORDER BY Catalog_Contents.capacity LIMIT 1,False,Find the name of the product that has the smallest capacity.,646,SELECT catalog_entry_name FROM catalog_contents ORDER BY capacity ASC LIMIT 1,product_catalog,['catalog_contents']
"SELECT Catalog_Contents.product_stock_number FROM Catalog_Contents WHERE Catalog_Contents.product_stock_number LIKE ""2 %""",False,"Find the names of all the products whose stock number starts with ""2"".",648,"SELECT catalog_entry_name FROM catalog_contents WHERE product_stock_number LIKE ""2%""",product_catalog,['catalog_contents']
"SELECT Catalog_Contents.catalog_entry_name FROM Catalog_Contents WHERE Catalog_Contents.catalog_entry_name LIKE ""2 %""",False,"Which catalog contents have a product stock number that starts from ""2""? Show the catalog entry names.",649,"SELECT catalog_entry_name FROM catalog_contents WHERE product_stock_number LIKE ""2%""",product_catalog,['catalog_contents']
SELECT Catalogs.catalog_name FROM Catalogs JOIN Catalog_Contents ON Catalogs.catalog_id = Catalog_Contents.catalog_entry_id WHERE Catalog_Contents.catalog_level_number = 8,False,Find the names of catalog entries with level number 8.,650,"SELECT t1.catalog_entry_name FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id  =  t2.catalog_entry_id WHERE t2.catalog_level_number  =  ""8""",product_catalog,"['catalog_contents', 'catalog_contents_additional_attributes', 'catalogs']"
SELECT Catalogs.catalog_name FROM Catalogs JOIN Catalog_Contents ON Catalogs.catalog_id = Catalog_Contents.catalog_entry_id WHERE Catalog_Contents.catalog_level_number = 8,False,What are the names of catalog entries with level number 8?,651,"SELECT t1.catalog_entry_name FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id  =  t2.catalog_entry_id WHERE t2.catalog_level_number  =  ""8""",product_catalog,"['catalog_contents', 'catalog_contents_additional_attributes', 'catalogs']"
SELECT Catalog_Contents.product_stock_number FROM Catalog_Contents WHERE Catalog_Contents.length < 3 OR Catalog_Contents.height > 5,False,Find the names of the products with length smaller than 3 or height greater than 5.,652,SELECT catalog_entry_name FROM catalog_contents WHERE LENGTH  <  3 OR width  >  5,product_catalog,['catalog_contents']
SELECT Catalog_Contents.catalog_entry_name FROM Catalog_Contents WHERE Catalog_Contents.length < 3 OR Catalog_Contents.length < 5,False,Which catalog contents have length below 3 or above 5? Find the catalog entry names.,653,SELECT catalog_entry_name FROM catalog_contents WHERE LENGTH  <  3 OR width  >  5,product_catalog,['catalog_contents']
"SELECT Attribute_Definitions.attribute_name, Catalog_Contents_Additional_Attributes.attribute_id FROM Attribute_Definitions JOIN Catalog_Contents_Additional_Attributes ON Attribute_Definitions.attribute_id = Catalog_Contents_Additional_Attributes.attribute_id WHERE Catalog_Contents_Additional_Attributes.attribute_value = 0",False,Which attribute definitions have attribute value 0? Give me the attribute name and attribute ID.,655,"SELECT t1.attribute_name ,  t1.attribute_id FROM Attribute_Definitions AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.attribute_id  =  t2.attribute_id WHERE t2.attribute_value  =  0",product_catalog,"['catalog_contents_additional_attributes', 'attribute_definitions']"
SELECT Catalog_Contents.capacity FROM Catalog_Contents WHERE Catalog_Contents.price_in_dollars > 700,False,Find the name and capacity of products with price greater than 700 (in USD).,656,"SELECT catalog_entry_name ,  capacity FROM Catalog_Contents WHERE price_in_dollars  >  700",product_catalog,['catalog_contents']
"SELECT Catalogs.catalog_name, Catalog_Contents.capacity FROM Catalogs JOIN Catalog_Contents ON Catalogs.catalog_id = Catalog_Contents.catalog_entry_id WHERE Catalog_Contents.price_in_dollars > 700",False,Which catalog contents has price above 700 dollars? Show their catalog entry names and capacities.,657,"SELECT catalog_entry_name ,  capacity FROM Catalog_Contents WHERE price_in_dollars  >  700",product_catalog,"['catalog_contents', 'catalogs']"
"SELECT Artist.Name FROM Artist WHERE Artist.Name LIKE ""% a %""",False,"Find the names of all artists that have ""a"" in their names.",660,"SELECT Name FROM ARTIST WHERE Name LIKE ""%a%""",chinook_1,['artist']
"SELECT Artist.Name FROM Artist WHERE Artist.Name LIKE ""% a %""",False,What are the names of artist who have the letter 'a' in their names?,661,"SELECT Name FROM ARTIST WHERE Name LIKE ""%a%""",chinook_1,['artist']
"SELECT Album.Title FROM Album JOIN Artist ON Album.ArtistId = Artist.ArtistId WHERE Artist.Name = ""AC / DC""",False,"Find the title of all the albums of the artist ""AC/DC"".",662,"SELECT Title FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistId WHERE T2.Name  =  ""AC/DC""",chinook_1,"['artist', 'album']"
"SELECT Album.Title FROM Album JOIN Artist ON Album.ArtistId = Artist.ArtistId WHERE Artist.Name = ""AC / DC""",False,"What are the titles of albums by the artist ""AC/DC""?",663,"SELECT Title FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistId WHERE T2.Name  =  ""AC/DC""",chinook_1,"['artist', 'album']"
"SELECT Track.Name FROM Track WHERE Track.Name LIKE ""% you %""",False,"Find the names of all the tracks that contain the word ""you"".",668,SELECT Name FROM TRACK WHERE Name LIKE '%you%',chinook_1,['track']
"SELECT Track.Name FROM Track WHERE Track.Name LIKE ""% you %""",False,What are the names of tracks that contain the the word you in them?,669,SELECT Name FROM TRACK WHERE Name LIKE '%you%',chinook_1,['track']
"SELECT Track.Milliseconds, (Track.Milliseconds - Track.Milliseconds) FROM Track ORDER BY (Track.Milliseconds - Track.Milliseconds) LIMIT 1",False,What are the durations of the longest and the shortest tracks in milliseconds?,670,"SELECT max(Milliseconds) ,  min(Milliseconds) FROM TRACK",chinook_1,['track']
"SELECT Album.AlbumId, Track.AlbumId, COUNT(*) FROM Album JOIN Track ON Album.AlbumId = Track.AlbumId GROUP BY Album.AlbumId",False,"Show the album names, ids and the number of tracks for each album.",672,"SELECT T1.Title ,  T2.AlbumID ,  COUNT(*) FROM ALBUM AS T1 JOIN TRACK AS T2 ON T1.AlbumId  =  T2.AlbumId GROUP BY T2.AlbumID",chinook_1,"['track', 'album']"
"SELECT Album.AlbumId, Track.AlbumId, COUNT(*) FROM Album JOIN Track ON Album.AlbumId = Track.AlbumId GROUP BY Album.AlbumId",False,"What are the names and ids of the different albums, and how many tracks are on each?",673,"SELECT T1.Title ,  T2.AlbumID ,  COUNT(*) FROM ALBUM AS T1 JOIN TRACK AS T2 ON T1.AlbumId  =  T2.AlbumId GROUP BY T2.AlbumID",chinook_1,"['track', 'album']"
"SELECT COUNT(DISTINCT Track.Name) FROM Genre JOIN Track ON Genre.GenreId = Track.GenreId WHERE Genre.Name = ""rock""",False,How many tracks belong to rock genre?,674,"SELECT COUNT(*) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId  =  T2.GenreId WHERE T1.Name  =  ""Rock""",chinook_1,"['track', 'genre']"
"SELECT COUNT(*) FROM Genre JOIN Track ON Genre.GenreId = Track.GenreId WHERE Genre.Name = ""rock""",False,Count the number of tracks that are part of the rock genre.,675,"SELECT COUNT(*) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId  =  T2.GenreId WHERE T1.Name  =  ""Rock""",chinook_1,"['track', 'genre']"
"SELECT AVG(Track.UnitPrice) FROM Genre JOIN Track ON Genre.GenreId = Track.GenreId WHERE Genre.Name = ""jazz""",False,Find the average unit price of jazz tracks.,677,"SELECT AVG(UnitPrice) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId  =  T2.GenreId WHERE T1.Name  =  ""Jazz""",chinook_1,"['track', 'genre']"
"SELECT Customer.FirstName, Customer.LastName FROM Customer WHERE Customer.Email = ""luisg @ embraer.com.br""",False,"What is the first name and last name of the customer that has email ""luisg@embraer.com.br""?",678,"SELECT FirstName ,  LastName FROM CUSTOMER WHERE Email  =  ""luisg@embraer.com.br""",chinook_1,['customer']
"SELECT Customer.FirstName, Customer.LastName FROM Customer WHERE Customer.Email = ""luisg @ embraer.com.br""",False,"Find the full name of the customer with the email ""luisg@embraer.com.br"".",679,"SELECT FirstName ,  LastName FROM CUSTOMER WHERE Email  =  ""luisg@embraer.com.br""",chinook_1,['customer']
"SELECT COUNT(*) FROM Customer WHERE Customer.Email LIKE ""% gmail.com %""",False,"How many customers have email that contains ""gmail.com""?",680,"SELECT COUNT(*) FROM CUSTOMER WHERE Email LIKE ""%gmail.com%""",chinook_1,['customer']
"SELECT COUNT(*) FROM Customer WHERE Customer.Email LIKE ""% gmail.com %""",False,"Count the number of customers that have an email containing ""gmail.com"".",681,"SELECT COUNT(*) FROM CUSTOMER WHERE Email LIKE ""%gmail.com%""",chinook_1,['customer']
"SELECT DISTINCT Customer.Address FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId WHERE Invoice.BillingCountry = ""Germany""",False,Find the address of all customers that live in Germany and have invoice.,690,"SELECT DISTINCT T1.Address FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId  =  T2.CustomerId WHERE T1.country  =  ""Germany""",chinook_1,"['customer', 'invoice']"
"SELECT COUNT(*) FROM Track JOIN MediaType ON Track.MediaTypeId = MediaType.MediaTypeId WHERE MediaType.Name = ""AAC audio file media""",False,How many tracks are in the AAC audio file media type?,692,"SELECT COUNT(*) FROM MEDIATYPE AS T1 JOIN TRACK AS T2 ON T1.MediaTypeId  =  T2.MediaTypeId WHERE T1.Name  =  ""AAC audio file""",chinook_1,"['track', 'mediatype']"
"SELECT Employee.FirstName, Employee.EmployeeId FROM Customer JOIN Employee ON Customer.SupportRepId = Employee.EmployeeId GROUP BY Employee.EmployeeId HAVING COUNT(*) >= 10",False,Please show the employee first names and ids of employees who serve at least 10 customers.,694,"SELECT T1.FirstName ,  T1.SupportRepId FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId  =  T2.EmployeeId GROUP BY T1.SupportRepId HAVING COUNT(*)  >=  10",chinook_1,"['customer', 'employee']"
"SELECT Employee.FirstName, Customer.SupportRepId FROM Employee JOIN Customer ON Employee.EmployeeId = Customer.SupportRepId GROUP BY Employee.EmployeeId HAVING COUNT(*) >= 10",False,What are the first names and support rep ids for employees serving 10 or more customers?,695,"SELECT T1.FirstName ,  T1.SupportRepId FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId  =  T2.EmployeeId GROUP BY T1.SupportRepId HAVING COUNT(*)  >=  10",chinook_1,"['customer', 'employee']"
SELECT Employee.LastName FROM Employee GROUP BY Employee.LastName HAVING COUNT(*) > 20,False,Please show the employee last names that serves no more than 20 customers.,696,SELECT T1.LastName FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId  =  T2.EmployeeId GROUP BY T1.SupportRepId HAVING COUNT(*)  <=  20,chinook_1,"['customer', 'employee']"
SELECT Employee.LastName FROM Employee JOIN Customer ON Employee.EmployeeId = Customer.SupportRepId GROUP BY Customer.LastName HAVING COUNT(*) <= 20,False,What are the last names of employees who serve at most 20 customers?,697,SELECT T1.LastName FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId  =  T2.EmployeeId GROUP BY T1.SupportRepId HAVING COUNT(*)  <=  20,chinook_1,"['customer', 'employee']"
"SELECT AVG(Track.UnitPrice) FROM Genre JOIN Track ON Genre.GenreId = Track.GenreId WHERE Genre.Name = ""rock""",False,What is the average unit price of rock tracks?,698,"SELECT AVG(T2.UnitPrice) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId  =  T2.GenreId WHERE T1.Name  =  ""Rock""",chinook_1,"['track', 'genre']"
"SELECT enzyme.name, enzyme.Location FROM enzyme JOIN medicine_enzyme_interaction ON enzyme.id = medicine_enzyme_interaction.enzyme_id",False,List the names and the locations that the enzymes can make an effect.,700,"SELECT name ,  LOCATION FROM enzyme",medicine_enzyme_interaction,"['medicine_enzyme_interaction', 'enzyme']"
"SELECT medicine.name, medicine.Trade_Name FROM medicine WHERE medicine.FDA_approved = ""yes""",False,What are the names and trade names of the medicines which has 'Yes' value in the FDA record?,704,"SELECT name ,  trade_name FROM medicine WHERE FDA_approved  =  'Yes'",medicine_enzyme_interaction,['medicine']
"SELECT medicine.name, medicine.Trade_Name FROM medicine WHERE medicine.FDA_approved = ""VALUE""",False,What are the names and trade names of the medcines that are FDA approved?,705,"SELECT name ,  trade_name FROM medicine WHERE FDA_approved  =  'Yes'",medicine_enzyme_interaction,['medicine']
SELECT medicine.name FROM medicine JOIN medicine_enzyme_interaction ON medicine.id = medicine_enzyme_interaction.medicine_id GROUP BY medicine_enzyme_interaction.medicine_id HAVING COUNT(*) > 1,False,"For every medicine id, what are the names of the medicines that can interact with more than one enzyme?",707,"SELECT T1.id ,  T1.Name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id  =  T1.id GROUP BY T1.id HAVING count(*)  >=  2",medicine_enzyme_interaction,"['medicine_enzyme_interaction', 'medicine']"
"SELECT medicine.id, medicine.name FROM medicine_enzyme_interaction JOIN medicine ON medicine_enzyme_interaction.medicine_id = medicine.id GROUP BY medicine_enzyme_interaction.medicine_id HAVING COUNT(*) >= 3",False,What are the ids and trade names of the medicine that can interact with at least 3 enzymes?,709,"SELECT T1.id ,  T1.trade_name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id  =  T1.id GROUP BY T1.id HAVING COUNT(*)  >=  3",medicine_enzyme_interaction,"['medicine_enzyme_interaction', 'medicine']"
"SELECT enzyme.name, enzyme.Location, enzyme.Product FROM enzyme JOIN medicine_enzyme_interaction ON enzyme.id = medicine_enzyme_interaction.enzyme_id WHERE medicine_enzyme_interaction.interaction_type = ""VALUE""",False,"What are the different names, locations, and products of the enzymes that are capable inhibitor interactions?",711,"SELECT DISTINCT T1.name ,  T1.location ,  T1.product FROM enzyme AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.enzyme_id  =  T1.id WHERE T2.interaction_type  =  'inhibitor'",medicine_enzyme_interaction,"['medicine_enzyme_interaction', 'enzyme']"
"SELECT enzyme.name FROM enzyme WHERE enzyme.name LIKE ""% ALA %""",False,"Which enzyme names have the substring ""ALA""?",712,"SELECT name FROM enzyme WHERE name LIKE ""%ALA%""",medicine_enzyme_interaction,['enzyme']
"SELECT enzyme.name FROM enzyme WHERE enzyme.name LIKE ""% ALA %""",False,What are the names of enzymes that include the string 'ALA'?,713,"SELECT name FROM enzyme WHERE name LIKE ""%ALA%""",medicine_enzyme_interaction,['enzyme']
"SELECT university.School, university.Location FROM university",False,List all public schools and their locations.,718,"SELECT school ,  LOCATION FROM university WHERE affiliation  =  'Public'",university_basketball,['university']
SELECT university.Location FROM university,False,What are the public schools and what are their locations?,719,"SELECT school ,  LOCATION FROM university WHERE affiliation  =  'Public'",university_basketball,['university']
"SELECT university.Affiliation, university.Primary_conference FROM university ORDER BY university.Enrollment DESC LIMIT 1",False,Show the enrollment and primary_conference of the oldest college.,726,"SELECT enrollment ,  primary_conference FROM university ORDER BY founded LIMIT 1",university_basketball,['university']
"SELECT university.School FROM university WHERE university.Founded > 1850 OR university.Founded = ""public""",False,Find the schools that were either founded after 1850 or public.,732,SELECT school FROM university WHERE founded  >  1850 OR affiliation  =  'Public',university_basketball,['university']
SELECT university.School FROM university WHERE university.Founded < 1850 OR university.Founded = 1850,False,What are the schools that were either founded before 1850 or are public?,733,SELECT school FROM university WHERE founded  >  1850 OR affiliation  =  'Public',university_basketball,['university']
"SELECT COUNT(university.Location) FROM university WHERE university.Location LIKE ""% NY %""",False,Find how many school locations have the word 'NY'.,734,"SELECT count(*) FROM university WHERE LOCATION LIKE ""%NY%""",university_basketball,['university']
"SELECT COUNT(*) FROM university WHERE university.Location LIKE ""% NY %""",False,How many universities have a location that contains NY?,735,"SELECT count(*) FROM university WHERE LOCATION LIKE ""%NY%""",university_basketball,['university']
"SELECT COUNT(*), university.Affiliation FROM university GROUP BY university.Affiliation HAVING SUM(university.Enrollment) > 20000",False,Find the number of universities that have over a 20000 enrollment size for each affiliation type.,736,"SELECT count(*) ,  affiliation FROM university WHERE enrollment  >  20000 GROUP BY affiliation",university_basketball,['university']
"SELECT MAX(Player.height), MIN(Player.height) FROM Player",False,What is the maximum and minimum height of all players?,742,"SELECT max(weight) ,  min(weight) FROM Player",soccer_1,['player']
SELECT Player.player_name FROM Player JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player_Attributes.crossing > 90,False,List the names of all players who have a crossing score higher than 90 and prefer their right foot.,743,"SELECT DISTINCT T1.player_name FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.crossing  >  90 AND T2.preferred_foot  =  ""right""",soccer_1,"['player_attributes', 'player']"
"SELECT Player.player_name FROM Player JOIN Player_Attributes ON Player.id = Player_Attributes.player_api_id WHERE Player_Attributes.overall_rating BETWEEN 85 AND 90 AND Player_Attributes.preferred_foot = ""VALUE VALUE VALUE VALUE VALUE0""",False,List the names of all left-footed players who have overall rating between 85 and 90.,744,"SELECT DISTINCT T1.player_name FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.preferred_foot  =  ""left"" AND T2.overall_rating  >=  85 AND T2.overall_rating  <=  90",soccer_1,"['player_attributes', 'player']"
"SELECT AVG(Player_Attributes.overall_rating) FROM Player_Attributes WHERE Player_Attributes.preferred_foot = ""VALUE VALUE"" AND Player_Attributes.preferred_foot = ""left-footed""",False,What is the average rating for right-footed players and left-footed players?,745,"SELECT preferred_foot ,  avg(overall_rating) FROM Player_Attributes GROUP BY preferred_foot",soccer_1,['player_attributes']
"SELECT COUNT(*) FROM Player_Attributes WHERE Player_Attributes.overall_rating > 80 AND Player_Attributes.preferred_foot = ""left-footed""",False,"Of all players with an overall rating greater than 80, how many are right-footed and left-footed?",746,"SELECT preferred_foot ,  count(*) FROM Player_Attributes WHERE overall_rating  >  80 GROUP BY preferred_foot",soccer_1,['player_attributes']
SELECT * FROM people,False,"Show the names of people, and dates and venues of debates they are on the affirmative side.",756,"SELECT T3.Name ,  T2.Date ,  T2.Venue FROM debate_people AS T1 JOIN debate AS T2 ON T1.Debate_ID  =  T2.Debate_ID JOIN people AS T3 ON T1.Affirmative  =  T3.People_ID",debate,"['debate', 'people', 'debate_people']"
"SELECT people.Name, COUNT(*) FROM debate_people JOIN people ON debate_people.Affirmative = people.People_ID WHERE debate_people.Affirmative = affirmative GROUP BY debate_people.Affirmative",False,Show the names of people and the number of times they have been on the affirmative side of debates.,757,"SELECT T2.Name ,  COUNT(*) FROM debate_people AS T1 JOIN people AS T2 ON T1.Affirmative  =  T2.People_ID GROUP BY T2.Name",debate,"['people', 'debate_people']"
"SELECT SUM(Claim_Headers.Amount_Claimed), AVG(Claim_Headers.Amount_Claimed) FROM Claim_Headers",False,Find the total and average amount paid in claim headers.,761,"SELECT sum(amount_piad) ,  avg(amount_piad) FROM claim_headers",insurance_and_eClaims,['claim_headers']
"SELECT SUM(Claim_Headers.Amount_Claimed), AVG(Claim_Headers.Amount_Piad) FROM Claim_Headers",False,What are the total amount and average amount paid in claim headers?,762,"SELECT sum(amount_piad) ,  avg(amount_piad) FROM claim_headers",insurance_and_eClaims,['claim_headers']
"SELECT Customers.Customer_ID FROM Customers WHERE Customers.Customer_Details LIKE ""% Diana %""",False,"Find the names of customers whose name contains ""Diana"".",763,"SELECT customer_details FROM customers WHERE customer_details LIKE ""%Diana%""",insurance_and_eClaims,['customers']
"SELECT DISTINCT Customers.Customer_ID FROM Customers JOIN Policies ON Customers.Customer_ID = Policies.Customer_ID WHERE Policies.Policy_Type_Code = ""deputy""",False,Find the names of the customers who have an deputy policy.,765,"SELECT DISTINCT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.policy_type_code  =  ""Deputy""",insurance_and_eClaims,"['customers', 'policies']"
"SELECT Accounts.account_id, Accounts.date_account_opened, Accounts.other_account_details FROM Accounts",False,"Show the id, the date of account opened, the account name, and other account detail for all accounts.",769,"SELECT account_id ,  date_account_opened ,  account_name ,  other_account_details FROM Accounts",customers_and_invoices,['accounts']
"SELECT Accounts.account_id, Accounts.date_account_opened, Accounts.other_account_details FROM Accounts",False,"What are the ids, date opened, name, and other details for all accounts?",770,"SELECT account_id ,  date_account_opened ,  account_name ,  other_account_details FROM Accounts",customers_and_invoices,['accounts']
"SELECT Accounts.account_id, Accounts.account_name, Accounts.other_account_details FROM Customers JOIN Accounts ON Customers.customer_id = Accounts.customer_id WHERE Customers.customer_first_name = ""Meaghan""",False,"Show the id, the account name, and other account details for all accounts by the customer with first name 'Meaghan'.",771,"SELECT T1.account_id ,  T1.date_account_opened ,  T1.account_name ,  T1.other_account_details FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.customer_first_name  =  'Meaghan'",customers_and_invoices,"['customers', 'accounts']"
"SELECT Accounts.account_id, Accounts.date_account_opened, Accounts.other_account_details FROM Customers JOIN Accounts ON Customers.customer_id = Accounts.customer_id WHERE Customers.customer_first_name = ""Meaghan""",False,"What are the ids, names, dates of opening, and other details for accounts corresponding to the customer with the first name ""Meaghan""?",772,"SELECT T1.account_id ,  T1.date_account_opened ,  T1.account_name ,  T1.other_account_details FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.customer_first_name  =  'Meaghan'",customers_and_invoices,"['customers', 'accounts']"
"SELECT Customers.customer_id, Customers.customer_first_name, COUNT(*) FROM Customers JOIN Accounts ON Customers.customer_id = Accounts.customer_id GROUP BY Customers.customer_id",False,"Show id, first name and last name for all customers and the number of accounts.",779,"SELECT T1.customer_id ,  T2.customer_first_name ,  T2.customer_last_name ,  count(*) FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id",customers_and_invoices,"['customers', 'accounts']"
"SELECT Customers.customer_first_name, Customers.customer_middle_initial, COUNT(*), Customers.customer_id FROM Customers JOIN Accounts ON Customers.customer_id = Accounts.customer_id GROUP BY Customers.customer_id",False,"What are the the full names and ids for all customers, and how many accounts does each have?",780,"SELECT T1.customer_id ,  T2.customer_first_name ,  T2.customer_last_name ,  count(*) FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id",customers_and_invoices,"['customers', 'accounts']"
"SELECT Financial_Transactions.account_id, COUNT(*) FROM Financial_Transactions GROUP BY Financial_Transactions.account_id",False,How many transaction does each account have? Show the number and account id.,785,"SELECT count(*) ,  account_id FROM Financial_transactions",customers_and_invoices,['financial_transactions']
"SELECT Financial_Transactions.account_id, COUNT(*) FROM Financial_Transactions GROUP BY Financial_Transactions.account_id",False,Count the number of financial transactions that correspond to each account id.,786,"SELECT count(*) ,  account_id FROM Financial_transactions",customers_and_invoices,['financial_transactions']
"SELECT Financial_Transactions.account_id, COUNT(*) FROM Financial_Transactions GROUP BY Financial_Transactions.account_id HAVING COUNT(*) >= 4",False,Show the account id and name with at least 4 transactions.,795,"SELECT T1.account_id ,  T2.account_name FROM Financial_transactions AS T1 JOIN Accounts AS T2 ON T1.account_id  =  T2.account_id GROUP BY T1.account_id HAVING count(*)  >=  4",customers_and_invoices,"['financial_transactions', 'accounts']"
"SELECT Invoices.invoice_date, Invoices.order_id FROM Invoices",False,Show invoice dates and order id and details for all invoices.,799,"SELECT T1.invoice_date ,  T1.order_id ,  T2.order_details FROM Invoices AS T1 JOIN Orders AS T2 ON T1.order_id  =  T2.order_id",customers_and_invoices,"['invoices', 'orders']"
"SELECT Invoices.invoice_date, Invoices.order_id FROM Invoices",False,"What are the invoice dates, order ids, and order details for all invoices?",800,"SELECT T1.invoice_date ,  T1.order_id ,  T2.order_details FROM Invoices AS T1 JOIN Orders AS T2 ON T1.order_id  =  T2.order_id",customers_and_invoices,"['invoices', 'orders']"
"SELECT Invoices.order_id, Orders.order_details FROM Orders JOIN Invoices ON Orders.order_id = Invoices.order_id GROUP BY Invoices.order_id HAVING COUNT(*) >= 2",False,Return the order ids and details for orderes with two or more invoices.,804,"SELECT T2.order_id ,  T2.order_details FROM Invoices AS T1 JOIN Orders AS T2 ON T1.order_id  =  T2.order_id GROUP BY T2.order_id HAVING count(*)  >  2",customers_and_invoices,"['invoices', 'orders']"
"SELECT Products.product_name, SUM(Order_Items.product_quantity) FROM Order_Items JOIN Products ON Order_Items.product_id = Products.product_id GROUP BY Order_Items.product_id",False,"What are the different product names, and what is the sum of quantity ordered for each product?",806,"SELECT T2.product_name ,  sum(T1.product_quantity) FROM Order_items AS T1 JOIN Products AS T2 ON T1.product_id  =  T2.product_id GROUP BY T2.product_name",customers_and_invoices,"['order_items', 'products']"
"SELECT Order_Items.product_id, COUNT(DISTINCT Order_Items.product_id) FROM Order_Items GROUP BY Order_Items.product_id",False,Show the product ids and the number of unique orders containing each product.,809,"SELECT product_id ,  count(DISTINCT order_id) FROM Order_items GROUP BY product_id",customers_and_invoices,['order_items']
"SELECT Orders.order_id, COUNT(*) FROM Orders JOIN Order_Items ON Orders.order_id = Order_Items.order_id GROUP BY Orders.order_id",False,Show order ids and the number of products in each order.,811,"SELECT order_id ,  count(DISTINCT product_id) FROM Order_items GROUP BY order_id",customers_and_invoices,"['order_items', 'orders']"
SELECT COUNT(DISTINCT Order_Items.product_id) FROM Order_Items,False,How many different products correspond to each order id?,812,"SELECT order_id ,  count(DISTINCT product_id) FROM Order_items GROUP BY order_id",customers_and_invoices,['order_items']
SELECT * FROM ACCOUNTS,False,What is the total balance of savings accounts not belonging to someone with the name Brown?,816,SELECT sum(T2.balance) FROM accounts AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid WHERE T1.name != 'Brown',small_bank_1,"['savings', 'accounts']"
"SELECT ACCOUNTS.name, COUNT(*) FROM CHECKING JOIN ACCOUNTS ON CHECKING.custid = ACCOUNTS.custid GROUP BY CHECKING.custid",False,"What are the names of customers with accounts, and how many checking accounts do each of them have?",818,"SELECT count(*) ,  T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid GROUP BY T1.name",small_bank_1,"['checking', 'accounts']"
"SELECT ACCOUNTS.name, SUM(SAVINGS.balance) FROM SAVINGS JOIN ACCOUNTS ON SAVINGS.custid = ACCOUNTS.custid GROUP BY SAVINGS.custid",False,"What are the names of customers with accounts, and what are the total savings balances for each?",820,"SELECT sum(T2.balance) ,  T1.name FROM accounts AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid GROUP BY T1.name",small_bank_1,"['savings', 'accounts']"
"SELECT ""CHECKING"", CHECKING.balance FROM CHECKING ORDER BY CHECKING.balance ASC",False,Find the total checking and saving balance of all accounts sorted by the total balance in ascending order.,821,SELECT T1.balance + T2.balance FROM checking AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid ORDER BY T1.balance + T2.balance,small_bank_1,"['savings', 'checking']"
"SELECT CHECKING.custid, SUM(CHECKING.balance) FROM CHECKING JOIN SAVINGS ON CHECKING.custid = SAVINGS.custid GROUP BY CHECKING.custid ORDER BY SUM(CHECKING.balance)",False,"What is the sum of checking and savings balances for all customers, ordered by the total balance?",822,SELECT T1.balance + T2.balance FROM checking AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid ORDER BY T1.balance + T2.balance,small_bank_1,"['savings', 'checking']"
"SELECT ACCOUNTS.name, SAVINGS.balance FROM ACCOUNTS JOIN SAVINGS ON ACCOUNTS.custid = SAVINGS.balance",False,"Find the name, checking balance and saving balance of all accounts in the bank.",823,"SELECT T2.balance ,  T3.balance ,  T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid",small_bank_1,"['savings', 'checking', 'accounts']"
"SELECT School.County, SUM(School.Enrollment) FROM School GROUP BY School.County",False,Show each county along with the number of schools and total enrollment in each county.,829,"SELECT county ,  count(*) ,  sum(enrollment) FROM school GROUP BY county",school_finance,['school']
"SELECT COUNT(*) FROM endowment JOIN School ON endowment.School_id = School.School_id WHERE School.School_name = ""Glenn""",False,"How many donors have endowment for school named ""Glenn""?",830,"SELECT count(DISTINCT T1.donator_name) FROM endowment AS T1 JOIN school AS T2 ON T1.school_id  =  T2.school_id WHERE T2.school_name  =  ""Glenn""",school_finance,"['school', 'endowment']"
SELECT School.School_name FROM School JOIN endowment ON School.School_id = endowment.School_id WHERE endowment.amount <= 10,False,List all the names of schools with an endowment amount smaller than or equal to 10.,831,SELECT T2.school_name FROM endowment AS T1 JOIN school AS T2 ON T1.school_id  =  T2.school_id GROUP BY T1.school_id HAVING sum(T1.amount)  <=  10,school_finance,"['school', 'endowment']"
SELECT SUM(budget.Budgeted) FROM budget WHERE budget.Year > 3000 OR budget.Year < 2001,False,How many budgets are above 3000 in year 2001 or before?,833,SELECT count(*) FROM budget WHERE budgeted  >  3000 AND YEAR  <=  2001,school_finance,['budget']
SELECT SUM(budget.Budgeted) FROM budget WHERE budget.Year < 3000 OR budget.Budgeted < 3000,False,Count the number of budgets in year 2001 or before whose budgeted amount is greater than 3000,834,SELECT count(*) FROM budget WHERE budgeted  >  3000 AND YEAR  <=  2001,school_finance,['budget']
"SELECT SUM(budget.total_budget_percent_invested) FROM budget JOIN School ON budget.School_id = School.School_id WHERE School.School_name = ""Glenn""",False,"What is the total budget amount for school ""Glenn"" in all years?",836,SELECT sum(T1.budgeted) FROM budget AS T1 JOIN school AS T2 ON T1.school_id  =  T2.school_id WHERE T2.school_name  =  'Glenn',school_finance,"['school', 'budget']"
"SELECT Institution.Institution, Institution.Location FROM Institution WHERE Institution.Type = ""Private"" AND Institution.Location > 1990",False,"Show the names and locations of institutions that are founded after 1990 and have the type ""Private"".",841,"SELECT institution ,  LOCATION FROM institution WHERE founded  >  1990 AND TYPE  =  'Private'",protein_institute,['institution']
"SELECT Institution.Type, COUNT(DISTINCT Institution.Enrollment), SUM(Institution.Enrollment) FROM Institution GROUP BY Institution.Type",False,"Show institution types, along with the number of institutions and total enrollment for each type.",842,"SELECT TYPE ,  count(*) ,  sum(enrollment) FROM institution GROUP BY TYPE",protein_institute,['institution']
"SELECT DISTINCT protein.protein_name, Institution.Institution FROM protein JOIN Institution ON protein.Institution_id = Institution.Institution_id JOIN Institution ON protein.Institution_id = Institution.Institution_id",False,Show the protein name and the institution name.,846,"SELECT T2.protein_name ,  T1.institution FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id  =  T2.institution_id",protein_institute,"['protein', 'institution']"
SELECT * FROM Discount_Coupons,False,Are the customers holding coupons with amount 500 bad or good?,847,SELECT T1.good_or_bad_customer FROM customers AS T1 JOIN discount_coupons AS T2 ON T1.coupon_id  =  T2.coupon_id WHERE T2.coupon_amount  =  500,products_for_hire,"['customers', 'discount_coupons']"
"SELECT Customers.first_name, Customers.last_name, Customers.gender_mf FROM Customers ORDER BY Customers.good_or_bad_customer",False,"What are the first name, last name, and gender of all the good customers? Order by their last name.",851,"SELECT first_name ,  last_name ,  gender_mf FROM customers WHERE good_or_bad_customer  =  'good' ORDER BY last_name",products_for_hire,['customers']
"SELECT Products_for_Hire.daily_hire_cost FROM Products_for_Hire WHERE Products_for_Hire.product_name LIKE ""% Book %""",False,What are the daily hire costs for the products with substring 'Book' in its name?,853,SELECT daily_hire_cost FROM Products_for_hire WHERE product_name LIKE '%Book%',products_for_hire,['products_for_hire']
"SELECT Payments.payment_date FROM Payments WHERE Payments.amount_paid_in_full_yn > 300 OR Payments.payment_type_code = ""Check""",False,What are the payment date of the payment with amount paid higher than 300 or with payment type is 'Check',854,SELECT payment_date FROM payments WHERE amount_paid  >  300 OR payment_type_code  =  'Check',products_for_hire,['payments']
SELECT pilot.Join_Year FROM pilot ORDER BY pilot.Rank DESC LIMIT 1,False,What is the joined year of the pilot of the highest rank?,858,SELECT Join_Year FROM pilot ORDER BY Rank ASC LIMIT 1,pilot_record,['pilot']
"SELECT pilot.Pilot_name, aircraft.Model FROM pilot JOIN pilot_record ON pilot.Pilot_ID = pilot_record.Pilot_ID JOIN aircraft ON pilot_record.Aircraft_ID = aircraft.Aircraft_ID WHERE aircraft.Fuel_Propulsion = ""flied""",False,Show the names of pilots and models of aircrafts they have flied with.,860,"SELECT T3.Pilot_name ,  T2.Model FROM pilot_record AS T1 JOIN aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN pilot AS T3 ON T1.Pilot_ID  =  T3.Pilot_ID",pilot_record,"['pilot_record', 'pilot', 'aircraft']"
SELECT pilot.Pilot_name FROM pilot JOIN pilot_record ON pilot.Pilot_ID = pilot_record.Pilot_ID GROUP BY pilot.Pilot_name HAVING COUNT(*) > 1,False,Show names of pilots that have more than one record.,862,"SELECT T2.Pilot_name ,  COUNT(*) FROM pilot_record AS T1 JOIN pilot AS T2 ON T1.pilot_ID  =  T2.pilot_ID GROUP BY T2.Pilot_name HAVING COUNT(*)  >  1",pilot_record,"['pilot_record', 'pilot']"
"SELECT Employees.role_code FROM Employees WHERE Employees.employee_name = ""Koby""",False,What is the role of the employee named Koby?,863,"SELECT T1.role_description FROM ROLES AS T1 JOIN Employees AS T2 ON T1.role_code = T2.role_code WHERE T2.employee_name = ""Koby"";",cre_Doc_Control_Systems,"['employees', 'roles']"
"SELECT Roles.role_description, COUNT(*) FROM Roles JOIN Employees ON Roles.role_code = Employees.role_code GROUP BY Employees.role_code",False,"How many employees does each role have? List role description, id and number of employees.",865,"SELECT T1.role_description ,  T2.role_code ,  count(*) FROM ROLES AS T1 JOIN Employees AS T2 ON T1.role_code = T2.role_code GROUP BY T2.role_code;",cre_Doc_Control_Systems,"['roles', 'employees']"
"SELECT Roles.role_description, COUNT(*) FROM Employees JOIN Roles ON Employees.role_code = Roles.role_code GROUP BY Employees.role_code HAVING COUNT(*) > 1",False,List roles that have more than one employee. List the role description and number of employees.,866,"SELECT Roles.role_description , count(Employees.employee_id) FROM ROLES JOIN Employees ON Employees.role_code = Roles.role_code GROUP BY Employees.role_code HAVING count(Employees.employee_id)  >  1;",cre_Doc_Control_Systems,"['employees', 'roles']"
"SELECT Documents.document_id FROM Documents WHERE Documents.document_status_code = ""done"" AND Documents.document_type_code = ""paper""",False,List the document ids for any documents with the status code done and the type code paper.,868,"SELECT document_id FROM Documents WHERE document_status_code = ""done"" AND document_type_code = ""Paper"";",cre_Doc_Control_Systems,['documents']
"SELECT Circulation_History.document_id, COUNT(*) FROM Circulation_History GROUP BY Circulation_History.document_id",False,"For each document, list the number of employees who have showed up in the circulation history of that document. List the document ids and number of employees.",874,"SELECT document_id ,  count(DISTINCT employee_id) FROM Circulation_History GROUP BY document_id;",cre_Doc_Control_Systems,['circulation_history']
"SELECT people.Name FROM people EXCEPT SELECT people.Name FROM entrepreneur JOIN people ON entrepreneur.People_ID = people.People_ID WHERE entrepreneur.Investor = ""Rachel Elnaugh""",False,Return the names of entrepreneurs do no not have the investor Rachel Elnaugh.,883,"SELECT T2.Name FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Investor != ""Rachel Elnaugh""",entrepreneur,"['people', 'entrepreneur']"
"SELECT people.Name, entrepreneur.Company FROM entrepreneur JOIN people ON entrepreneur.People_ID = people.People_ID ORDER BY entrepreneur.Money_Requested DESC",False,List the names of entrepreneurs and their companies in descending order of money requested?,892,"SELECT T2.Name ,  T1.Company FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Money_Requested",entrepreneur,"['people', 'entrepreneur']"
SELECT entrepreneur.Investor FROM entrepreneur ORDER BY entrepreneur.Money_Requested DESC,False,"What are the names of entrepreneurs and their corresponding investors, ordered descending by the amount of money requested?",893,"SELECT T2.Name ,  T1.Company FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Money_Requested",entrepreneur,"['people', 'entrepreneur']"
SELECT perpetrator.Country FROM perpetrator GROUP BY perpetrator.Country HAVING COUNT(*) >= 2,False,What are the countries that have at least two perpetrators?,899,"SELECT Country ,  COUNT(*) FROM perpetrator GROUP BY Country HAVING COUNT(*)  >=  2",perpetrator,['perpetrator']
"SELECT ""candidate"" FROM candidate ORDER BY candidate.Support_rate DESC LIMIT 3",False,Return the top 3 greatest support rates.,902,SELECT support_rate FROM candidate ORDER BY support_rate DESC LIMIT 3,candidate_poll,['candidate']
"SELECT candidate.Support_rate, candidate.Oppose_rate FROM candidate ORDER BY candidate.Unsure_rate ASC",False,"Please list support, consider, and oppose rates for each candidate in ascending order by unsure rate.",905,"SELECT Support_rate ,  Consider_rate ,  Oppose_rate FROM candidate ORDER BY unsure_rate",candidate_poll,['candidate']
"SELECT candidate.Support_rate, candidate.Oppose_rate FROM candidate ORDER BY candidate.Unsure_rate",False,"What are the support, consider, and oppose rates of each candidate, ordered ascending by their unsure rate?",906,"SELECT Support_rate ,  Consider_rate ,  Oppose_rate FROM candidate ORDER BY unsure_rate",candidate_poll,['candidate']
SELECT MAX(candidate.Poll_Source) FROM candidate ORDER BY candidate.Oppose_rate DESC LIMIT 1,False,which poll source does the highest oppose rate come from?,907,SELECT poll_source FROM candidate ORDER BY oppose_rate DESC LIMIT 1,candidate_poll,['candidate']
SELECT candidate.Poll_Source FROM candidate WHERE candidate.Support_rate = (SELECT MAX(candidate.Oppose_rate) FROM candidate),False,Return the poll source corresponding to the candidate who has the oppose rate.,908,SELECT poll_source FROM candidate ORDER BY oppose_rate DESC LIMIT 1,candidate_poll,['candidate']
"SELECT people.Name, people.Sex, MAX(candidate.Oppose_rate) FROM candidate JOIN people ON candidate.People_ID = people.People_ID GROUP BY people.Sex",False,"For each sex, what is the name and sex of the candidate with the oppose rate for their sex?",916,"SELECT t1.name ,  t1.sex ,  min(oppose_rate) FROM people AS t1 JOIN candidate AS t2 ON t1.people_id  =  t2.people_id GROUP BY t1.sex",candidate_poll,"['people', 'candidate']"
SELECT people.Name FROM candidate JOIN people ON candidate.People_ID = people.People_ID WHERE candidate.Support_rate < (SELECT MIN(candidate.Support_rate) FROM candidate),False,Find the names of the candidates whose support percentage is lower than their oppose rate.,917,SELECT t1.name FROM people AS t1 JOIN candidate AS t2 ON t1.people_id  =  t2.people_id WHERE t2.support_rate  <  t2.oppose_rate,candidate_poll,"['people', 'candidate']"
"SELECT ""candidate"" FROM candidate WHERE candidate.Support_rate < (SELECT MIN(candidate.Support_rate) FROM candidate)",False,What are the names of candidates who have a lower support rate than oppose rate?,918,SELECT t1.name FROM people AS t1 JOIN candidate AS t2 ON t1.people_id  =  t2.people_id WHERE t2.support_rate  <  t2.oppose_rate,candidate_poll,"['people', 'candidate']"
"SELECT MAX(candidate.Support_rate), MIN(candidate.Support_rate), MIN(candidate.Oppose_rate) FROM candidate",False,"find the highest support percentage, lowest consider rate and oppose rate of all candidates.",921,"SELECT max(support_rate) ,  min(consider_rate) ,  min(oppose_rate) FROM candidate",candidate_poll,['candidate']
"SELECT MAX(candidate.Support_rate), MIN(candidate.Support_rate), MIN(candidate.Consider_rate) FROM candidate",False,"Return the maximum support rate, minimum consider rate, and minimum oppose rate across all candidates?",922,"SELECT max(support_rate) ,  min(consider_rate) ,  min(oppose_rate) FROM candidate",candidate_poll,['candidate']
"SELECT party.Lieutenant_Governor, party.Comptroller FROM party WHERE party.Party = ""democratic""",False,Show the lieutenant governor and comptroller from the democratic party.,929,"SELECT Lieutenant_Governor ,  Comptroller FROM party WHERE Party  =  ""Democratic""",election,['party']
"SELECT party.Lieutenant_Governor, party.Comptroller FROM party WHERE party.Party = ""democratic""",False,Who are the lieutenant governor and comptroller from the democratic party?,930,"SELECT Lieutenant_Governor ,  Comptroller FROM party WHERE Party  =  ""Democratic""",election,['party']
"SELECT county.County_name FROM election JOIN county ON election.Delegate = county.County_Id WHERE election.Committee = ""Appropriations""",False,"Which county do the delegates on ""Appropriations"" committee belong to? Give me the county names.",938,"SELECT T1.County_name FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District WHERE T2.Committee  =  ""Appropriations""",election,"['county', 'election']"
SELECT party.Party FROM party,False,"For each delegate, find the names of the party they are part of.",940,"SELECT T1.Delegate ,  T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID",election,"['party', 'election']"
SELECT party.Governor FROM party WHERE party.Party = 1,False,Who were the governors of the parties associated with delegates from district 1?,941,SELECT T2.Governor FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T1.District  =  1,election,"['party', 'election']"
SELECT party.Party FROM party JOIN election ON party.Party_ID = election.Party WHERE election.District = 1,False,Find the parties associated with the delegates from district 1. Who served as governors of the parties?,942,SELECT T2.Governor FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T1.District  =  1,election,"['party', 'election']"
"SELECT county.County_name, COUNT(*) FROM county GROUP BY county.County_name",False,Show the name of each county along with the corresponding number of delegates from that county.,945,"SELECT T1.County_name ,  COUNT(*) FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District GROUP BY T1.County_id",election,"['county', 'election']"
"SELECT county.County_name, COUNT(*) FROM county GROUP BY county.County_name",False,"For each county, find the name of the county and the number of delegates from that county.",946,"SELECT T1.County_name ,  COUNT(*) FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District GROUP BY T1.County_id",election,"['county', 'election']"
"SELECT party.Party, COUNT(*) FROM party JOIN election ON party.Party_ID = election.Party GROUP BY party.Party",False,Show the name of each party and the corresponding number of delegates from that party.,947,"SELECT T2.Party ,  COUNT(*) FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID GROUP BY T1.Party",election,"['party', 'election']"
SELECT county.County_name FROM county GROUP BY county.County_name HAVING COUNT(*) >= 2,False,Show the names of counties that have at least two delegates.,953,SELECT T1.County_name FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District GROUP BY T1.County_id HAVING COUNT(*)  >=  2,election,"['county', 'election']"
SELECT county.County_name FROM county GROUP BY county.County_name HAVING COUNT(*) >= 2,False,Which counties have two or more delegates? Give me the county names.,954,SELECT T1.County_name FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District GROUP BY T1.County_id HAVING COUNT(*)  >=  2,election,"['county', 'election']"
"SELECT journalist.Name, event.Date FROM news_report JOIN event ON news_report.journalist_ID = event.Event_ID JOIN journalist ON news_report.Event_ID = journalist.journalist_ID",False,Show the names of journalists and the dates of the events they reported.,960,"SELECT T3.Name ,  T2.Date FROM news_report AS T1 JOIN event AS T2 ON T1.Event_ID  =  T2.Event_ID JOIN journalist AS T3 ON T1.journalist_ID  =  T3.journalist_ID",news_report,"['journalist', 'news_report', 'event']"
"SELECT customer.state, customer.acc_type, customer.credit_score FROM customer JOIN loan ON customer.cust_ID = loan.cust_ID WHERE customer.credit_score = 0",False,"What are the states, account types, and credit scores for customers who have 0 loans?",966,"SELECT state ,  acc_type ,  credit_score FROM customer WHERE no_of_loans  =  0",loan_1,"['customer', 'loan']"
"SELECT customer.cust_name, customer.acc_bal FROM customer WHERE customer.cust_name LIKE ""% a %""",False,Find the name and account balance of the customer whose name includes the letter ‘a’.,967,"SELECT cust_name ,  acc_bal FROM customer WHERE cust_name LIKE '%a%'",loan_1,['customer']
"SELECT customer.cust_name, customer.acc_bal FROM customer WHERE customer.cust_name LIKE ""% a %""",False,What are the names and account balances of customers with the letter a in their names?,968,"SELECT cust_name ,  acc_bal FROM customer WHERE cust_name LIKE '%a%'",loan_1,['customer']
SELECT bank.branch_ID FROM bank ORDER BY bank.no_of_customers DESC LIMIT 1,False,Find the branch name of the bank that has the most number of customers.,971,SELECT bname FROM bank ORDER BY no_of_customers DESC LIMIT 1,loan_1,['bank']
SELECT bank.branch_ID FROM bank ORDER BY bank.no_of_customers DESC LIMIT 1,False,What is the name of the bank branch with the greatest number of customers?,972,SELECT bname FROM bank ORDER BY no_of_customers DESC LIMIT 1,loan_1,['bank']
"SELECT customer.cust_name, customer.acc_type, customer.acc_bal FROM customer ORDER BY customer.credit_score LIMIT 1",False,"Find the name, account type, and account balance of the customer who has the highest credit score.",975,"SELECT cust_name ,  acc_type ,  acc_bal FROM customer ORDER BY credit_score DESC LIMIT 1",loan_1,['customer']
"SELECT AVG(customer.acc_bal), customer.acc_type FROM customer WHERE customer.acc_type < 50 GROUP BY customer.acc_type",False,What is the average account balance of customers with credit score below 50 for the different account types?,978,"SELECT avg(acc_bal) ,  acc_type FROM customer WHERE credit_score  <  50 GROUP BY acc_type",loan_1,['customer']
"SELECT SUM(loan.amount), loan.branch_ID FROM loan GROUP BY loan.branch_ID",False,Find the total amount of loans offered by each bank branch.,981,"SELECT sum(amount) ,  T1.bname FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id  =  T2.branch_id GROUP BY T1.bname",loan_1,"['bank', 'loan']"
"SELECT bank.bname, SUM(loan.amount) FROM bank JOIN loan ON bank.branch_ID = loan.branch_ID GROUP BY loan.branch_ID",False,"What are the names of the different bank branches, and what are their total loan amounts?",982,"SELECT sum(amount) ,  T1.bname FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id  =  T2.branch_id GROUP BY T1.bname",loan_1,"['bank', 'loan']"
"SELECT customer.cust_name, customer.acc_bal FROM customer JOIN loan ON customer.cust_ID = loan.cust_ID WHERE loan.amount > 5000",False,Find the name and account balance of the customers who have loans with a total amount of more than 5000.,985,"SELECT T1.cust_name ,  T1.acc_type FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id GROUP BY T1.cust_name HAVING sum(T2.amount)  >  5000",loan_1,"['customer', 'loan']"
"SELECT customer.cust_name, customer.acc_bal FROM customer JOIN loan ON customer.cust_ID = loan.cust_ID WHERE customer.no_of_loans > 5000",False,What are the names and account balances for customers who have taken a total amount of more than 5000 in loans?,986,"SELECT T1.cust_name ,  T1.acc_type FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id GROUP BY T1.cust_name HAVING sum(T2.amount)  >  5000",loan_1,"['customer', 'loan']"
"SELECT bank.city, bank.bname FROM bank JOIN loan ON bank.branch_ID = loan.branch_ID",False,Find the city and name of bank branches that provide business loans.,991,"SELECT T1.bname ,  T1.city FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id  =  T2.branch_id WHERE T2.loan_type  =  'Business'",loan_1,"['bank', 'loan']"
"SELECT loan.branch_ID, bank.city FROM bank JOIN loan ON bank.branch_ID = loan.branch_ID",False,What are the names and cities of bank branches that offer loans for business?,992,"SELECT T1.bname ,  T1.city FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id  =  T2.branch_id WHERE T2.loan_type  =  'Business'",loan_1,"['bank', 'loan']"
"SELECT SUM(loan.amount) FROM bank JOIN loan ON bank.branch_ID = loan.cust_ID WHERE bank.state = ""New York""",False,What is the total amount of money loaned by banks in New York state?,994,SELECT sum(T2.amount) FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id  =  T2.branch_id WHERE T1.state  =  'New York',loan_1,"['bank', 'loan']"
"SELECT Third_Party_Companies.company_name, COUNT(*) FROM Third_Party_Companies JOIN Assets ON Third_Party_Companies.company_id = Assets.supplier_company_id GROUP BY Third_Party_Companies.company_id",False,How many assets does each third party company supply? List the count and the company id.,996,"SELECT count(*) ,  T1.company_id FROM Third_Party_Companies AS T1 JOIN Assets AS T2 ON T1.company_id  =  T2.supplier_company_id GROUP BY T1.company_id",assets_maintenance,"['third_party_companies', 'assets']"
"SELECT Maintenance_Engineers.first_name, Maintenance_Engineers.last_name, Skills.skill_description FROM Maintenance_Engineers JOIN Engineer_Skills ON Maintenance_Engineers.engineer_id = Engineer_Skills.engineer_id JOIN Skills ON Engineer_Skills.skill_id = Skills.skill_id",False,"List all every engineer's first name, last name, details and coresponding skill description.",998,"SELECT T1.first_name ,  T1.last_name ,  T1.other_details ,  T3.skill_description FROM Maintenance_Engineers AS T1 JOIN Engineer_Skills AS T2 ON T1.engineer_id  =  T2.engineer_id JOIN Skills AS T3 ON T2.skill_id  =  T3.skill_id",assets_maintenance,"['engineer_skills', 'maintenance_engineers', 'skills']"
"SELECT Skills.skill_code, MAX(Skills.skill_description) FROM Part_Faults JOIN Skills_Required_To_Fix ON Part_Faults.part_fault_id = Skills_Required_To_Fix.part_fault_id JOIN Skills ON Skills_Required_To_Fix.skill_id = Skills.skill_id GROUP BY Skills.skill_id",False,"For all the faults of different parts, what are all the decriptions of the skills required to fix them? List the name of the faults and the skill description.",999,"SELECT T1.fault_short_name ,  T3.skill_description FROM Part_Faults AS T1 JOIN Skills_Required_To_Fix AS T2 ON T1.part_fault_id  =  T2.part_fault_id JOIN Skills AS T3 ON T2.skill_id  =  T3.skill_id",assets_maintenance,"['part_faults', 'skills', 'skills_required_to_fix']"
"SELECT Assets.asset_id, Assets.asset_details, Assets.asset_make FROM Assets",False,"List the asset id, details, make and model for every asset.",1002,"SELECT asset_id ,  asset_details ,  asset_make ,  asset_model FROM Assets",assets_maintenance,['assets']
"SELECT Staff.staff_name, Maintenance_Engineers.last_name FROM Staff JOIN Engineer_Visits ON Staff.staff_id = Engineer_Visits.contact_staff_id JOIN Maintenance_Engineers ON Engineer_Visits.engineer_id = Maintenance_Engineers.engineer_id",False,Which staff have contacted which engineers? List the staff name and the engineer first name and last name.,1004,"SELECT T1.staff_name ,  T3.first_name ,  T3.last_name FROM Staff AS T1 JOIN Engineer_Visits AS T2 ON T1.staff_id  =  T2.contact_staff_id JOIN Maintenance_Engineers AS T3 ON T2.engineer_id  =  T3.engineer_id",assets_maintenance,"['maintenance_engineers', 'staff', 'engineer_visits']"
"SELECT Staff.staff_name, COUNT(*) FROM Staff JOIN Engineer_Visits ON Staff.staff_id = Engineer_Visits.contact_staff_id GROUP BY Engineer_Visits.contact_staff_id",False,How many engineers did each staff contact? List both the contact staff name and number of engineers contacted.,1007,"SELECT T1.staff_name ,  count(*) FROM Staff AS T1 JOIN Engineer_Visits AS T2 ON T1.staff_id  =  T2.contact_staff_id GROUP BY T1.staff_name",assets_maintenance,"['staff', 'engineer_visits']"
"SELECT train.train_number, train.name FROM train ORDER BY train.time DESC",False,show all train numbers and names ordered by their time from early to late.,1009,"SELECT train_number ,  name FROM train ORDER BY TIME",station_weather,['train']
"SELECT train.train_number, train.time FROM train WHERE train.origin = ""Chennai"" ORDER BY train.time",False,"Give me the times and numbers of all trains that go to Chennai, ordered by time.",1010,"SELECT TIME ,  train_number FROM train WHERE destination  =  'Chennai' ORDER BY TIME",station_weather,['train']
"SELECT COUNT(*) FROM train WHERE train.name LIKE ""% Express %""",False,How many trains have 'Express' in their names?,1011,"SELECT count(*) FROM train WHERE name LIKE ""%Express%""",station_weather,['train']
"SELECT station.network_name, COUNT(*) FROM station JOIN route ON station.id = route.station_id GROUP BY route.station_id",False,"Find the number of trains for each station, as well as the station network name and services.",1014,"SELECT count(*) ,  t1.network_name ,  t1.services FROM station AS t1 JOIN route AS t2 ON t1.id  =  t2.station_id GROUP BY t2.station_id",station_weather,"['route', 'station']"
"SELECT station.id, station.local_authority FROM station JOIN weekly_weather ON station.id = weekly_weather.station_id WHERE weekly_weather.precipitation > 50 ORDER BY weekly_weather.precipitation DESC LIMIT 1",False,Find the id and local authority of the station whose maximum precipitation is higher than 50.,1016,"SELECT t2.id ,  t2.local_authority FROM weekly_weather AS t1 JOIN station AS t2 ON t1.station_id  =  t2.id GROUP BY t1.station_id HAVING max(t1.precipitation)  >  50",station_weather,"['weekly_weather', 'station']"
"SELECT club.name, player.name FROM club JOIN player ON club.Club_ID = player.Club_ID",False,Please show the names and the players of clubs.,1022,"SELECT T1.name ,  T2.Player_id FROM club AS T1 JOIN player AS T2 ON T1.Club_ID  =  T2.Club_ID",sports_competition,"['club', 'player']"
"SELECT club.name, player.name FROM club JOIN player ON club.Club_ID = player.Club_ID",False,What are the names and players of all the clubs?,1023,"SELECT T1.name ,  T2.Player_id FROM club AS T1 JOIN player AS T2 ON T1.Club_ID  =  T2.Club_ID",sports_competition,"['club', 'player']"
SELECT song.song_name FROM song ORDER BY song.releasedate DESC LIMIT 1,False,What is the name of the song that was released in the most recent year?,1034,"SELECT song_name ,  releasedate FROM song ORDER BY releasedate DESC LIMIT 1",music_1,['song']
SELECT song.song_name FROM song ORDER BY song.releasedate DESC LIMIT 1,False,What is the name of the song that was released most recently?,1035,"SELECT song_name ,  releasedate FROM song ORDER BY releasedate DESC LIMIT 1",music_1,['song']
SELECT song.f_id FROM song ORDER BY song.f_id DESC LIMIT 1,False,What is the id of the longest song?,1036,SELECT f_id FROM files ORDER BY duration DESC LIMIT 1,music_1,"['song', 'files']"
SELECT song.f_id FROM song ORDER BY song.f_id DESC LIMIT 1,False,Find the id of the song that lasts the longest.,1037,SELECT f_id FROM files ORDER BY duration DESC LIMIT 1,music_1,"['song', 'files']"
"SELECT song.song_name, song.country FROM artist JOIN song ON artist.artist_name = song.artist_name WHERE song.rating > 9",False,List the name and country of origin for all singers who have produced songs with rating above 9.,1038,"SELECT DISTINCT T1.artist_name ,  T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.rating  >  9",music_1,"['artist', 'song']"
"SELECT DISTINCT song.artist_name, song.country FROM artist JOIN song ON artist.artist_name = song.f_id WHERE song.rating > 9",False,What are the different names and countries of origins for all artists whose song ratings are above 9?,1039,"SELECT DISTINCT T1.artist_name ,  T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.rating  >  9",music_1,"['artist', 'song']"
SELECT COUNT(*) FROM song WHERE song.releasedate = 4,False,How many songs have 4 minute duration?,1042,"SELECT count(*) FROM files WHERE duration LIKE ""4:%""",music_1,"['song', 'files']"
SELECT COUNT(*) FROM song WHERE song.releasedate = 4,False,What is the count of the songs that last approximately 4 minutes?,1043,"SELECT count(*) FROM files WHERE duration LIKE ""4:%""",music_1,"['song', 'files']"
"SELECT AVG(song.rating) FROM artist JOIN song ON artist.artist_name = song.artist_name WHERE artist.gender = ""VALUE""",False,What is the average rating of songs produced by female artists?,1044,"SELECT avg(T2.rating) FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T1.gender  =  ""Female""",music_1,"['artist', 'song']"
"SELECT COUNT(song.song_name) FROM artist JOIN song ON artist.artist_name = song.artist_name WHERE artist.gender = ""VALUE""",False,"How many songs, on average, are sung by a female artist?",1045,"SELECT avg(T2.rating) FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T1.gender  =  ""Female""",music_1,"['artist', 'song']"
"SELECT artist.country FROM artist JOIN song ON artist.artist_name = song.artist_name WHERE artist.gender = ""female"" AND song.languages = ""Bangla""",False,What is the country of origin of the artist who is female and produced a song in Bangla?,1046,"SELECT T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T1.gender  =  ""Female"" AND T2.languages  =  ""bangla""",music_1,"['artist', 'song']"
"SELECT song.country FROM artist JOIN song ON artist.artist_name = song.artist_name WHERE artist.gender = ""Bangla"" AND song.languages = ""female""",False,What countries are the female artists who sung in the language Bangla from?,1047,"SELECT T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T1.gender  =  ""Female"" AND T2.languages  =  ""bangla""",music_1,"['artist', 'song']"
"SELECT COUNT(*) FROM artist WHERE artist.gender = ""VALUE""",False,How many artists are male and how many are female?,1051,"SELECT count(*) ,  gender FROM artist GROUP BY gender",music_1,['artist']
"SELECT COUNT(DISTINCT files.formats), files.formats FROM files GROUP BY files.formats",False,"For each file format, return the number of artists who released songs in that format.",1054,"SELECT count(*) ,  formats FROM files GROUP BY formats",music_1,['files']
"SELECT files.formats, COUNT(*) FROM files JOIN song ON files.f_id = song.genre_is GROUP BY files.formats",False,How many songs were released for each format?,1055,"SELECT count(*) ,  formats FROM files GROUP BY formats",music_1,"['song', 'files']"
"SELECT genre.g_name, genre.rating FROM genre WHERE genre.g_name = ""oder""",False,"List the names of all genres in alphabetical oder, together with its ratings.",1056,"SELECT g_name ,  rating FROM genre ORDER BY g_name",music_1,['genre']
"SELECT genre.g_name, genre.rating FROM genre ORDER BY genre.rating",False,"What are the names of all genres in alphabetical order, combined with its ratings?",1057,"SELECT g_name ,  rating FROM genre ORDER BY g_name",music_1,['genre']
"SELECT artist.artist_name FROM artist WHERE artist.gender = ""UK""",False,What are the names of artists who are Male and are from UK?,1058,"SELECT artist_name FROM artist WHERE country  =  ""UK"" AND gender  =  ""Male""",music_1,['artist']
"SELECT artist.artist_name FROM artist WHERE artist.gender = ""British""",False,What are the names of all male British artists?,1059,"SELECT artist_name FROM artist WHERE country  =  ""UK"" AND gender  =  ""Male""",music_1,['artist']
"SELECT song.song_name FROM genre JOIN song ON genre.g_name = song.f_id WHERE song.languages = ""English"" OR song.languages = ""modern""",False,Find the names of songs whose genre is modern or language is English.,1060,"SELECT song_name FROM song WHERE genre_is  =  ""modern"" OR languages  =  ""english""",music_1,"['song', 'genre']"
"SELECT song.song_name FROM genre JOIN song ON genre.g_name = song.f_id WHERE song.languages = ""English"" OR song.languages = ""modern""",False,What are the names of the songs that are modern or sung in English?,1061,"SELECT song_name FROM song WHERE genre_is  =  ""modern"" OR languages  =  ""english""",music_1,"['song', 'genre']"
"SELECT AVG(song.rating), AVG(song.resolution) FROM song WHERE song.languages = ""Bangla""",False,What are the average rating and resolution of songs that are in Bangla?,1062,"SELECT avg(rating) ,  avg(resolution) FROM song WHERE languages  =  ""bangla""",music_1,['song']
"SELECT song.song_name, song.genre_is, song.artist_name FROM genre JOIN song ON genre.g_name = song.f_id WHERE song.languages = ""English"" ORDER BY song.rating",False,"List the id, genre and artist name of English songs ordered by rating.",1064,"SELECT f_id ,  genre_is ,  artist_name FROM song WHERE languages  =   ""english"" ORDER BY rating",music_1,"['song', 'genre']"
"SELECT song.song_name, song.genre_is, artist.artist_name FROM artist JOIN song ON artist.artist_name = song.f_id WHERE song.languages = ""English"" ORDER BY song.rating",False,"What is the id, genre, and name of the artist for every English song ordered by ascending rating?",1065,"SELECT f_id ,  genre_is ,  artist_name FROM song WHERE languages  =   ""english"" ORDER BY rating",music_1,"['artist', 'song']"
"SELECT AVG(player_college.year) FROM player_college WHERE player_college.college_id = ""Boston Red Stockings""",False,What is average salary of the players in the team named 'Boston Red Stockings' ?,1066,SELECT avg(T1.salary) FROM salary AS T1 JOIN team AS T2 ON T1.team_id  =  T2.team_id_br WHERE T2.name  = 'Boston Red Stockings',baseball_1,"['player_college', 'team', 'salary']"
"SELECT AVG(player_college.year) FROM player_college WHERE player_college.college_id = ""Boston Red Stockings""",False,Compute the average salary of the players in the team called 'Boston Red Stockings'.,1067,SELECT avg(T1.salary) FROM salary AS T1 JOIN team AS T2 ON T1.team_id  =  T2.team_id_br WHERE T2.name  = 'Boston Red Stockings',baseball_1,"['player_college', 'team', 'salary']"
"SELECT all_star.player_id, all_star.game_id FROM player_college JOIN all_star ON player_college.player_id = all_star.player_id WHERE all_star.year = 1998",False,What are first and last names of players participating in all star game in 1998?,1068,"SELECT name_first ,  name_last FROM player AS T1 JOIN all_star AS T2 ON T1.player_id  =  T2.player_id WHERE YEAR  =  1998",baseball_1,"['all_star', 'player_college', 'player']"
SELECT all_star.game_id FROM player_college JOIN all_star ON player_college.player_id = all_star.player_id WHERE all_star.year = 1998,False,List the first and last name for players who participated in all star game in 1998.,1069,"SELECT name_first ,  name_last FROM player AS T1 JOIN all_star AS T2 ON T1.player_id  =  T2.player_id WHERE YEAR  =  1998",baseball_1,"['all_star', 'player_college', 'player']"
"SELECT channel.Name FROM channel JOIN broadcast ON channel.Channel_ID = broadcast.Channel_ID WHERE broadcast.Time_of_day = ""morning""",False,Find the names of the channels that are broadcast in the morning.,1070,SELECT t1.name FROM channel AS t1 JOIN broadcast AS t2 ON t1.channel_id  =  t2.channel_id WHERE t2.time_of_day  =  'Morning',program_share,"['broadcast', 'channel']"
"SELECT channel.Name FROM channel JOIN broadcast ON channel.Channel_ID = broadcast.Channel_ID WHERE broadcast.Time_of_day = ""morning""",False,Which channels are broadcast in the morning? Give me the channel names.,1071,SELECT t1.name FROM channel AS t1 JOIN broadcast AS t2 ON t1.channel_id  =  t2.channel_id WHERE t2.time_of_day  =  'Morning',program_share,"['broadcast', 'channel']"
"SELECT Physician.Name, COUNT(*) FROM Physician JOIN Prescribes ON Physician.EmployeeID = Prescribes.Physician GROUP BY Prescribes.Physician",False,How many patients do each physician take care of? List their names and number of patients they take care of.,1082,"SELECT T1.name ,  count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid",hospital_1,"['physician', 'prescribes', 'patient']"
"SELECT Physician.Name, COUNT(*) FROM Physician JOIN Prescribes ON Physician.EmployeeID = Prescribes.Physician GROUP BY Physician.Name",False,Return the name of each physician and the number of patients he or she treats.,1083,"SELECT T1.name ,  count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid",hospital_1,"['physician', 'prescribes', 'patient']"
SELECT Physician.Name FROM Physician JOIN Appointment ON Physician.EmployeeID = Appointment.Physician GROUP BY Appointment.Physician HAVING COUNT(*) > 1,False,Find the name of physicians who are in charge of more than one patient.,1084,SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid HAVING count(*)  >  1,hospital_1,"['physician', 'appointment', 'patient']"
"SELECT Block.BlockCode, COUNT(*) FROM Block JOIN Room ON Block.BlockFloor = Room.BlockCode GROUP BY Block.BlockCode",False,Find the number of rooms for different block code?,1088,"SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",hospital_1,"['room', 'block']"
"SELECT Block.BlockCode, COUNT(*) FROM Block JOIN Room ON Block.BlockFloor = Room.BlockCode GROUP BY Block.BlockCode",False,How many rooms are located for each block code?,1089,"SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",hospital_1,"['room', 'block']"
"SELECT Medication.Brand, COUNT(*) FROM Medication GROUP BY Medication.Brand",False,Find the number of medications prescribed for each brand.,1090,"SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",hospital_1,"['prescribes', 'medication']"
"SELECT Medication.Brand, COUNT(*) FROM Medication GROUP BY Medication.Brand",False,How many medications are prescribed for each brand?,1091,"SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",hospital_1,"['prescribes', 'medication']"
"SELECT Physician.Name FROM Physician WHERE Physician.Position LIKE ""% senior %""",False,Find the name of physicians whose position title contains the word 'senior'.,1092,SELECT name FROM physician WHERE POSITION LIKE '%senior%',hospital_1,['physician']
"SELECT Physician.Name FROM Physician WHERE Physician.Name LIKE ""% senior %""",False,What are the names of the physicians who have 'senior' in their titles.,1093,SELECT name FROM physician WHERE POSITION LIKE '%senior%',hospital_1,['physician']
SELECT Undergoes.Patient FROM Undergoes ORDER BY Undergoes.DateUndergoes DESC LIMIT 1,False,Find the patient who has the most recent undergoing treatment?,1094,SELECT patient FROM undergoes ORDER BY dateundergoes LIMIT 1,hospital_1,['undergoes']
SELECT Undergoes.Patient FROM Undergoes ORDER BY Undergoes.DateUndergoes DESC LIMIT 1,False,Which patient is undergoing the most recent treatment?,1095,SELECT patient FROM undergoes ORDER BY dateundergoes LIMIT 1,hospital_1,['undergoes']
"SELECT Physician.EmployeeID, Affiliated_With.PrimaryAffiliation FROM Physician JOIN Affiliated_With ON Physician.EmployeeID = Affiliated_With.Physician WHERE Affiliated_With.Department = ""id""",False,List the physicians' employee ids together with their primary affiliation departments' ids.,1096,"SELECT physician ,  department FROM affiliated_with WHERE primaryaffiliation  =  1",hospital_1,"['physician', 'affiliated_with']"
"SELECT Affiliated_With.Physician, COUNT(*) FROM Affiliated_With GROUP BY Affiliated_With.Physician",False,What are each physician's employee id and department id primarily affiliated.,1097,"SELECT physician ,  department FROM affiliated_with WHERE primaryaffiliation  =  1",hospital_1,['affiliated_with']
SELECT Nurse.Name FROM Nurse JOIN On_Call ON Nurse.EmployeeID = On_Call.Nurse WHERE On_Call.BlockFloor = 1 AND On_Call.BlockCode = 1,False,What nurses are on call with block floor 1 and block code 1? Tell me their names.,1100,SELECT nurse FROM on_call WHERE blockfloor  =  1 AND blockcode  =  1,hospital_1,"['on_call', 'nurse']"
SELECT Procedures.Name FROM Procedures ORDER BY Procedures.Cost DESC LIMIT 3,False,Find the three most expensive procedures.,1106,SELECT name FROM procedures ORDER BY cost LIMIT 3,hospital_1,['procedures']
SELECT Procedures.Name FROM Procedures ORDER BY Procedures.Cost DESC LIMIT 3,False,What are the three most costly procedures?,1107,SELECT name FROM procedures ORDER BY cost LIMIT 3,hospital_1,['procedures']
"SELECT ship.Name FROM ship WHERE ship.Nationality = ""US"" OR ship.Nationality = ""UK""",False,What are the names of the ships  that are from either the US or the UK?,1111,"SELECT Name FROM ship WHERE Nationality  =  ""United States"" OR Nationality  =  ""United Kingdom""",ship_mission,['ship']
"SELECT company.Name FROM company WHERE company.Industry = ""banking"" OR company.Industry = ""retailing""",False,Show the names of companies in the banking or retailing industry?,1125,"SELECT Name FROM company WHERE Industry  =  ""Banking"" OR Industry  =  ""Retailing""",company_employee,['company']
SELECT company.Name FROM company WHERE company.Sales_in_Billion > 200 ORDER BY company.Sales_in_Billion DESC,False,list the names of the companies with more than 200 sales in the descending order of sales and profits.,1130,"SELECT name FROM company WHERE Sales_in_Billion  >  200 ORDER BY Sales_in_Billion ,  Profits_in_Billion DESC",company_employee,['company']
"SELECT MIN(film_market_estimation.Low_Estimate), MIN(film_market_estimation.High_Estimate) FROM film_market_estimation",False,What are the low and high estimates of film markets?,1131,"SELECT Low_Estimate ,  High_Estimate FROM film_market_estimation",film_rank,['film_market_estimation']
"SELECT MIN(film_market_estimation.Low_Estimate), MIN(film_market_estimation.High_Estimate) FROM film_market_estimation",False,Return the low and high estimates for all film markets.,1132,"SELECT Low_Estimate ,  High_Estimate FROM film_market_estimation",film_rank,['film_market_estimation']
"SELECT film.Title, film.Studio FROM film WHERE film.Studio LIKE ""% Universal %""",False,"Find the titles and studios of the films that are produced by some film studios that contained the word ""Universal"".",1145,"SELECT title ,  Studio FROM film WHERE Studio LIKE ""%Universal%""",film_rank,['film']
"SELECT film.Title, film.Director FROM film WHERE film.Studio LIKE ""% Universal %""",False,"What are the titles and studios of films that have been produced by a studio whose name contains ""Universal""?",1146,"SELECT title ,  Studio FROM film WHERE Studio LIKE ""%Universal%""",film_rank,['film']
"SELECT Organisations.organisation_id, Organisations.organisation_details FROM Organisations",False,Find the organisation ids and details of the organisations which are involved in,1149,"SELECT T2.organisation_id ,  T2.organisation_details FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id  =  T2.organisation_id GROUP BY T2.organisation_id HAVING sum(T1.grant_amount)  >  6000",tracking_grants_for_research,"['organisations', 'grants']"
"SELECT Grants.organisation_id, Organisations.organisation_details FROM Organisations JOIN Grants ON Organisations.organisation_id = Grants.organisation_id WHERE Grants.grant_amount > 6000",False,What are the ids and details for all organizations that have grants of more than 6000 dollars?,1150,"SELECT T2.organisation_id ,  T2.organisation_details FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id  =  T2.organisation_id GROUP BY T2.organisation_id HAVING sum(T1.grant_amount)  >  6000",tracking_grants_for_research,"['organisations', 'grants']"
"SELECT Project_Staff.date_from, Project_Staff.date_to FROM Project_Staff",False,"When do all the researcher role staff start to work, and when do they stop working?",1151,"SELECT date_from ,  date_to FROM Project_Staff WHERE role_code  =  'researcher'",tracking_grants_for_research,['project_staff']
"SELECT Project_Staff.date_from, Project_Staff.date_to FROM Project_Staff",False,When did researchers start and stop working?,1152,"SELECT date_from ,  date_to FROM Project_Staff WHERE role_code  =  'researcher'",tracking_grants_for_research,['project_staff']
SELECT Project_Staff.date_from FROM Project_Staff ORDER BY Project_Staff.date_to ASC LIMIT 1,False,When did the first staff for the projects started working?,1155,SELECT date_from FROM Project_Staff ORDER BY date_from ASC LIMIT 1,tracking_grants_for_research,['project_staff']
SELECT Project_Staff.date_from FROM Project_Staff ORDER BY Project_Staff.date_to ASC LIMIT 1,False,When did the first staff member start working?,1156,SELECT date_from FROM Project_Staff ORDER BY date_from ASC LIMIT 1,tracking_grants_for_research,['project_staff']
"SELECT Document_Types.document_description FROM Document_Types WHERE Document_Types.document_description LIKE ""% Initial %""",False,Which document type is described with the prefix 'Initial'?,1157,SELECT document_type_code FROM Document_Types WHERE document_description LIKE 'Initial%',tracking_grants_for_research,['document_types']
"SELECT Documents.document_type_code FROM Document_Types JOIN Documents ON Document_Types.document_type_code = Documents.document_type_code WHERE Document_Types.document_description LIKE ""% Initial %""",False,What is the type of the document whose description starts with the word 'Initial'?,1158,SELECT document_type_code FROM Document_Types WHERE document_description LIKE 'Initial%',tracking_grants_for_research,"['documents', 'document_types']"
"SELECT COUNT(*) FROM Project_Staff WHERE Project_Staff.date_from < ""1989-04-24 23 : 51 : 54"" OR Project_Staff.date_from < ""1989-04-24 23 : 51 : 54""",False,How many project staff worked as leaders or started working before '1989-04-24 23:51:54'?,1161,SELECT count(*) FROM Project_Staff WHERE role_code  =  'leader' OR date_from  <  '1989-04-24 23:51:54',tracking_grants_for_research,['project_staff']
"SELECT COUNT(*) FROM Project_Staff WHERE Project_Staff.date_from < ""1989-04-24 23 : 51 : 54""",False,How many project members were leaders or started working before '1989-04-24 23:51:54'?,1162,SELECT count(*) FROM Project_Staff WHERE role_code  =  'leader' OR date_from  <  '1989-04-24 23:51:54',tracking_grants_for_research,['project_staff']
SELECT MAX(Project_Staff.date_from) FROM Project_Staff,False,What is the last date of the staff leaving the projects?,1163,SELECT date_to FROM Project_Staff ORDER BY date_to DESC LIMIT 1,tracking_grants_for_research,['project_staff']
SELECT MAX(Project_Staff.date_from) FROM Project_Staff,False,What is the last date that a staff member left a project?,1164,SELECT date_to FROM Project_Staff ORDER BY date_to DESC LIMIT 1,tracking_grants_for_research,['project_staff']
"SELECT COUNT(*), Tasks.project_id FROM Tasks GROUP BY Tasks.project_id",False,"For each project id, how many tasks are there?",1166,"SELECT count(*) ,  T1.project_details FROM Projects AS T1 JOIN Tasks AS T2 ON T1.project_id  =  T2.project_id GROUP BY T1.project_id",tracking_grants_for_research,"['tasks', 'projects']"
SELECT Project_Staff.role_code FROM Project_Staff,False,What are the staff roles of the staff who,1167,SELECT role_code FROM Project_Staff WHERE date_from  >  '2003-04-19 15:06:20' AND date_to  <  '2016-03-15 00:33:18',tracking_grants_for_research,['project_staff']
"SELECT Project_Staff.role_code FROM Project_Staff WHERE Project_Staff.date_from > ""2003-04 03-15 00 : 33 : 18"" AND Project_Staff.role_code = ""2016-04 03-15 00 : 33 : 18""",False,What roles did staff members play between '2003-04-19 15:06:20' and '2016-03-15 00:33:18'?,1168,SELECT role_code FROM Project_Staff WHERE date_from  >  '2003-04-19 15:06:20' AND date_to  <  '2016-03-15 00:33:18',tracking_grants_for_research,['project_staff']
"SELECT COUNT(*) FROM Person JOIN PersonFriend ON Person.name = PersonFriend.friend WHERE PersonFriend.friend = ""Dan""",False,How many friends does Dan have?,1169,SELECT count(T2.friend) FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T1.name  =  'Dan',network_2,"['personfriend', 'person']"
"SELECT COUNT(*) FROM Person JOIN PersonFriend ON Person.name = PersonFriend.friend WHERE PersonFriend.friend = ""Dan""",False,How many friends does Dan have?,1170,SELECT count(T2.friend) FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T1.name  =  'Dan',network_2,"['personfriend', 'person']"
"SELECT COUNT(*) FROM Person WHERE Person.age > 30 AND Person.job = ""VALUE""",False,How many people whose age is greater 30 and job is engineer?,1173,SELECT count(*) FROM Person WHERE age  >  30 AND job  =  'engineer',network_2,['person']
SELECT COUNT(*) FROM Person WHERE Person.age > 30,False,HOw many engineers are older than 30?,1174,SELECT count(*) FROM Person WHERE age  >  30 AND job  =  'engineer',network_2,['person']
"SELECT AVG(Person.age), Person.gender FROM Person GROUP BY Person.gender",False,What is average age of male for different job title?,1179,"SELECT avg(age) ,  job FROM Person WHERE gender  =  'male' GROUP BY job",network_2,['person']
"SELECT AVG(Person.age), Person.job FROM Person GROUP BY Person.job",False,What is the average age for a male in each job?,1180,"SELECT avg(age) ,  job FROM Person WHERE gender  =  'male' GROUP BY job",network_2,['person']
"SELECT SUM(Person.age), Person.job FROM Person GROUP BY Person.job",False,How old is the youngest person for each job?,1182,"SELECT min(age) ,  job FROM Person GROUP BY job",network_2,['person']
"SELECT Person.name, Person.age FROM Person WHERE Person.gender = ""VALUE"" ORDER BY Person.age",False,Find the name and age of all males in order of their age.,1187,SELECT name FROM Person WHERE gender  =  'male' ORDER BY age,network_2,['person']
"SELECT Person.name, Person.age FROM Person WHERE Person.gender = ""male"" ORDER BY Person.age",False,What is the name and age of every male? Order the results by age.,1188,SELECT name FROM Person WHERE gender  =  'male' ORDER BY age,network_2,['person']
"SELECT PersonFriend.name FROM Person JOIN PersonFriend ON Person.name = PersonFriend.friend WHERE PersonFriend.name = ""Bob""",False,Find the name of persons who are friends with Bob.,1191,SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend  =  'Bob',network_2,"['personfriend', 'person']"
"SELECT PersonFriend.name FROM Person JOIN PersonFriend ON Person.name = PersonFriend.friend WHERE PersonFriend.name = ""Bob""",False,What are the names of all of Bob's friends?,1192,SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend  =  'Bob',network_2,"['personfriend', 'person']"
"SELECT Person.name FROM Person JOIN PersonFriend ON Person.name = PersonFriend.friend WHERE Person.city = ""new york""",False,Who has a friend that is from new york city?,1199,SELECT T2.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T1.city  =  'new york city',network_2,"['personfriend', 'person']"
"SELECT PersonFriend.name FROM Person JOIN PersonFriend ON Person.name = PersonFriend.friend WHERE Person.city = ""New York""",False,What are the names of all friends who are from New York?,1200,SELECT T2.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T1.city  =  'new york city',network_2,"['personfriend', 'person']"
"SELECT member.Name, college.College_Location FROM member JOIN college ON member.College_ID = college.College_ID ORDER BY college.Name ASC",False,Show the names of members and the locations of colleges they go to in ascending alphabetical order of member names.,1206,"SELECT T2.Name ,  T1.College_Location FROM college AS T1 JOIN member AS T2 ON T1.College_ID  =  T2.College_ID ORDER BY T2.Name ASC",decoration_competition,"['member', 'college']"
"SELECT Premises.premises_type, Premises.premise_details FROM Premises WHERE Premises.premises_type = ""premise""",False,Find the types and details for all premises and order by the premise type.,1211,"SELECT premises_type ,  premise_details FROM premises ORDER BY premises_type",customers_campaigns_ecommerce,['premises']
"SELECT Customers.customer_name, Customers.customer_phone FROM Customers JOIN Mailshot_Customers ON Customers.customer_id = Mailshot_Customers.customer_id WHERE Mailshot_Customers.outcome_code = ""no Response""",False,Show the name and phone for customers with a mailshot with outcome code 'No Response'.,1214,"SELECT T1.customer_name ,  T1.customer_phone FROM customers AS T1 JOIN mailshot_customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.outcome_code  =  'No Response'",customers_campaigns_ecommerce,"['customers', 'mailshot_customers']"
"SELECT Customers.customer_name FROM Customers JOIN Customer_Orders ON Customers.customer_id = Customer_Orders.customer_id WHERE Customer_Orders.shipping_method_code = ""FedEx""",False,Show the names of customers having an order with shipping method FedEx and order status Paid.,1217,SELECT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE shipping_method_code  =  'FedEx' AND order_status_code  =  'Paid',customers_campaigns_ecommerce,"['customer_orders', 'customers']"
"SELECT Student.Fname FROM Student WHERE Student.Fname LIKE ""% a %""",False,"Find the first names of students whose first names contain letter ""a"".",1220,SELECT DISTINCT Fname FROM STUDENT WHERE Fname LIKE '%a%',college_3,['student']
"SELECT Student.Fname FROM Student WHERE Student.Fname LIKE ""% a %""",False,"What are the first names for students who have an ""a"" in their first name?",1221,SELECT DISTINCT Fname FROM STUDENT WHERE Fname LIKE '%a%',college_3,['student']
"SELECT DISTINCT Faculty.Room FROM Faculty WHERE Faculty.Rank = ""VALUE"" AND Faculty.Building = ""NEB""",False,Find the rooms of faculties with rank professor who live in building NEB.,1224,"SELECT Room FROM FACULTY WHERE Rank  =  ""Professor"" AND Building  =  ""NEB""",college_3,['faculty']
"SELECT DISTINCT Faculty.Room FROM Faculty JOIN Member_of ON Faculty.FacID = Member_of.FacID JOIN Department ON Member_of.DNO = Department.DNO WHERE Faculty.Rank = ""VALUE"" AND Faculty.Building = ""NEB""",False,What are the rooms for members of the faculty who are professors and who live in building NEB?,1225,"SELECT Room FROM FACULTY WHERE Rank  =  ""Professor"" AND Building  =  ""NEB""",college_3,"['member_of', 'department', 'faculty']"
"SELECT Student.LName FROM Student WHERE Student.Sex = ""VALUE"" ORDER BY Student.Age DESC",False,"What are the last names of female students, ordered by age descending?",1227,"SELECT LName FROM STUDENT WHERE Sex  =  ""F"" ORDER BY Age DESC",college_3,['student']
"SELECT Faculty.Fname FROM Faculty WHERE Faculty.Rank = ""VALUE"" ORDER BY Faculty.Fname",False,Find the first names of faculties of rank Professor in alphabetic order.,1230,"SELECT Fname FROM FACULTY WHERE Rank  =  ""Professor"" ORDER BY Fname",college_3,['faculty']
"SELECT Faculty.Fname FROM Faculty WHERE Faculty.Rank = ""VALUE"" ORDER BY Faculty.Fname",False,"What are the first names for all faculty professors, ordered by first name?",1231,"SELECT Fname FROM FACULTY WHERE Rank  =  ""Professor"" ORDER BY Fname",college_3,['faculty']
SELECT Course.CName FROM Course JOIN Enrolled_in ON Course.CID = Enrolled_in.CID GROUP BY Course.CID HAVING COUNT(*) >= 4,False,What are the name of courses that have at least five enrollments?,1232,SELECT T1.CName FROM COURSE AS T1 JOIN ENROLLED_IN AS T2 ON T1.CID  =  T2.CID GROUP BY T2.CID HAVING COUNT(*)  >=  5,college_3,"['course', 'enrolled_in']"
SELECT Course.CName FROM Course JOIN Enrolled_in ON Course.CID = Enrolled_in.CID GROUP BY Course.CID HAVING COUNT(*) >= 4,False,Give the names of the courses with at least five enrollments.,1233,SELECT T1.CName FROM COURSE AS T1 JOIN ENROLLED_IN AS T2 ON T1.CID  =  T2.CID GROUP BY T2.CID HAVING COUNT(*)  >=  5,college_3,"['course', 'enrolled_in']"
"SELECT DISTINCT Faculty.Fname, Faculty.Lname FROM Faculty JOIN Course ON Faculty.FacID = Course.Instructor",False,Find the first name and last name of the instructor of course that has course name,1234,"SELECT T2.Fname ,  T2.Lname FROM COURSE AS T1 JOIN FACULTY AS T2 ON T1.Instructor  =  T2.FacID WHERE T1.CName  =  ""COMPUTER LITERACY""",college_3,"['course', 'faculty']"
"SELECT Department.DName, Department.Room FROM Course JOIN Department ON Department.DNO = Course.DNO WHERE Course.CName = ""COMPUTER SCIENCE""",False,Find the department name and room of the course INTRODUCTION TO COMPUTER SCIENCE.,1236,"SELECT T2.Dname ,  T2.Room FROM COURSE AS T1 JOIN DEPARTMENT AS T2 ON T1.DNO  =  T2.DNO WHERE T1.CName  =  ""INTRODUCTION TO COMPUTER SCIENCE""",college_3,"['department', 'course']"
"SELECT Department.DName, Department.Room FROM Course JOIN Department ON Department.DNO = Course.DNO WHERE Course.CName = ""COMPUTER SCIENCE""",False,What are the department name and room for the course INTRODUCTION TO COMPUTER SCIENCE?,1237,"SELECT T2.Dname ,  T2.Room FROM COURSE AS T1 JOIN DEPARTMENT AS T2 ON T1.DNO  =  T2.DNO WHERE T1.CName  =  ""INTRODUCTION TO COMPUTER SCIENCE""",college_3,"['department', 'course']"
"SELECT Student.Fname, Student.LName, Enrolled_in.Grade FROM Enrolled_in JOIN Student ON Enrolled_in.StuID = Student.StuID",False,Find the student first and last names and grade points of all enrollments.,1238,"SELECT T3.Fname ,  T3.LName ,  T2.gradepoint FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade  =  T2.lettergrade AND T1.StuID  =  T3.StuID",college_3,"['student', 'gradeconversion', 'enrolled_in']"
"SELECT Student.Fname, Student.LName, Enrolled_in.Grade FROM Enrolled_in JOIN Student ON Enrolled_in.StuID = Student.StuID",False,What are the full names and gradepoints for all enrollments?,1239,"SELECT T3.Fname ,  T3.LName ,  T2.gradepoint FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade  =  T2.lettergrade AND T1.StuID  =  T3.StuID",college_3,"['student', 'gradeconversion', 'enrolled_in']"
"SELECT Student.Fname, Student.LName FROM Minor_in JOIN Student ON Minor_in.StuID = Student.StuID WHERE Student.Major = 140",False,What are the first names and last names of the students that minor in the department with DNO 140.,1242,"SELECT T2.Fname ,  T2.Lname FROM MINOR_IN AS T1 JOIN STUDENT AS T2 ON T1.StuID  =  T2.StuID WHERE T1.DNO  =  140",college_3,"['student', 'minor_in']"
"SELECT airport.International_Passengers FROM airport WHERE airport.Airport_Name = ""London"" AND airport.Domestic_Passengers = ""Heathrow""",False,"What are the number of international and domestic passengers of the airport named London ""Heathrow""?",1244,"SELECT International_Passengers ,  Domestic_Passengers FROM airport WHERE Airport_Name  =  ""London Heathrow""",aircraft,['airport']
"SELECT SUM(airport.Total_Passengers) FROM airport WHERE airport.Domestic_Passengers LIKE ""% London %""",False,"What are the total number of Domestic Passengers of airports that contain the word ""London"".",1246,"SELECT sum(Domestic_Passengers) FROM airport WHERE Airport_Name LIKE ""%London%""",aircraft,['airport']
"SELECT SUM(airport.Total_Passengers) FROM airport WHERE airport.Airport_Name = ""London""",False,What are the total number of domestic passengers at all London airports?,1247,"SELECT sum(Domestic_Passengers) FROM airport WHERE Airport_Name LIKE ""%London%""",aircraft,['airport']
"SELECT MAX(airport.Transit_Passengers), MIN(airport.Transit_Passengers) FROM airport WHERE airport.Airport_ID = ""VALUE""",False,What are the maximum and minimum number of transit passengers of all aiports.,1248,"SELECT max(Transit_Passengers) ,  min(Transit_Passengers) FROM airport",aircraft,['airport']
SELECT pilot.Name FROM pilot WHERE pilot.Age <= 30 ORDER BY pilot.Age DESC,False,List names of all pilot aged 30 or younger in descending alphabetical order.,1250,SELECT Name FROM pilot WHERE Age  <=  30 ORDER BY Name DESC,aircraft,['pilot']
SELECT pilot.Name FROM pilot WHERE pilot.Age >= 30,False,What are the names of all pilots 30 years old or young in descending alphabetical order?,1251,SELECT Name FROM pilot WHERE Age  <=  30 ORDER BY Name DESC,aircraft,['pilot']
"SELECT match.Location, match.Winning_Aircraft FROM match JOIN aircraft ON match.Winning_Aircraft = aircraft.Aircraft_ID",False,Please list the location and the winning aircraft name.,1252,"SELECT T2.Location ,  T1.Aircraft FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID  =  T2.Winning_Aircraft",aircraft,"['match', 'aircraft']"
"SELECT match.Location, match.Winning_Aircraft FROM match JOIN aircraft ON match.Winning_Aircraft = aircraft.Aircraft_ID ORDER BY aircraft.Aircraft LIMIT 1",False,What is the location and name of the winning aircraft?,1253,"SELECT T2.Location ,  T1.Aircraft FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID  =  T2.Winning_Aircraft",aircraft,"['match', 'aircraft']"
"SELECT aircraft.Aircraft, match.Winning_Aircraft FROM aircraft JOIN match ON aircraft.Aircraft_ID = match.Winning_Aircraft GROUP BY match.Winning_Aircraft HAVING COUNT(*) >= 2",False,List the names of aircrafts and that won matches at least twice.,1256,SELECT T1.Aircraft FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID  =  T2.Winning_Aircraft GROUP BY T2.Winning_Aircraft HAVING COUNT(*)  >=  2,aircraft,"['match', 'aircraft']"
"SELECT Player.pName FROM Player WHERE Player.pName LIKE ""% a %""",False,Find the players whose names contain letter 'a'.,1264,SELECT DISTINCT pName FROM Player WHERE pName LIKE '%a%',soccer_2,['player']
"SELECT Player.pName FROM Player WHERE Player.pName LIKE ""% a %""",False,Who are the players that have names containing the letter a?,1265,SELECT DISTINCT pName FROM Player WHERE pName LIKE '%a%',soccer_2,['player']
"SELECT College.cName, College.enr FROM College WHERE College.state = ""Louisiana"" AND College.enr > 10000",False,What are the names and enrollment numbers for colleges that have more than 10000 enrolled and are located in Louisiana?,1267,"SELECT cName ,  enr FROM College WHERE enr  >  10000 AND state = ""LA""",soccer_2,['college']
SELECT College.cName FROM College WHERE College.enr > 18000,False,What is the name of every college in alphabetical order that has more than 18000 students enrolled?,1269,SELECT cName FROM College WHERE enr  >  18000 ORDER BY cName,soccer_2,['college']
SELECT Player.pName FROM Player ORDER BY Player.HS DESC,False,What are the name of the players who received a card in descending order of the hours of training?,1271,SELECT pName FROM Player WHERE yCard  =  'yes' ORDER BY HS DESC,soccer_2,['player']
"SELECT MIN(Player.HS), Tryout.pPos FROM Tryout JOIN Player ON Player.pID = Tryout.cName GROUP BY Tryout.pPos",False,What is minimum hours of the students playing in different position?,1272,"SELECT min(T2.HS) ,   T1.pPos FROM tryout AS T1 JOIN player AS T2 ON T1.pID  =  T2.pID GROUP BY T1.pPos",soccer_2,"['tryout', 'player']"
"SELECT Tryout.pPos, MIN(*) FROM Tryout GROUP BY Tryout.pPos",False,"For each position, what is the minimum time students spent practicing?",1273,"SELECT min(T2.HS) ,   T1.pPos FROM tryout AS T1 JOIN player AS T2 ON T1.pID  =  T2.pID GROUP BY T1.pPos",soccer_2,"['tryout', 'player']"
SELECT College.cName FROM College GROUP BY College.state ORDER BY SUM(College.enr) LIMIT 1,False,What is the name of the school with smallest enrollment size per state?,1277,"SELECT cName ,  state ,  min(enr) FROM college GROUP BY state",soccer_2,['college']
SELECT DISTINCT College.state FROM Tryout JOIN College ON Tryout.pID = College.cName,False,What are the different states that had students successfully try out?,1279,SELECT DISTINCT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.decision  =  'yes',soccer_2,"['tryout', 'college']"
"SELECT Tryout.cName FROM Tryout WHERE Tryout.decision = ""yes""",False,Find the name and college of students whose decisions are yes in the tryout.,1280,"SELECT T1.pName ,  T2.cName FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T2.decision  =  'yes'",soccer_2,"['tryout', 'player']"
"SELECT Player.pName, Tryout.cName FROM Player JOIN Tryout ON Player.pID = Tryout.pID JOIN College ON Tryout.pID = College.cName WHERE Player.yCard = ""yes""",False,"What are the names of all the players who received a yes during tryouts, and also what are the names of their colleges?",1281,"SELECT T1.pName ,  T2.cName FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T2.decision  =  'yes'",soccer_2,"['tryout', 'college', 'player']"
SELECT Tryout.cName FROM Tryout ORDER BY Tryout.cName,False,Find the name of all students who were in the tryout sorted in alphabetic order.,1282,SELECT T1.pName FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID ORDER BY T1.pName,soccer_2,"['tryout', 'player']"
SELECT Tryout.cName FROM Tryout ORDER BY Tryout.cName,False,What are the names of all students who tried out in alphabetical order?,1283,SELECT T1.pName FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID ORDER BY T1.pName,soccer_2,"['tryout', 'player']"
"SELECT Tryout.cName, Player.HS FROM Player JOIN Tryout ON Player.pID = Tryout.pID WHERE Tryout.decision = ""yes""",False,Find the name and hours of the students whose tryout decision is yes.,1284,"SELECT T1.pName ,  T1.HS FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T2.decision  =  'yes'",soccer_2,"['tryout', 'player']"
"SELECT Tryout.cName, Player.HS FROM Tryout JOIN Player ON Tryout.pID = Player.pID WHERE Player.yCard = ""VALUE""",False,What are the names and hours spent practicing of every student who received a yes at tryouts?,1285,"SELECT T1.pName ,  T1.HS FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T2.decision  =  'yes'",soccer_2,"['tryout', 'player']"
"SELECT Tryout.cName FROM Tryout WHERE Tryout.pPos = ""striker""",False,Find the names of the students who are in the position of striker and got a yes tryout decision.,1288,SELECT T1.pName FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T2.decision  =  'yes' AND T2.pPos  =  'striker',soccer_2,"['tryout', 'player']"
"SELECT Tryout.cName FROM Tryout WHERE Tryout.pPos = ""striker""",False,What are the names of all students who successfully tried out for the position of striker?,1289,SELECT T1.pName FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T2.decision  =  'yes' AND T2.pPos  =  'striker',soccer_2,"['tryout', 'player']"
"SELECT AVG(Tryout.decision) FROM Tryout WHERE Tryout.decision = ""no""",False,Find the average hours for the students whose tryout decision is no.,1290,SELECT avg(T1.HS) FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T2.decision  =  'no',soccer_2,"['tryout', 'player']"
SELECT AVG(Player.HS) FROM Player WHERE Player.pID IN (SELECT Tryout.decision FROM Tryout),False,What is the average number of hours spent practicing for students who got rejected?,1291,SELECT avg(T1.HS) FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T2.decision  =  'no',soccer_2,"['tryout', 'player']"
"SELECT Tryout.cName FROM Tryout WHERE Tryout.pPos = ""goalie""",False,Which college has any student who is a goalie and succeeded in the tryout.,1292,SELECT cName FROM  tryout WHERE decision  =  'yes' AND pPos  =  'goalie',soccer_2,['tryout']
"SELECT Tryout.cName FROM College JOIN Tryout ON College.cName = Tryout.cName WHERE Tryout.pPos = ""goalie""",False,What college has a student who successfully made the team in the role of a goalie?,1293,SELECT cName FROM  tryout WHERE decision  =  'yes' AND pPos  =  'goalie',soccer_2,"['tryout', 'college']"
"SELECT College.state, College.enr FROM College JOIN Tryout ON College.cName = Tryout.cName WHERE Tryout.decision = ""tryout""",False,What is the state and enrollment of the colleges where have any students who got accepted in the tryout decision.,1294,"SELECT DISTINCT T1.state ,  T1.enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.decision  =  'yes'",soccer_2,"['tryout', 'college']"
SELECT COUNT(*) FROM Tryout JOIN College ON Tryout.cName = College.cName WHERE College.enr = College.enr + College.state,False,"How many students are enrolled in colleges that have student accepted during tryouts, and in which states are those colleges?",1295,"SELECT DISTINCT T1.state ,  T1.enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.decision  =  'yes'",soccer_2,"['tryout', 'college']"
"SELECT shop.Open_Date FROM shop WHERE shop.Shop_Name = ""Apple""",False,"List the open date of open year of the shop named ""Apple"".",1298,"SELECT Open_Date ,  Open_Year FROM shop WHERE Shop_Name  =  ""Apple""",device,['shop']
"SELECT MAX(Problem_Log.problem_id), MAX(Problem_Log.problem_log_id) FROM Problem_Log",False,What is the oldest log id and its corresponding problem id?,1314,"SELECT problem_log_id ,  problem_id FROM problem_log ORDER BY log_entry_date LIMIT 1",tracking_software_problems,['problem_log']
"SELECT MAX(Problem_Log.problem_id), Problem_Log.problem_log_id FROM Problem_Log",False,Find the oldest log id and its corresponding problem id.,1315,"SELECT problem_log_id ,  problem_id FROM problem_log ORDER BY log_entry_date LIMIT 1",tracking_software_problems,['problem_log']
"SELECT Problem_Log.problem_id, Problems.date_problem_reported FROM Problems JOIN Problem_Log ON Problems.problem_id = Problem_Log.problem_id WHERE Problem_Log.problem_log_id = 10",False,"For the problem with id 10, return the ids and dates of its problem logs.",1317,"SELECT problem_log_id ,  log_entry_date FROM problem_log WHERE problem_id = 10",tracking_software_problems,"['problems', 'problem_log']"
"SELECT Problems.problem_description FROM Staff JOIN Problem_Log ON Staff.staff_id = Problem_Log.assigned_to_staff_id JOIN Problems ON Problem_Log.problem_id = Problems.problem_id WHERE Staff.staff_first_name = ""Christop""",False,Give me a list of descriptions of the problems that are reported by the staff whose first name is Christop.,1324,"SELECT T1.problem_description FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_first_name = ""Christop""",tracking_software_problems,"['staff', 'problems', 'problem_log']"
"SELECT Problems.problem_description FROM Staff JOIN Problem_Log ON Staff.staff_id = Problem_Log.assigned_to_staff_id JOIN Problems ON Problem_Log.problem_id = Problems.problem_id WHERE Staff.staff_first_name = ""Christop""",False,"Which problems are reported by the staff with first name ""Christop""? Show the descriptions of the problems.",1325,"SELECT T1.problem_description FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_first_name = ""Christop""",tracking_software_problems,"['staff', 'problems', 'problem_log']"
"SELECT Problem_Log.problem_id FROM Staff JOIN Problem_Log ON Staff.staff_id = Problem_Log.assigned_to_staff_id WHERE Staff.staff_last_name = ""Bosco""",False,Find the ids of the problems that are reported by the staff whose last name is Bosco.,1326,"SELECT T1.problem_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_last_name = ""Bosco""",tracking_software_problems,"['staff', 'problems', 'problem_log']"
"SELECT Problem_Log.problem_id FROM Staff JOIN Problem_Log ON Staff.staff_id = Problem_Log.assigned_to_staff_id WHERE Staff.staff_last_name = ""Bosco""",False,"Which problems are reported by the staff with last name ""Bosco""? Show the ids of the problems.",1327,"SELECT T1.problem_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_last_name = ""Bosco""",tracking_software_problems,"['staff', 'problems', 'problem_log']"
SELECT branch.Name FROM branch JOIN membership_register_branch ON branch.Branch_ID = membership_register_branch.Branch_ID ORDER BY branch.membership_amount DESC LIMIT 3,False,What are names for top three branches with most number of membership?,1334,SELECT name FROM branch ORDER BY membership_amount DESC LIMIT 3,shop_membership,"['branch', 'membership_register_branch']"
SELECT branch.Name FROM branch JOIN membership_register_branch ON branch.Branch_ID = membership_register_branch.Branch_ID ORDER BY branch.membership_amount DESC LIMIT 3,False,What are the names for the 3 branches that have the most memberships?,1335,SELECT name FROM branch ORDER BY membership_amount DESC LIMIT 3,shop_membership,"['branch', 'membership_register_branch']"
SELECT SUM(purchase.Total_pounds) FROM purchase JOIN member ON purchase.Member_ID = member.Member_ID WHERE member.Level = 6,False,What is the total number of purchases for members with level 6?,1346,SELECT count(*) FROM purchase AS T1 JOIN member AS T2 ON T1.member_id  =  T2.member_id WHERE T2.level  =  6,shop_membership,"['member', 'purchase']"
SELECT SUM(purchase.Total_pounds) FROM purchase JOIN member ON purchase.Member_ID = member.Member_ID WHERE member.Level = 6,False,What are the total purchases for members rated at level 6?,1347,SELECT count(*) FROM purchase AS T1 JOIN member AS T2 ON T1.member_id  =  T2.member_id WHERE T2.level  =  6,shop_membership,"['member', 'purchase']"
"SELECT member.Card_Number FROM member WHERE member.Hometown LIKE ""% Kentucky %""",False,"list the card number of all members whose hometown address includes word ""Kentucky"".",1348,"SELECT card_number FROM member WHERE Hometown LIKE ""%Kentucky%""",shop_membership,['member']
"SELECT member.Card_Number FROM member WHERE member.Hometown = ""Kentucky""",False,What are the card numbers of members from Kentucky?,1349,"SELECT card_number FROM member WHERE Hometown LIKE ""%Kentucky%""",shop_membership,['member']
"SELECT Customers.customer_name, Customer_Address_History.date_from, Customer_Address_History.date_to FROM Customers JOIN Customer_Address_History ON Customers.customer_id = Customer_Address_History.customer_id JOIN Addresses ON Customer_Address_History.address_id = Addresses.address_id",False,"Show the customer name, customer address city, date from, and date to for each customer address history.",1354,"SELECT T2.customer_name ,  T3.city ,  T1.date_from ,  T1.date_to FROM customer_address_history AS T1 JOIN customers AS T2 ON T1.customer_id  =  T2.customer_id JOIN addresses AS T3 ON T1.address_id  =  T3.address_id",customers_and_products_contacts,"['addresses', 'customer_address_history', 'customers']"
"SELECT COUNT(*) FROM Student WHERE Student.Sex = ""F"" AND Student.Age < 25 GROUP BY ""How""",False,How many female students (sex is F) whose age is below 25?,1355,SELECT count(*) FROM student WHERE sex  =  'F' AND age  <  25,dorm_1,['student']
"SELECT COUNT(*) FROM Student WHERE Student.Age < 25 AND Student.Sex = ""VALUE""",False,How many girl students who are younger than 25?,1356,SELECT count(*) FROM student WHERE sex  =  'F' AND age  <  25,dorm_1,['student']
SELECT Student.Fname FROM Student WHERE Student.Age BETWEEN 20 AND 25,False,Find the first name of students living in city PHL whose age is between 20 and 25.,1357,SELECT fname FROM student WHERE city_code  =  'PHL' AND age BETWEEN 20 AND 25,dorm_1,['student']
"SELECT Student.Fname FROM Student WHERE Student.Age BETWEEN 20 AND Student.city_code = ""PHL""",False,What is the first name of the students who are in age 20 to 25 and living in PHL city?,1358,SELECT fname FROM student WHERE city_code  =  'PHL' AND age BETWEEN 20 AND 25,dorm_1,['student']
"SELECT AVG(Dorm.student_capacity), SUM(Dorm.student_capacity) FROM Dorm JOIN Student ON Dorm.dormid = Student.StuID WHERE Student.Sex = ""X""",False,Find the average and total capacity of dorms for the students with gender X.,1361,"SELECT avg(student_capacity) ,  sum(student_capacity) FROM dorm WHERE gender  =  'X'",dorm_1,"['student', 'dorm']"
"SELECT Dorm.student_capacity, Dorm.gender FROM Dorm JOIN Student ON Student.StuID = Dorm.dormid WHERE Dorm.dorm_name LIKE ""% Donor %""",False,What is the student capacity and type of gender for the dorm whose name as the phrase Donor in it?,1364,"SELECT student_capacity ,  gender FROM dorm WHERE dorm_name LIKE '%Donor%'",dorm_1,"['student', 'dorm']"
"SELECT COUNT(DISTINCT Student.Major), Student.city_code FROM Student GROUP BY Student.Major, Student.city_code",False,Find the numbers of different majors and cities.,1365,"SELECT count(DISTINCT major) ,  count(DISTINCT city_code) FROM student",dorm_1,['student']
"SELECT COUNT(DISTINCT Student.Major), COUNT(DISTINCT Student.city_code), Student.city_code FROM Student GROUP BY Student.city_code",False,How many different majors are there and how many different city codes are there for each student?,1366,"SELECT count(DISTINCT major) ,  count(DISTINCT city_code) FROM student",dorm_1,['student']
"SELECT COUNT(*), Dorm.gender FROM Dorm GROUP BY Dorm.gender",False,Find the number of dorms and total capacity for each gender.,1371,"SELECT count(*) ,  sum(student_capacity) ,  gender FROM dorm GROUP BY gender",dorm_1,['dorm']
"SELECT SUM(Dorm.student_capacity), Dorm.gender FROM Dorm GROUP BY Dorm.gender",False,How many dorms are there and what is the total capacity for each gender?,1372,"SELECT count(*) ,  sum(student_capacity) ,  gender FROM dorm GROUP BY gender",dorm_1,['dorm']
"SELECT Student.city_code, AVG(Student.Age) FROM Student GROUP BY Student.city_code",False,Find the number and average age of students living in each city.,1377,"SELECT count(*) ,  avg(age) ,  city_code FROM student GROUP BY city_code",dorm_1,['student']
"SELECT Student.city_code, AVG(Student.Age) FROM Student GROUP BY Student.city_code",False,How many students live in each city and what are their average ages?,1378,"SELECT count(*) ,  avg(age) ,  city_code FROM student GROUP BY city_code",dorm_1,['student']
SELECT Student.city_code FROM Student GROUP BY Student.city_code HAVING COUNT(*) > 1,False,Find the number of students for the cities where have more than one student.,1379,"SELECT count(*) ,  city_code FROM student GROUP BY city_code HAVING count(*)  >  1",dorm_1,['student']
"SELECT Products.product_name, COUNT(*) FROM Complaints JOIN Products ON Complaints.product_id = Products.product_id GROUP BY Complaints.product_id",False,"What are all the different product names, and how many complains has each received?",1384,"SELECT t1.product_name ,  count(*) FROM products AS t1 JOIN complaints AS t2 ON t1.product_id  =  t2.product_id GROUP BY t1.product_name",customer_complaints,"['complaints', 'products']"
"SELECT Staff.last_name FROM Staff WHERE Staff.email_address LIKE ""% wrau %""",False,"Find the last name of the staff whose email address contains ""wrau"".",1389,"SELECT last_name FROM staff WHERE email_address LIKE ""%wrau%""",customer_complaints,['staff']
"SELECT Staff.last_name FROM Staff WHERE Staff.email_address LIKE ""% wrau %""",False,"What are the last names of staff with email addressed containing the substring ""wrau""?",1390,"SELECT last_name FROM staff WHERE email_address LIKE ""%wrau%""",customer_complaints,['staff']
"SELECT Customers.address_line_1, Customers.address_line_2 FROM Customers WHERE Customers.email_address = ""vbogisich @ example.org""",False,"Find the address line 1 and 2 of the customer with email ""vbogisich@example.org"".",1391,"SELECT address_line_1 ,  address_line_2 FROM customers WHERE email_address  =  ""vbogisich@example.org""",customer_complaints,['customers']
"SELECT Customers.address_line_1, Customers.address_line_2 FROM Customers WHERE Customers.email_address = ""vbogisich @ example.org""",False,"What are lines 1 and 2 of the addressed of the customer with the email ""vbogisich@example.org""?",1392,"SELECT address_line_1 ,  address_line_2 FROM customers WHERE email_address  =  ""vbogisich@example.org""",customer_complaints,['customers']
"SELECT Complaints.complaint_status_code, COUNT(*) FROM Complaints WHERE Complaints.complaint_type_code = ""Failure"" GROUP BY Complaints.complaint_status_code",False,Find the number of complaints with Product Failure type for each complaint status.,1393,"SELECT complaint_status_code ,  count(*) FROM complaints WHERE complaint_type_code  =  ""Product Failure"" GROUP BY complaint_status_code",customer_complaints,['complaints']
SELECT Student.LName FROM Student,False,Show last names for all student who are on scholarship.,1401,SELECT T2.Lname FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID WHERE T1.onscholarship  =  'Y',game_1,"['student', 'sportsinfo']"
SELECT Student.LName FROM Student,False,What are the last names for all scholarship students?,1402,SELECT T2.Lname FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID WHERE T1.onscholarship  =  'Y',game_1,"['student', 'sportsinfo']"
"SELECT COUNT(*) FROM SportsInfo WHERE SportsInfo.SportName = ""football""",False,How many games are played for all football games by students on scholarship?,1403,"SELECT sum(gamesplayed) FROM Sportsinfo WHERE sportname  =  ""Football"" AND onscholarship  =  'Y'",game_1,['sportsinfo']
SELECT COUNT(*) FROM SportsInfo,False,What is the total number of all football games played by scholarship students?,1404,"SELECT sum(gamesplayed) FROM Sportsinfo WHERE sportname  =  ""Football"" AND onscholarship  =  'Y'",game_1,['sportsinfo']
"SELECT Plays_Games.StuID, COUNT(*) FROM Plays_Games GROUP BY Plays_Games.StuID",False,Show all student IDs with the number of sports and total number of games played,1407,"SELECT StuID ,  count(*) ,  sum(gamesplayed) FROM Sportsinfo GROUP BY StuID",game_1,"['plays_games', 'sportsinfo']"
"SELECT COUNT(*), Student.StuID FROM Student JOIN Plays_Games ON Student.StuID = Plays_Games.StuID GROUP BY Student.StuID",False,What are the ids of all students along with how many sports and games did they play?,1408,"SELECT StuID ,  count(*) ,  sum(gamesplayed) FROM Sportsinfo GROUP BY StuID",game_1,"['student', 'sportsinfo', 'plays_games']"
"SELECT Plays_Games.StuID, Plays_Games.Hours_Played FROM Plays_Games",False,What are the ids of all students and number of hours played?,1412,"SELECT Stuid ,  sum(hours_played) FROM Plays_games GROUP BY Stuid",game_1,['plays_games']
SELECT SportsInfo.GamesPlayed FROM SportsInfo WHERE SportsInfo.HoursPerWeek >= 1000,False,Show all game names played by at least 1000 hours.,1413,SELECT gname FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid  =  T2.gameid GROUP BY T1.gameid HAVING sum(hours_played)  >=  1000,game_1,"['plays_games', 'sportsinfo', 'video_games']"
SELECT roller_coaster.Status FROM roller_coaster WHERE roller_coaster.Length > 3300 OR roller_coaster.Length > 100,False,Show the statuses of roller coasters longer than 3300 or higher than 100.,1416,SELECT Status FROM roller_coaster WHERE LENGTH  >  3300 OR Height  >  100,roller_coaster,['roller_coaster']
"SELECT Parties.payment_method_code, Parties.party_phone FROM Parties WHERE Parties.party_email = ""enrico09 @ example.com""",False,"Find the payment method and phone of the party with email ""enrico09@example.com"".",1425,"SELECT payment_method_code ,  party_phone FROM parties WHERE party_email  =  ""enrico09@example.com""",e_government,['parties']
"SELECT Parties.payment_method_code, Parties.party_phone FROM Parties WHERE Parties.party_email = ""enrico09 @ example.com""",False,What is the payment method code and party phone of the party with the email 'enrico09@example.com'?,1426,"SELECT payment_method_code ,  party_phone FROM parties WHERE party_email  =  ""enrico09@example.com""",e_government,['parties']
SELECT Organizations.organization_name FROM Organizations ORDER BY Organizations.date_formed ASC LIMIT 1,False,Find the name of the youngest organization.,1427,SELECT organization_name FROM organizations ORDER BY date_formed DESC LIMIT 1,e_government,['organizations']
"SELECT Organizations.organization_name FROM Organizations WHERE Organizations.organization_name LIKE ""% Party %""",False,"Find the name of organizations whose names contain ""Party"".",1429,"SELECT organization_name FROM organizations WHERE organization_name LIKE ""%Party%""",e_government,['organizations']
"SELECT Organizations.organization_name FROM Organizations WHERE Organizations.organization_name LIKE ""% Party %""",False,"What are the names of organizations that contain the word ""Party""?",1430,"SELECT organization_name FROM organizations WHERE organization_name LIKE ""%Party%""",e_government,['organizations']
"SELECT Addresses.state_province_county FROM Addresses WHERE Addresses.address_id = ""6862 Kaitlyn Knolls""",False,"Which state can address ""6862 Kaitlyn Knolls"" possibly be in?",1431,"SELECT state_province_county FROM addresses WHERE line_1_number_building LIKE ""%6862 Kaitlyn Knolls%""",e_government,['addresses']
"SELECT Addresses.state_province_county FROM Addresses WHERE Addresses.line_1_number_building = ""6862 Kaitlyn Knolls""",False,"Give the state corresponding to the line number building ""6862 Kaitlyn Knolls"".",1432,"SELECT state_province_county FROM addresses WHERE line_1_number_building LIKE ""%6862 Kaitlyn Knolls%""",e_government,['addresses']
"SELECT driver.Party FROM driver WHERE driver.Home_city = ""Hartford"" INTERSECT SELECT driver.Party FROM driver WHERE driver.Age > 40",False,Show the party with drivers from Hartford and drivers older than 40.,1435,SELECT party FROM driver WHERE home_city  =  'Hartford' AND age  >  40,school_bus,['driver']
"SELECT school.School, driver.Name FROM school JOIN school_bus ON school.School_ID = school_bus.Driver_ID JOIN driver ON school_bus.Driver_ID = driver.Driver_ID",False,Show the school name and driver name for all school buses.,1437,"SELECT T2.school ,  T3.name FROM school_bus AS T1 JOIN school AS T2 ON T1.school_id  =  T2.school_id JOIN driver AS T3 ON T1.driver_id  =  T3.driver_id",school_bus,"['school', 'school_bus', 'driver']"
"SELECT school.Type, COUNT(*) FROM school GROUP BY school.Type",False,Show the type of school and the number of buses for each type.,1439,"SELECT T2.type ,  count(*) FROM school_bus AS T1 JOIN school AS T2 ON T1.school_id  =  T2.school_id GROUP BY T2.type",school_bus,"['school', 'school_bus']"
"SELECT Documents.Document_ID, COUNT(*) FROM Documents WHERE Documents.Document_Type_Code = ""BK"" GROUP BY Documents.Document_ID",False,How many documents are with document type code BK for each product id?,1454,"SELECT count(*) ,  project_id FROM Documents WHERE document_type_code  =  ""BK"" GROUP BY project_id",cre_Docs_and_Epenses,['documents']
"SELECT Documents.Document_ID, COUNT(*) FROM Documents WHERE Documents.Document_Type_Code = ""BK"" GROUP BY Documents.Document_ID",False,Count the number of documents with the type code BK that correspond to each product id.,1455,"SELECT count(*) ,  project_id FROM Documents WHERE document_type_code  =  ""BK"" GROUP BY project_id",cre_Docs_and_Epenses,['documents']
"SELECT Statements.Statement_Details, Documents.Document_Name FROM Statements JOIN Documents ON Documents.Project_ID = Statements.Statement_ID WHERE Statements.Statement_Details = ""Private Project""",False,"What are the details for statements with the details 'Private Project', and what are the names of the corresponding documents?",1463,"SELECT T1.statement_details ,  T2.document_name FROM Statements AS T1 JOIN Documents AS T2 ON T1.statement_id  =  T2.document_id WHERE T1.statement_details  =  'Private Project'",cre_Docs_and_Epenses,"['documents', 'statements']"
"SELECT Ref_Document_Types.Document_Type_Name, Ref_Document_Types.Document_Type_Description FROM Documents JOIN Ref_Document_Types ON Documents.Document_Type_Code = Ref_Document_Types.Document_Type_Code",False,What is the document type name and the document type description and creation date for all the documents?,1466,"SELECT T1.document_type_name ,  T1.document_type_description ,  T2.Document_date FROM Ref_document_types AS T1 JOIN Documents AS T2 ON T1.document_type_code  =  T2.document_type_code",cre_Docs_and_Epenses,"['ref_document_types', 'documents']"
"SELECT Documents.Document_ID FROM Ref_Budget_Codes JOIN Documents ON Ref_Budget_Codes.Budget_Type_Code = Documents.Document_Type_Code WHERE Ref_Budget_Codes.Budget_Type_Description = ""Government""",False,Show ids for all documents with budget types described as 'Government'.,1478,"SELECT T1.document_id FROM Documents_with_expenses AS T1 JOIN Ref_Budget_Codes AS T2 ON T1.Budget_Type_code  =  T2.Budget_Type_code WHERE T2.budget_type_Description  =  ""Government""",cre_Docs_and_Epenses,"['documents', 'ref_budget_codes', 'documents_with_expenses']"
"SELECT Documents_with_Expenses.Document_ID FROM Documents_with_Expenses JOIN Ref_Budget_Codes ON Documents_with_Expenses.Budget_Type_Code = Ref_Budget_Codes.Budget_Type_Code WHERE Documents_with_Expenses.Document_Details = ""Government""",False,Give the ids for documents that have the budget description 'Government'.,1479,"SELECT T1.document_id FROM Documents_with_expenses AS T1 JOIN Ref_Budget_Codes AS T2 ON T1.Budget_Type_code  =  T2.Budget_Type_code WHERE T2.budget_type_Description  =  ""Government""",cre_Docs_and_Epenses,"['documents_with_expenses', 'ref_budget_codes']"
"SELECT station.Name, station.Location, station.Number_of_Platforms FROM station JOIN train_station ON station.Station_ID = train_station.Station_ID",False,"Show the name, location, and number of platforms for all stations.",1482,"SELECT name ,  LOCATION ,  number_of_platforms FROM station",train_station,"['train_station', 'station']"
"SELECT station.Name, SUM(station.Total_Passengers) FROM station JOIN train_station ON station.Station_ID = train_station.Station_ID WHERE station.Location != ""London""",False,Show the names and total passengers for all train stations not in London.,1483,"SELECT name ,  total_passengers FROM station WHERE LOCATION != 'London'",train_station,"['train_station', 'station']"
"SELECT station.Name, station.Main_Services FROM station JOIN train_station ON train_station.Station_ID = station.Station_ID ORDER BY station.Total_Passengers DESC LIMIT 3",False,Show the names and main services for train stations that have the top three total number of passengers.,1484,"SELECT name ,  main_services FROM station ORDER BY total_passengers DESC LIMIT 3",train_station,"['train_station', 'station']"
"SELECT station.Location, SUM(station.Total_Passengers) FROM station JOIN train_station ON station.Station_ID = train_station.Station_ID GROUP BY station.Location",False,Show all locations and the total number of platforms and passengers for all train stations in each location.,1485,"SELECT LOCATION ,  sum(number_of_platforms) ,  sum(total_passengers) FROM station GROUP BY LOCATION",train_station,"['train_station', 'station']"
SELECT station.Location FROM station JOIN train_station ON station.Station_ID = train_station.Station_ID WHERE station.Total_Passengers > 25 AND station.Total_Passengers > 15,False,Show all locations that have train stations with at least 15 platforms and train stations with more than 25 total passengers.,1486,SELECT DISTINCT LOCATION FROM station WHERE number_of_platforms  >=  15 AND total_passengers  >  25,train_station,"['train_station', 'station']"
"SELECT train.Name, station.Name FROM train_station JOIN station ON train_station.Train_ID = station.Station_ID JOIN train ON train_station.Station_ID = train.Train_ID",False,show the train name and station name for each train.,1490,"SELECT T2.name ,  T3.name FROM train_station AS T1 JOIN station AS T2 ON T1.station_id  =  T2.station_id JOIN train AS T3 ON T3.train_id  =  T1.train_id",train_station,"['train', 'train_station', 'station']"
"SELECT Staff.first_name, Staff.middle_name FROM Staff",False,List the first name middle name and last name of all staff.,1493,"SELECT first_name ,  middle_name ,  last_name FROM Staff;",driving_school,['staff']
"SELECT Addresses.city FROM Addresses JOIN Customers ON Addresses.address_id = Customers.customer_address_id JOIN Staff ON Customers.customer_address_id = Staff.staff_id WHERE Staff.first_name = ""Janessa"" AND Staff.last_name = ""Sawayn""",False,In what city does Janessa Sawayn live?,1504,"SELECT T1.city FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id WHERE T2.first_name = ""Janessa"" AND T2.last_name = ""Sawayn"";",driving_school,"['addresses', 'staff', 'customers']"
SELECT Addresses.state_province_county FROM Addresses JOIN Staff ON Addresses.address_id = Staff.staff_address_id GROUP BY Addresses.address_id HAVING COUNT(*) BETWEEN 2 AND 4,False,List the states which have between 2 to 4 staffs living there.,1511,SELECT T1.state_province_county FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id GROUP BY T1.state_province_county HAVING count(*) BETWEEN 2 AND 4;,driving_school,"['addresses', 'staff']"
SELECT Addresses.state_province_county FROM Addresses GROUP BY Addresses.state_province_county HAVING COUNT(*) >= 2,False,What are the names of the states that have 2 to 4 employees living there?,1512,SELECT T1.state_province_county FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id GROUP BY T1.state_province_county HAVING count(*) BETWEEN 2 AND 4;,driving_school,"['addresses', 'staff']"
"SELECT Customers.cell_mobile_phone_number, Customers.email_address FROM Customers WHERE Customers.amount_outstanding > 2000",False,List phone number and email address of customer with more than 2000 outstanding balance.,1517,"SELECT phone_number ,  email_address FROM Customers WHERE amount_outstanding  >  2000;",driving_school,['customers']
"SELECT Customers.cell_mobile_phone_number, Customers.email_address FROM Customers WHERE Customers.amount_outstanding > 2000",False,What are the phone numbers and email addresses of all customers who have an outstanding balance of more than 2000?,1518,"SELECT phone_number ,  email_address FROM Customers WHERE amount_outstanding  >  2000;",driving_school,['customers']
"SELECT COUNT(*) FROM Customers JOIN Lessons ON Customers.customer_id = Lessons.customer_id WHERE Customers.first_name = ""Rylan"" AND Customers.last_name = ""Goodwin""",False,How many lessons taken by customer with first name as Rylan and last name as Goodwin were completed?,1523,"SELECT count(*) FROM Lessons AS T1 JOIN Customers AS T2 ON T1.customer_id  = T2.customer_id WHERE T2.first_name = ""Rylan"" AND T2.last_name = ""Goodwin"" AND T1.lesson_status_code = ""Completed"";",driving_school,"['customers', 'lessons']"
"SELECT COUNT(*) FROM Customers JOIN Lessons ON Customers.customer_id = Lessons.customer_id WHERE Customers.first_name = ""Ryan"" AND Customers.last_name = ""Goodwin""",False,How many lessons did the customer Ryan Goodwin complete?,1524,"SELECT count(*) FROM Lessons AS T1 JOIN Customers AS T2 ON T1.customer_id  = T2.customer_id WHERE T2.first_name = ""Rylan"" AND T2.last_name = ""Goodwin"" AND T1.lesson_status_code = ""Completed"";",driving_school,"['customers', 'lessons']"
"SELECT MAX(Customer_Payments.amount_payment), MIN(Customer_Payments.amount_payment), AVG(Customer_Payments.amount_payment) FROM Customer_Payments",False,"What is the maximum, minimum, and average amount of money outsanding for all customers?",1526,"SELECT max(amount_outstanding) ,  min(amount_outstanding) ,  avg(amount_outstanding) FROM Customers;",driving_school,"['customers', 'customer_payments']"
"SELECT SUM(Lessons.lesson_time) FROM Lessons JOIN Staff ON Lessons.customer_id = Staff.staff_id WHERE Staff.first_name = ""Janessa"" AND Staff.last_name = ""Sawayn""",False,What is the total time for all lessons taught by Janessa Sawayn?,1542,"SELECT sum(lesson_time) FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = ""Janessa"" AND T2.last_name = ""Sawayn"";",driving_school,"['staff', 'lessons']"
"SELECT airports.name, airports.country, airports.elevation FROM airports WHERE airports.city = ""New York""",False,"Find the name, city, country, and altitude (or elevation) of the airports in the city of New York.",1547,"SELECT name ,  city ,  country ,  elevation FROM airports WHERE city  =  'New York'",flight_4,['airports']
"SELECT airports.name, airports.country, airports.elevation FROM airports WHERE airports.city = ""New York""",False,"What is the name, city, country, and elevation for every airport in the city of New York?",1548,"SELECT name ,  city ,  country ,  elevation FROM airports WHERE city  =  'New York'",flight_4,['airports']
"SELECT airlines.country FROM airlines WHERE airlines.callsign LIKE ""Orbit""",False,Find the country of the airlines whose name starts with 'Orbit'.,1551,SELECT country FROM airlines WHERE name LIKE 'Orbit%',flight_4,['airlines']
"SELECT airlines.country FROM airlines WHERE airlines.name LIKE ""% Orbit %""",False,What are the countries of all airlines whose names start with Orbit?,1552,SELECT country FROM airlines WHERE name LIKE 'Orbit%',flight_4,['airlines']
"SELECT COUNT(*) FROM airports WHERE airports.name LIKE ""% International %""",False,Find the number of airports whose name contain the word 'International'.,1555,SELECT count(*) FROM airports WHERE name LIKE '%International%',flight_4,['airports']
"SELECT COUNT(*) FROM airports WHERE airports.name LIKE ""% Inter %""",False,How many airports' names have the word Interanation in them?,1556,SELECT count(*) FROM airports WHERE name LIKE '%International%',flight_4,['airports']
"SELECT COUNT(*) FROM airlines WHERE airlines.name = ""American Airlines""",False,Find the number of routes operated by American Airlines.,1557,SELECT count(*) FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid WHERE T1.name  =  'American Airlines',flight_4,"['airlines', 'routes']"
"SELECT COUNT(*) FROM airlines WHERE airlines.name = ""American Airlines""",False,How many routes does American Airlines operate?,1558,SELECT count(*) FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid WHERE T1.name  =  'American Airlines',flight_4,"['airlines', 'routes']"
"SELECT COUNT(*) FROM routes JOIN airports ON routes.src_apid = airports.apid WHERE airports.country = ""Canadian""",False,How many routes end in a Canadian airport?,1560,SELECT count(*) FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.dst_apid WHERE country  =  'Canada',flight_4,"['routes', 'airports']"
"SELECT COUNT(DISTINCT routes.dst_ap) FROM routes JOIN airlines ON airlines.alid = routes.alid WHERE airlines.name = ""American Airlines""",False,Find the number of different airports which are the destinations of the American Airlines.,1565,SELECT count(DISTINCT dst_apid) FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid WHERE T1.name  =  'American Airlines',flight_4,"['airlines', 'routes']"
"SELECT COUNT(DISTINCT routes.dst_ap) FROM routes JOIN airlines ON airlines.alid = routes.alid WHERE airlines.name = ""American Airlines""",False,What is the number of different different airports that are destinations for American Airlines?,1566,SELECT count(DISTINCT dst_apid) FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid WHERE T1.name  =  'American Airlines',flight_4,"['airlines', 'routes']"
"SELECT COUNT(*) FROM airports WHERE airports.country = ""United States"" AND airports.country > 3",False,What is the number of cities in the United States with more than 3 airports?,1568,SELECT city FROM airports WHERE country  =  'United States' GROUP BY city HAVING count(*)  >  3,flight_4,['airports']
SELECT airports.city FROM airports GROUP BY airports.city HAVING COUNT(*) > 2 ORDER BY COUNT(*) DESC,False,List the cities which have more than 2 airports sorted by the number of airports.,1571,SELECT city FROM airports GROUP BY city HAVING count(*)  >  2 ORDER BY count(*),flight_4,['airports']
SELECT airports.city FROM airports GROUP BY airports.city HAVING COUNT(*) > 2 ORDER BY COUNT(*) DESC,False,What are the cities that have more than 2 airports sorted by number of airports?,1572,SELECT city FROM airports GROUP BY city HAVING count(*)  >  2 ORDER BY count(*),flight_4,['airports']
"SELECT routes.src_ap, COUNT(*) FROM routes JOIN airports ON routes.src_apid = airports.apid GROUP BY routes.src_ap",False,Find the number of routes for each source airport and the airport name.,1573,"SELECT count(*) ,  T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.src_apid GROUP BY T1.name",flight_4,"['routes', 'airports']"
"SELECT airports.name, COUNT(*) FROM routes JOIN airports ON routes.src_apid = airports.apid GROUP BY airports.apid",False,"For each airport name, how many routes start at that airport?",1574,"SELECT count(*) ,  T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.src_apid GROUP BY T1.name",flight_4,"['routes', 'airports']"
"SELECT COUNT(*) FROM routes JOIN airports ON routes.dst_apid = airports.apid WHERE airports.country = ""Italian""",False,What is the number of routes whose destinations are Italian airports?,1578,SELECT count(*) FROM routes AS T1 JOIN airports AS T2 ON T1.dst_apid  =  T2.apid WHERE T2.country  =  'Italy',flight_4,"['routes', 'airports']"
"SELECT Orders.order_id, Orders.customer_id FROM Orders ORDER BY Orders.date_order_placed DESC LIMIT 1",False,what are the order id and customer id of the oldest order?,1583,"SELECT order_id ,  customer_id FROM orders ORDER BY date_order_placed LIMIT 1",tracking_orders,['orders']
"SELECT Orders.order_id, Orders.customer_id FROM Orders ORDER BY Orders.date_order_placed DESC LIMIT 1",False,Find the order id and customer id associated with the oldest order.,1584,"SELECT order_id ,  customer_id FROM orders ORDER BY date_order_placed LIMIT 1",tracking_orders,['orders']
"SELECT Customers.customer_name FROM Customers JOIN Orders ON Customers.customer_id = Orders.customer_id WHERE Orders.order_status = ""Packing""",False,"Which customers have orders with status ""Packing""? Give me the customer names.",1586,"SELECT DISTINCT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = ""Packing""",tracking_orders,"['customers', 'orders']"
"SELECT DISTINCT Customers.customer_details FROM Customers JOIN Orders ON Customers.customer_id = Orders.customer_id WHERE Orders.order_status = ""on Road""",False,"Find the details of all the distinct customers who have orders with status ""On Road"".",1587,"SELECT DISTINCT T1.customer_details FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = ""On Road""",tracking_orders,"['customers', 'orders']"
"SELECT DISTINCT Customers.customer_details FROM Customers JOIN Orders ON Customers.customer_id = Orders.customer_id WHERE Orders.order_status = ""on Road""",False,"What are the distinct customers who have orders with status ""On Road""? Give me the customer details?",1588,"SELECT DISTINCT T1.customer_details FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = ""On Road""",tracking_orders,"['customers', 'orders']"
SELECT * FROM Customers,False,Give me the names of customers who have placed orders between 2009-01-01 and 2010-01-01.,1593,"SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.date_order_placed >= ""2009-01-01"" AND T2.date_order_placed <= ""2010-01-01""",tracking_orders,"['customers', 'orders']"
SELECT * FROM Customers,False,Which customers made orders between 2009-01-01 and 2010-01-01? Find their names.,1594,"SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.date_order_placed >= ""2009-01-01"" AND T2.date_order_placed <= ""2010-01-01""",tracking_orders,"['customers', 'orders']"
"SELECT DISTINCT Order_Items.product_id FROM Orders JOIN Order_Items ON Orders.order_id = Order_Items.order_id WHERE Orders.date_order_placed IS NULL AND Orders.date_order_placed = ""1975-01-01-01-01""",False,Give me a list of distinct product ids from orders placed between 1975-01-01 and 1976-01-01?,1595,"SELECT DISTINCT T2.product_id FROM orders AS T1 JOIN order_items AS T2 ON T1.order_id = T2.order_id WHERE T1.date_order_placed >= ""1975-01-01"" AND T1.date_order_placed <= ""1976-01-01""",tracking_orders,"['order_items', 'orders']"
SELECT * FROM Customers,False,What are the distinct ids of products ordered between 1975-01-01 and 1976-01-01??,1596,"SELECT DISTINCT T2.product_id FROM orders AS T1 JOIN order_items AS T2 ON T1.order_id = T2.order_id WHERE T1.date_order_placed >= ""1975-01-01"" AND T1.date_order_placed <= ""1976-01-01""",tracking_orders,"['order_items', 'customers', 'orders']"
SELECT Orders.date_order_placed FROM Orders JOIN Invoices ON Orders.order_id = Invoices.invoice_number WHERE Invoices.invoice_number = 10,False,What is the placement date of the order whose invoice number is 10?,1599,SELECT T1.date_order_placed FROM orders AS T1 JOIN shipments AS T2 ON T1.order_id = T2.order_id WHERE T2.invoice_number = 10,tracking_orders,"['shipments', 'invoices', 'orders']"
SELECT Orders.date_order_placed FROM Orders JOIN Invoices ON Orders.order_id = Invoices.invoice_number WHERE Invoices.invoice_number = 10,False,On what day was the order with invoice number 10 placed?,1600,SELECT T1.date_order_placed FROM orders AS T1 JOIN shipments AS T2 ON T1.order_id = T2.order_id WHERE T2.invoice_number = 10,tracking_orders,"['shipments', 'invoices', 'orders']"
SELECT Customers.customer_name FROM Customers JOIN Orders ON Customers.customer_id = Orders.customer_id GROUP BY Orders.customer_id HAVING COUNT(*) >= 2,False,What are the names of the customers who have made two or less orders?,1608,SELECT T2.customer_name FROM orders AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T2.customer_id HAVING count(*)  <=  2,tracking_orders,"['customers', 'orders']"
"SELECT AVG(singer.Age), MIN(singer.Age) FROM singer WHERE singer.Country = ""France""",False,"What is the average, minimum, and maximum age of all singers from France?",1611,"SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France'",concert_singer,['singer']
"SELECT AVG(singer.Age), MIN(singer.Age), MAX(singer.Age) FROM singer WHERE singer.Country = ""VALUE""",False,"What is the average, minimum, and maximum age for all French singers?",1612,"SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France'",concert_singer,['singer']
"SELECT MAX(stadium.Capacity), AVG(stadium.Average) FROM stadium",False,What is the maximum capacity and the average of all stadiums ?,1619,"select max(capacity), average from stadium",concert_singer,['stadium']
"SELECT AVG(stadium.Average), MAX(stadium.Capacity) FROM stadium",False,What is the average and maximum capacities for all stadiums ?,1620,"select avg(capacity) ,  max(capacity) from stadium",concert_singer,['stadium']
"SELECT concert.concert_Name, concert.Theme, COUNT(*) FROM concert JOIN singer_in_concert ON concert.concert_ID = singer_in_concert.concert_ID JOIN singer ON singer_in_concert.Singer_ID = singer.Singer_ID GROUP BY singer.Name",False,"What are the names , themes , and number of singers for every concert ?",1628,"select t2.concert_name ,  t2.theme ,  count(*) from singer_in_concert as t1 join concert as t2 on t1.concert_id  =  t2.concert_id group by t2.concert_id",concert_singer,"['concert', 'singer', 'singer_in_concert']"
"SELECT singer.Name, COUNT(*) FROM singer JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID GROUP BY singer.Name",False,List singer names and number of concerts for each singer.,1629,"SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id",concert_singer,"['singer_in_concert', 'singer']"
"SELECT singer.Name, COUNT(*) FROM singer JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID GROUP BY singer.Name",False,What are the names of the singers and number of concerts for each person?,1630,"SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id",concert_singer,"['singer_in_concert', 'singer']"
"SELECT singer.Name, singer.Country FROM singer JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID WHERE singer.Song_Name LIKE ""% Hey %""",False,what is the name and nation of the singer who have a song having 'Hey' in its name?,1631,"SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%'",concert_singer,"['singer_in_concert', 'singer']"
"SELECT singer.Name, singer.Country FROM singer WHERE singer.Song_Name LIKE ""% Hey %""",False,What is the name and country of origin of every singer who has a song with the word 'Hey' in its title?,1632,"SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%'",concert_singer,['singer']
"SELECT continents.Continent, countries.CountryName, COUNT(*) FROM continents JOIN countries ON continents.ContId = countries.Continent GROUP BY continents.Continent",False,"For each continent, list its id, name, and how many countries it has?",1634,"SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;",car_1,"['continents', 'countries']"
"SELECT car_makers.FullName, car_makers.Maker, COUNT(*) FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Maker",False,"How many models does each car maker produce? List maker full name, id and the number.",1635,"SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;",car_1,"['car_makers', 'model_list']"
"SELECT COUNT(*), car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Maker",False,How many car models are produced by each maker ? Only list the count and the maker full name .,1637,"select count(*) ,  t2.fullname from model_list as t1 join car_makers as t2 on t1.maker  =  t2.id group by t2.id;",car_1,"['car_makers', 'model_list']"
"SELECT car_makers.Id, car_makers.FullName, COUNT(*) FROM car_makers JOIN car_names ON car_makers.Id = car_names.MakeId GROUP BY car_makers.Id",False,What is the number of car models that are produced by each maker and what is the id and full name of each maker?,1638,"SELECT Count(*) ,  T2.FullName ,  T2.id FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id GROUP BY T2.id;",car_1,"['car_names', 'car_makers', 'model_list']"
"SELECT cars_data.Accelerate FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE car_names.Make = ""amc hornet sportabout (sw""",False,What is the accelerate of the car make amc hornet sportabout (sw)?,1639,SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';,car_1,"['car_names', 'cars_data']"
"SELECT cars_data.Accelerate FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Accelerate WHERE car_names.Make = ""amc hornet sportaboutout"" AND car_names.Make = ""sw""",False,How much does the car accelerate that makes amc hornet sportabout (sw)?,1640,SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';,car_1,"['car_names', 'cars_data']"
"SELECT COUNT(*) FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country WHERE countries.CountryName = ""France""",False,What is the number of makers of care in France?,1642,SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';,car_1,"['countries', 'car_makers']"
SELECT MIN(cars_data.Weight) FROM cars_data WHERE cars_data.Cylinders = 1974 AND cars_data.Year = 8,False,What is the smallest weight of the car produced with 8 cylinders on 1974 ?,1643,select min(weight) from cars_data where cylinders  =  8 and year  =  1974,car_1,['cars_data']
SELECT MIN(cars_data.Weight) FROM cars_data WHERE cars_data.Year = 1974 AND cars_data.Year = 8,False,What is the minimum weight of the car with 8 cylinders produced in 1974 ?,1644,select min(weight) from cars_data where cylinders  =  8 and year  =  1974,car_1,['cars_data']
"SELECT car_makers.Maker, model_list.Model FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker",False,What are all the makers and models?,1645,"SELECT Maker ,  Model FROM MODEL_LIST;",car_1,"['car_makers', 'model_list']"
"SELECT car_makers.Maker, model_list.Model FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker",False,What are the makers and models?,1646,"SELECT Maker ,  Model FROM MODEL_LIST;",car_1,"['car_makers', 'model_list']"
"SELECT countries.CountryName, countries.CountryId FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country",False,What are the countries having at least one car maker? List name and id.,1647,"SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;",car_1,"['countries', 'car_makers']"
"SELECT countries.CountryName, countries.CountryId FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country",False,What are the names and ids of all countries with at least one car maker?,1648,"SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;",car_1,"['countries', 'car_makers']"
"SELECT AVG(cars_data.Edispl) FROM model_list JOIN cars_data ON cars_data.Id = model_list.Maker WHERE model_list.Model = ""volvo""",False,What is the average edispl of the cars of model volvo?,1651,SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';,car_1,"['car_names', 'cars_data', 'model_list']"
SELECT AVG(cars_data.Edispl) FROM cars_data,False,What is the average edispl for all volvos?,1652,SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';,car_1,"['car_names', 'cars_data']"
"SELECT MAX(cars_data.Accelerate), cars_data.Cylinders FROM cars_data GROUP BY cars_data.Accelerate",False,What is the maximum accelerate for different number of cylinders?,1653,"SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;",car_1,['cars_data']
"SELECT car_makers.FullName, car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id HAVING COUNT(*) > 3",False,Which makers designed more than 3 car models? List full name and the id.,1657,"SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;",car_1,"['car_makers', 'model_list']"
"SELECT car_makers.Maker, car_makers.Id FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id HAVING COUNT(*) > 3",False,What are the names and ids of all makers with more than 3 models?,1658,"SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;",car_1,"['car_makers', 'model_list']"
SELECT COUNT(car_makers.Country) FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY car_makers.Country HAVING COUNT(*) > 2,False,How many countries has more than 2 car makers ?,1661,select count(*) from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  2,car_1,"['countries', 'car_makers']"
SELECT COUNT(car_makers.Country) FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY car_makers.Country HAVING COUNT(*) > 2,False,What is the number of countries with more than 2 car makers ?,1662,select count(*) from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  2,car_1,"['countries', 'car_makers']"
SELECT MAX(cars_data.Horsepower) FROM cars_data WHERE cars_data.Year < 1980 OR cars_data.Year < 1980,False,What is the maximum miles per gallon of the car with 8 cylinders or produced before 1980 ?,1663,select max(mpg) from cars_data where cylinders  =  8 or year  <  1980,car_1,['cars_data']
SELECT employee.City FROM employee WHERE employee.Age > 30 GROUP BY employee.City HAVING COUNT(*) > 1,False,Which cities do more than one employee under age 30 come from?,1667,SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1,employee_hire_evaluation,['employee']
SELECT employee.City FROM employee WHERE employee.Age > 30 GROUP BY employee.City HAVING COUNT(*) > 1,False,Find the cities that have more than one employee under age 30.,1668,SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1,employee_hire_evaluation,['employee']
"SELECT shop.Name, COUNT(*) FROM hiring JOIN shop ON hiring.Shop_ID = shop.Shop_ID GROUP BY hiring.Shop_ID",False,Find the number of employees hired in each shop; show the shop name as well.,1677,"SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name",employee_hire_evaluation,"['shop', 'hiring']"
"SELECT shop.Name, COUNT(*) FROM hiring JOIN shop ON hiring.Shop_ID = shop.Shop_ID GROUP BY hiring.Shop_ID",False,"For each shop, return the number of employees working there and the name of the shop.",1678,"SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name",employee_hire_evaluation,"['shop', 'hiring']"
"SELECT COUNT(DISTINCT TV_Channel.series_name), COUNT(TV_Channel.Content) FROM TV_Channel",False,List the number of different series names and contents in the TV Channel table.,1683,"SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel;",tvshow,['tv_channel']
"SELECT COUNT(DISTINCT TV_Channel.series_name), COUNT(TV_Channel.Content) FROM TV_Channel",False,How many different series and contents are listed in the TV Channel table?,1684,"SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel;",tvshow,['tv_channel']
"SELECT TV_Channel.series_name FROM Cartoon JOIN TV_Channel ON TV_Channel.id = Cartoon.Channel WHERE Cartoon.Title = ""the Rise of the Blue Beetle !""",False,"What is the TV Channel that shows the cartoon ""The Rise of the Blue Beetle!""? List the TV Channel's series name.",1687,"SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = ""The Rise of the Blue Beetle!"";",tvshow,"['cartoon', 'tv_channel']"
"SELECT TV_Channel.series_name FROM Cartoon JOIN TV_Channel ON TV_Channel.id = Cartoon.Channel WHERE Cartoon.Title = ""the Rise of the Blue Beetle""",False,"What is the series name of the TV Channel that shows the cartoon ""The Rise of the Blue Beetle""?",1688,"SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = ""The Rise of the Blue Beetle!"";",tvshow,"['cartoon', 'tv_channel']"
"SELECT Cartoon.Title FROM Cartoon JOIN TV_series ON TV_series.id = Cartoon.Channel JOIN TV_Channel ON TV_Channel.id = TV_series.Channel WHERE TV_Channel.series_name = ""Sky Radio""",False,"List the title of all  Cartoons showed on TV Channel with series name ""Sky Radio"".",1689,"SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = ""Sky Radio"";",tvshow,"['cartoon', 'tv_channel', 'tv_series']"
"SELECT TV_series.Episode FROM TV_Channel JOIN TV_series ON TV_Channel.id = TV_series.Channel WHERE TV_Channel.series_name = ""Sky Radio""",False,"What is the title of all the cartools that are on the TV Channel with the series name ""Sky Radio""?",1690,"SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = ""Sky Radio"";",tvshow,"['cartoon', 'tv_series', 'tv_channel']"
"SELECT MIN(TV_series.Share), MAX(TV_series.Share) FROM TV_series",False,What is minimum and maximum share of TV series?,1693,"SELECT max(SHARE) , min(SHARE) FROM TV_series;",tvshow,['tv_series']
"SELECT TV_series.Channel FROM TV_series WHERE TV_series.Episode = ""A Love of A Lifetime""",False,"What is the TV Channel of TV series with Episode ""A Love of a Lifetime""? List the TV Channel's series name.",1695,"SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = ""A Love of a Lifetime"";",tvshow,"['tv_series', 'tv_channel']"
"SELECT TV_series.Episode FROM TV_series WHERE TV_series.Episode = ""A Love of A Lifetime""",False,"What is the name of the series that has the episode ""A Love of a Lifetime""?",1696,"SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = ""A Love of a Lifetime"";",tvshow,"['tv_series', 'tv_channel']"
"SELECT TV_Channel.Package_Option, TV_Channel.series_name FROM TV_Channel JOIN TV_series ON TV_Channel.id = TV_series.Channel WHERE TV_Channel.Hight_definition_TV = ""t""",False,Find the package choice and series name of the TV channel that has high definition TV.,1703,"SELECT package_option ,  series_name FROM TV_Channel WHERE hight_definition_TV  =  ""yes""",tvshow,"['tv_series', 'tv_channel']"
"SELECT TV_Channel.Package_Option, TV_Channel.series_name FROM TV_Channel WHERE TV_Channel.Hight_definition_TV = ""high definition TV""",False,What are the package options and the name of the series for the TV Channel that supports high definition TV?,1704,"SELECT package_option ,  series_name FROM TV_Channel WHERE hight_definition_TV  =  ""yes""",tvshow,['tv_channel']
"SELECT DISTINCT department.Creation FROM management JOIN head ON management.department_ID = head.head_ID JOIN department ON management.department_ID = department.Department_ID WHERE head.born_state = ""Alabama""",False,What are the distinct creation years of the departments managed by a secretary born in state 'Alabama'?,1709,SELECT DISTINCT T1.creation FROM department AS T1 JOIN management AS T2 ON T1.department_id  =  T2.department_id JOIN head AS T3 ON T2.head_id  =  T3.head_id WHERE T3.born_state  =  'Alabama',department_management,"['department', 'management', 'head']"
SELECT Catalogs.catalog_name FROM Catalogs JOIN Catalog_Contents ON Catalogs.catalog_id = Catalog_Contents.catalog_level_number ORDER BY Catalog_Contents.price_in_dollars LIMIT 1,False,Find the level name of the catalog with the lowest price (in USD).,1714,SELECT t2.catalog_level_name FROM catalog_contents AS t1 JOIN catalog_structure AS t2 ON t1.catalog_level_number  =  t2.catalog_level_number ORDER BY t1.price_in_dollars LIMIT 1,product_catalog,"['catalog_structure', 'catalog_contents', 'catalogs']"
"SELECT Track.Name, Album.AlbumId FROM Album JOIN Track ON Album.AlbumId = Track.AlbumId WHERE Track.UnitPrice > 1",False,Show the album names and ids for albums that contain tracks with unit price bigger than 1.,1715,"SELECT T1.Title ,  T2.AlbumID FROM ALBUM AS T1 JOIN TRACK AS T2 ON T1.AlbumId  =  T2.AlbumId WHERE T2.UnitPrice  >  1 GROUP BY T2.AlbumID",chinook_1,"['track', 'album']"
"SELECT Album.Title, Album.AlbumId FROM Album JOIN Track ON Album.AlbumId = Track.AlbumId WHERE Track.UnitPrice > 1",False,What are the titles and ids for albums containing tracks with unit price greater than 1?,1716,"SELECT T1.Title ,  T2.AlbumID FROM ALBUM AS T1 JOIN TRACK AS T2 ON T1.AlbumId  =  T2.AlbumId WHERE T2.UnitPrice  >  1 GROUP BY T2.AlbumID",chinook_1,"['track', 'album']"
SELECT Customer.LastName FROM Customer EXCEPT SELECT Customer.LastName FROM Customer JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId GROUP BY Customer.LastName HAVING SUM(Invoice.Total) > 20,False,Find all the customer last names that do not have invoice totals larger than 20.,1717,SELECT LastName FROM CUSTOMER EXCEPT SELECT T1.LastName FROM CUSTOMER AS T1 JOIN Invoice AS T2 ON T1.CustomerId  =  T2.CustomerId WHERE T2.total  >  20,chinook_1,"['customer', 'invoice']"
"SELECT Artist.Name, Album.ArtistId FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId GROUP BY Album.ArtistId HAVING COUNT(*) >= 3 ORDER BY Album.ArtistId",False,Please list the name and id of all artists that have at least 3 albums in alphabetical order.,1721,"SELECT T2.Name ,  T1.ArtistId FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistID GROUP BY T1.ArtistId HAVING COUNT(*)  >=  3 ORDER BY T2.Name",chinook_1,"['artist', 'album']"
"SELECT Artist.Name, Artist.ArtistId FROM Artist JOIN Album ON Artist.ArtistId = Album.ArtistId GROUP BY Album.ArtistId HAVING COUNT(*) >= 3",False,"What are the names and ids of artists with 3 or more albums, listed in alphabetical order?",1722,"SELECT T2.Name ,  T1.ArtistId FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistID GROUP BY T1.ArtistId HAVING COUNT(*)  >=  3 ORDER BY T2.Name",chinook_1,"['artist', 'album']"
SELECT Artist.Name FROM Artist WHERE Artist.ArtistId NOT IN (SELECT Album.ArtistId FROM Album),False,Find the names of artists that do not have any albums.,1723,SELECT Name FROM ARTIST EXCEPT SELECT T2.Name FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistId,chinook_1,"['artist', 'album']"
SELECT Artist.Name FROM Artist WHERE Artist.ArtistId NOT IN (SELECT Album.ArtistId FROM Album),False,What are the names of artists who have not released any albums?,1724,SELECT Name FROM ARTIST EXCEPT SELECT T2.Name FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistId,chinook_1,"['artist', 'album']"
"SELECT enzyme.name FROM enzyme JOIN medicine_enzyme_interaction ON enzyme.id = medicine_enzyme_interaction.enzyme_id JOIN medicine ON medicine_enzyme_interaction.medicine_id = medicine.id WHERE medicine.name = ""Amisulpride"" AND medicine_enzyme_interaction.medicine_id = ""inhibitor""",False,What are the names of enzymes in the medicine named 'Amisulpride' that can serve as an 'inhibitor'?,1725,SELECT T1.name FROM enzyme AS T1 JOIN medicine_enzyme_interaction AS T2 ON T1.id  =  T2.enzyme_id JOIN medicine AS T3 ON T2.medicine_id  =  T3.id WHERE T3.name  =  'Amisulpride' AND T2.interaction_type  =  'inhibitor',medicine_enzyme_interaction,"['medicine_enzyme_interaction', 'enzyme', 'medicine']"
"SELECT medicine.id, medicine.name, medicine.FDA_approved FROM medicine JOIN medicine_enzyme_interaction ON medicine.id = medicine_enzyme_interaction.enzyme_id GROUP BY medicine.id ORDER BY COUNT(*) DESC",False,"What are the ids, names and FDA approval status of medicines in descending order of the number of enzymes that it can interact with.",1727,"SELECT T1.id ,  T1.Name ,  T1.FDA_approved FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id  =  T1.id GROUP BY T1.id ORDER BY count(*) DESC",medicine_enzyme_interaction,"['medicine_enzyme_interaction', 'medicine']"
"SELECT medicine.id, medicine.name, medicine.FDA_approved FROM medicine JOIN medicine_enzyme_interaction ON medicine.id = medicine_enzyme_interaction.medicine_id ORDER BY medicine.FDA_approved DESC",False,"What are the ids, names, and FDA approval status for medicines ordered by descending number of possible enzyme interactions?",1728,"SELECT T1.id ,  T1.Name ,  T1.FDA_approved FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id  =  T1.id GROUP BY T1.id ORDER BY count(*) DESC",medicine_enzyme_interaction,"['medicine_enzyme_interaction', 'medicine']"
"SELECT medicine_enzyme_interaction.interaction_type FROM enzyme JOIN medicine_enzyme_interaction ON enzyme.id = medicine_enzyme_interaction.enzyme_id JOIN medicine ON medicine_enzyme_interaction.medicine_id = medicine.id WHERE enzyme.name = ""ALA synthprazole"" AND medicine.name = ""Aripiprazole""",False,What is the interaction type of the enzyme named 'ALA synthase' and the medicine named 'Aripiprazole'?,1729,SELECT T1.interaction_type FROM medicine_enzyme_interaction AS T1 JOIN medicine AS T2 ON T1.medicine_id  =  T2.id JOIN enzyme AS T3 ON T1.enzyme_id  =  T3.id WHERE T3.name  =  'ALA synthase' AND T2.name  =  'Aripiprazole',medicine_enzyme_interaction,"['medicine_enzyme_interaction', 'enzyme', 'medicine']"
"SELECT medicine_enzyme_interaction.interaction_type FROM medicine_enzyme_interaction JOIN enzyme ON medicine_enzyme_interaction.enzyme_id = enzyme.id WHERE enzyme.name = ""ALA synthpiprazole""",False,What is the type of interaction for the enzyme named 'ALA synthase' and the medicine named 'Aripiprazole'?,1730,SELECT T1.interaction_type FROM medicine_enzyme_interaction AS T1 JOIN medicine AS T2 ON T1.medicine_id  =  T2.id JOIN enzyme AS T3 ON T1.enzyme_id  =  T3.id WHERE T3.name  =  'ALA synthase' AND T2.name  =  'Aripiprazole',medicine_enzyme_interaction,"['medicine_enzyme_interaction', 'enzyme', 'medicine']"
"SELECT medicine_enzyme_interaction.interaction_type, COUNT(*) FROM medicine_enzyme_interaction WHERE medicine_enzyme_interaction.interaction_type = (SELECT medicine_enzyme_interaction.medicine_id FROM medicine_enzyme_interaction GROUP BY medicine_enzyme_interaction.interaction_type ORDER BY COUNT(*) DESC LIMIT 1) ORDER BY COUNT(*) DESC LIMIT 1",False,What is the most common interaction type between enzymes and medicine? And how many are there?,1731,"SELECT interaction_type ,  count(*) FROM medicine_enzyme_interaction GROUP BY interaction_type ORDER BY count(*) DESC LIMIT 1",medicine_enzyme_interaction,['medicine_enzyme_interaction']
SELECT * FROM medicine,False,"What are the most common types of interactions between enzymes and medicine, and how many types are there?",1732,"SELECT interaction_type ,  count(*) FROM medicine_enzyme_interaction GROUP BY interaction_type ORDER BY count(*) DESC LIMIT 1",medicine_enzyme_interaction,"['medicine_enzyme_interaction', 'medicine']"
SELECT university.Founded FROM university WHERE university.Founded = (SELECT MAX(university.Founded) FROM university),False,Find the founded year of the newest non public school.,1733,SELECT founded FROM university WHERE affiliation != 'Public' ORDER BY founded DESC LIMIT 1,university_basketball,['university']
SELECT university.School FROM university ORDER BY university.Founded DESC LIMIT 1,False,What is the founded year of the non public school that was founded most recently?,1734,SELECT founded FROM university WHERE affiliation != 'Public' ORDER BY founded DESC LIMIT 1,university_basketball,['university']
"SELECT basketball_match.Team_Name, basketball_match.School_ID FROM basketball_match ORDER BY basketball_match.ACC_Regular_Season DESC LIMIT 1",False,What is the team name and acc regular season score of the school that was founded for the longest time?,1737,"SELECT t2.team_name ,  t2.ACC_Regular_Season FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id  =  t2.school_id ORDER BY t1.founded LIMIT 1",university_basketball,"['basketball_match', 'university']"
"SELECT basketball_match.Team_Name, basketball_match.ACC_Regular_Season FROM basketball_match JOIN basketball_match ON basketball_match.School_ID = basketball_match.Team_ID ORDER BY basketball_match.ACC_Regular_Season LIMIT 1",False,Return the name of the team and the acc during the regular season for the school that was founded the earliest.,1738,"SELECT t2.team_name ,  t2.ACC_Regular_Season FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id  =  t2.school_id ORDER BY t1.founded LIMIT 1",university_basketball,"['basketball_match', 'university']"
SELECT Player.id FROM Player WHERE Player.height BETWEEN 180 AND 85,False,List all of the player ids with a height of at least 180cm and an overall rating higher than 85.,1739,SELECT player_api_id FROM Player WHERE height  >=  180 INTERSECT SELECT player_api_id FROM Player_Attributes WHERE overall_rating  >  85,soccer_1,"['player_attributes', 'player']"
SELECT Player_Attributes.player_fifa_api_id FROM Player_Attributes ORDER BY Player_Attributes.overall_rating DESC LIMIT 3,False,Who are the top 3 players in terms of overall rating?,1740,SELECT DISTINCT T1.player_name FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id  =  T2.player_api_id ORDER BY overall_rating DESC LIMIT 3,soccer_1,"['player_attributes', 'player']"
"SELECT Player.player_name, Player.birthday FROM Player GROUP BY Player.player_name ORDER BY COUNT(*) DESC LIMIT 5",False,List the names and birthdays of the top five players in terms of potential.,1741,"SELECT DISTINCT T1.player_name ,  T1.birthday FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id  =  T2.player_api_id ORDER BY potential DESC LIMIT 5",soccer_1,"['player_attributes', 'player']"
"SELECT member.Name, performance.Location FROM member JOIN member_attendance ON member.Member_ID = member_attendance.Member_ID JOIN performance ON member_attendance.Performance_ID = performance.Performance_ID ORDER BY performance.Attendance",False,Show the names of members and the location of performances they attended in ascending alphabetical order of their names.,1744,"SELECT T2.Name ,  T3.Location FROM member_attendance AS T1 JOIN member AS T2 ON T1.Member_ID  =  T2.Member_ID JOIN performance AS T3 ON T1.Performance_ID  =  T3.Performance_ID ORDER BY T2.Name ASC",performance_attendance,"['member_attendance', 'member', 'performance']"
"SELECT COUNT(*), debate_people.Negative FROM debate_people JOIN debate ON debate_people.Debate_ID = debate.Debate_ID WHERE debate_people.Negative = debate.Venue ORDER BY debate_people.Negative",False,"Show the names of people, and dates and venues of debates they are on the negative side, ordered in ascending alphabetical order of name.",1749,"SELECT T3.Name ,  T2.Date ,  T2.Venue FROM debate_people AS T1 JOIN debate AS T2 ON T1.Debate_ID  =  T2.Debate_ID JOIN people AS T3 ON T1.Negative  =  T3.People_ID ORDER BY T3.Name ASC",debate,"['debate', 'people', 'debate_people']"
SELECT people.Name FROM debate_people JOIN people ON debate_people.Affirmative = people.People_ID WHERE debate_people.Affirmative > 200,False,Show the names of people that are on affirmative side of debates with number of audience bigger than 200.,1750,SELECT T3.Name FROM debate_people AS T1 JOIN debate AS T2 ON T1.Debate_ID  =  T2.Debate_ID JOIN people AS T3 ON T1.Affirmative  =  T3.People_ID WHERE T2.Num_of_Audience  >  200,debate,"['debate', 'people', 'debate_people']"
SELECT Customers.Customer_ID FROM Customers EXCEPT SELECT Policies.Customer_ID FROM Policies,False,Find the names of customers who have no policies associated.,1754,SELECT customer_details FROM customers EXCEPT SELECT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id,insurance_and_eClaims,"['customers', 'policies']"
SELECT Customers.Customer_ID FROM Customers EXCEPT SELECT Policies.Customer_ID FROM Policies,False,What are the names of customers who do not have any policies?,1755,SELECT customer_details FROM customers EXCEPT SELECT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id,insurance_and_eClaims,"['customers', 'policies']"
"SELECT Customers.Customer_ID FROM Customers JOIN Policies ON Customers.Customer_ID = Policies.Customer_ID WHERE Policies.Policy_Type_Code = ""deputy"" OR Policies.Policy_Type_Code = ""uniformed""",False,Find the names of customers who either have an deputy policy or uniformed policy.,1756,"SELECT DISTINCT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.policy_type_code  =  ""Deputy"" OR t1.policy_type_code  =  ""Uniform""",insurance_and_eClaims,"['customers', 'policies']"
SELECT Products.product_name FROM Products WHERE Products.product_id NOT IN (SELECT Order_Items.product_id FROM Order_Items),False,What are the names of products that have never been ordered?,1767,SELECT product_name FROM Products EXCEPT SELECT T1.product_name FROM Products AS T1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id,customers_and_invoices,"['order_items', 'products']"
"SELECT COUNT(DISTINCT Products.product_name), Orders.customer_id FROM Orders JOIN Order_Items ON Orders.order_id = Order_Items.order_id JOIN Products ON Order_Items.product_id = Products.product_id GROUP BY Products.product_id",False,Show all product names and the number of customers having an order on each product.,1768,"SELECT T2.product_name ,  count(*) FROM Order_items AS T1 JOIN Products AS T2 ON T1.product_id  =  T2.product_id JOIN Orders AS T3 ON T3.order_id  =  T1.order_id GROUP BY T2.product_name",customers_and_invoices,"['order_items', 'products', 'orders']"
"SELECT Products.product_name, COUNT(DISTINCT Orders.customer_id) FROM Orders JOIN Order_Items ON Orders.order_id = Order_Items.order_id JOIN Products ON Order_Items.product_id = Products.product_id GROUP BY Products.product_id",False,"What are teh names of the different products, as well as the number of customers who have ordered each product.",1769,"SELECT T2.product_name ,  count(*) FROM Order_items AS T1 JOIN Products AS T2 ON T1.product_id  =  T2.product_id JOIN Orders AS T3 ON T3.order_id  =  T1.order_id GROUP BY T2.product_name",customers_and_invoices,"['order_items', 'products', 'orders']"
"SELECT CHECKING.balance FROM CHECKING JOIN ACCOUNTS ON CHECKING.custid = ACCOUNTS.custid WHERE ACCOUNTS.name LIKE ""% ee %""",False,What is the checking balance of the account whose owner’s name contains the substring ‘ee’?,1772,SELECT T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid WHERE T1.name LIKE '%ee%',small_bank_1,"['checking', 'accounts']"
"SELECT CHECKING.balance FROM ACCOUNTS JOIN CHECKING ON CHECKING.custid = ACCOUNTS.custid WHERE ACCOUNTS.name LIKE ""% ee %""",False,Find the balance of the checking account belonging to an owner whose name contains 'ee'.,1773,SELECT T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid WHERE T1.name LIKE '%ee%',small_bank_1,"['checking', 'accounts']"
"SELECT CHECKING.balance FROM CHECKING JOIN ACCOUNTS ON CHECKING.custid = ACCOUNTS.custid WHERE ACCOUNTS.name = ""Brown""",False,What are the checking and savings balances in accounts belonging to Brown?,1775,"SELECT T2.balance ,  T3.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid WHERE T1.name  =  'Brown'",small_bank_1,"['savings', 'checking', 'accounts']"
"SELECT ACCOUNTS.name, SAVINGS.balance FROM ACCOUNTS JOIN SAVINGS ON ACCOUNTS.custid = SAVINGS.custid ORDER BY SAVINGS.balance DESC",False,"Find the name, checking balance and savings balance of all accounts in the bank sorted by their total checking and savings balance in descending order.",1776,"SELECT T2.balance ,  T3.balance ,  T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid ORDER BY T2.balance + T3.balance DESC",small_bank_1,"['savings', 'checking', 'accounts']"
SELECT * FROM ACCOUNTS,False,"What are the names, checking balances, and savings balances of customers, ordered by the total of checking and savings balances descending?",1777,"SELECT T2.balance ,  T3.balance ,  T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid ORDER BY T2.balance + T3.balance DESC",small_bank_1,"['savings', 'checking', 'accounts']"
SELECT ACCOUNTS.name FROM ACCOUNTS JOIN SAVINGS ON ACCOUNTS.custid = SAVINGS.balance WHERE SAVINGS.balance > (SELECT MIN(CHECKING.balance) FROM CHECKING),False,Find the name of accounts whose checking balance is higher than corresponding saving balance.,1778,SELECT T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid WHERE T2.balance  >  T3.balance,small_bank_1,"['savings', 'checking', 'accounts']"
SELECT * FROM ACCOUNTS,False,What are the names of customers with a higher checking balance than savings balance?,1779,SELECT T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid WHERE T2.balance  >  T3.balance,small_bank_1,"['savings', 'checking', 'accounts']"
"SELECT ACCOUNTS.name, SUM(SAVINGS.balance) FROM ACCOUNTS JOIN SAVINGS ON ACCOUNTS.custid = SAVINGS.balance GROUP BY ACCOUNTS.custid",False,Find the name and total checking and savings balance of the accounts whose savings balance is lower than corresponding checking balance.,1780,"SELECT T1.name ,  T3.balance + T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid WHERE T3.balance  <  T2.balance",small_bank_1,"['savings', 'checking', 'accounts']"
SELECT * FROM ACCOUNTS,False,"What are the names of customers who have a savings balance lower than their checking balance, and what is the total of their checking and savings balances?",1781,"SELECT T1.name ,  T3.balance + T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid WHERE T3.balance  <  T2.balance",small_bank_1,"['savings', 'checking', 'accounts']"
"SELECT ACCOUNTS.name, SAVINGS.balance FROM SAVINGS JOIN ACCOUNTS ON SAVINGS.balance = ACCOUNTS.custid ORDER BY SAVINGS.balance DESC LIMIT 3",False,Find the name and savings balance of the top 3 accounts with the highest saving balance sorted by savings balance in descending order.,1782,"SELECT T1.name ,  T2.balance FROM accounts AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid ORDER BY T2.balance DESC LIMIT 3",small_bank_1,"['savings', 'accounts']"
"SELECT ACCOUNTS.name, SAVINGS.balance FROM SAVINGS JOIN ACCOUNTS ON SAVINGS.balance = ACCOUNTS.custid ORDER BY SAVINGS.balance DESC LIMIT 3",False,What are names and savings balances of the three accounts with the highest savings balances?,1783,"SELECT T1.name ,  T2.balance FROM accounts AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid ORDER BY T2.balance DESC LIMIT 3",small_bank_1,"['savings', 'accounts']"
SELECT endowment.donator_name FROM endowment WHERE endowment.amount < 9,False,Show the names of all the donors except those whose donation amount less than 9.,1786,SELECT donator_name FROM endowment EXCEPT SELECT donator_name FROM endowment WHERE amount  <  9,school_finance,['endowment']
"SELECT building.Name, building.Height_feet FROM building JOIN Institution ON building.building_id = Institution.building_id WHERE building.Years_as_tallest > 1880 GROUP BY building.Name HAVING COUNT(*) >= 2",False,Show the names and heights of buildings with at least two institutions founded after 1880.,1791,"SELECT T1.name ,  T1.height_feet FROM building AS T1 JOIN institution AS T2 ON T1.building_id  =  T2.building_id WHERE T2.founded  >  1880 GROUP BY T1.building_id HAVING count(*)  >=  2",protein_institute,"['building', 'institution']"
SELECT COUNT(DISTINCT protein.protein_name) FROM protein JOIN building ON protein.Institution_id = building.building_id WHERE building.Floors >= 20,False,How many proteins are associated with an institution in a building with at least 20 floors?,1793,SELECT count(*) FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id  =  T2.institution_id JOIN building AS T3 ON T3.building_id  =  T1.building_id WHERE T3.floors  >=  20,protein_institute,"['protein', 'building', 'institution']"
"SELECT MAX(Payments.amount_paid_in_full_yn), MAX(Payments.amount_paid) FROM Payments",False,What is the maximum total amount paid by a customer? List the customer id and amount.,1794,"SELECT customer_id ,  sum(amount_paid) FROM Payments GROUP BY customer_id ORDER BY sum(amount_paid) DESC LIMIT 1",products_for_hire,['payments']
"SELECT Bookings.booking_start_date FROM Bookings JOIN Products_Booked ON Bookings.booking_id = Products_Booked.booking_id JOIN Products_for_Hire ON Products_Booked.product_id = Products_for_Hire.product_id WHERE Products_for_Hire.product_name = ""Book collection A""",False,What are the start date and end date of the booking that has booked the product named 'Book collection A'?,1795,"SELECT T3.booking_start_date ,   T3.booking_end_date FROM Products_for_hire AS T1 JOIN products_booked AS T2 ON T1.product_id  =  T2.product_id JOIN bookings AS T3 ON T2.booking_id  =  T3.booking_id WHERE T1.product_name  =  'Book collection A'",products_for_hire,"['products_booked', 'bookings', 'products_for_hire']"
"SELECT pilot.Pilot_name, aircraft.Fleet_Series FROM pilot JOIN aircraft ON pilot.Pilot_ID = aircraft.Aircraft_ID ORDER BY pilot.Rank",False,Show the names of pilots and fleet series of the aircrafts they have flied with in ascending order of the rank of the pilot.,1798,"SELECT T3.Pilot_name ,  T2.Fleet_Series FROM pilot_record AS T1 JOIN aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN pilot AS T3 ON T1.Pilot_ID  =  T3.Pilot_ID ORDER BY T3.Rank",pilot_record,"['pilot_record', 'pilot', 'aircraft']"
SELECT aircraft.Fleet_Series FROM aircraft JOIN pilot ON aircraft.Aircraft_ID = pilot.Pilot_ID WHERE pilot.Age < 34,False,Show the fleet series of the aircrafts flied by pilots younger than 34,1799,SELECT T2.Fleet_Series FROM pilot_record AS T1 JOIN aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN pilot AS T3 ON T1.Pilot_ID  =  T3.Pilot_ID WHERE T3.Age  <  34,pilot_record,"['pilot_record', 'pilot', 'aircraft']"
"SELECT Draft_Copies.document_id, COUNT(*) FROM Draft_Copies GROUP BY Draft_Copies.document_id ORDER BY COUNT(*) DESC LIMIT 1",False,Which document has the most draft copies? List its document id and number of draft copies.,1801,"SELECT document_id , count(copy_number) FROM Draft_Copies GROUP BY document_id ORDER BY count(copy_number) DESC LIMIT 1;",cre_Doc_Control_Systems,['draft_copies']
SELECT Employees.employee_name FROM Employees WHERE Employees.employee_id NOT IN (SELECT Circulation_History.employee_id FROM Circulation_History),False,List the employees who have not showed up in any circulation history of documents. List the employee's name.,1802,SELECT employee_name FROM Employees EXCEPT SELECT Employees.employee_name FROM Employees JOIN Circulation_History ON Circulation_History.employee_id = Employees.employee_id,cre_Doc_Control_Systems,"['circulation_history', 'employees']"
"SELECT COUNT(*) FROM Participants JOIN Participants_in_Events ON Participants.Participant_ID = Participants_in_Events.Participant_ID WHERE Participants.Participant_Details LIKE ""% Dr %""",False,How many events had participants whose details had the substring 'Dr.',1803,SELECT count(*) FROM participants AS T1 JOIN Participants_in_Events AS T2 ON T1.Participant_ID  =  T2.Participant_ID WHERE T1.participant_details LIKE '%Dr.%',local_govt_in_alabama,"['participants', 'participants_in_events']"
"SELECT Events.Event_ID FROM Events WHERE Events.Event_ID NOT IN (SELECT Participants.Participant_ID FROM Participants WHERE Participants.Participant_Details = ""Kenyatta Kuhn"")",False,Which events id does not have any participant with detail 'Kenyatta Kuhn'?,1806,SELECT event_id FROM EVENTS EXCEPT SELECT T1.event_id FROM Participants_in_Events AS T1 JOIN Participants AS T2 ON T1.Participant_ID  =  T2.Participant_ID WHERE Participant_Details  =  'Kenyatta Kuhn',local_govt_in_alabama,"['participants', 'participants_in_events', 'events']"
SELECT perpetrator.Country FROM perpetrator GROUP BY perpetrator.Country ORDER BY COUNT(*) DESC LIMIT 1,False,What is the country that has the most perpetrators?,1821,"SELECT Country ,  COUNT(*) FROM perpetrator GROUP BY Country ORDER BY COUNT(*) DESC LIMIT 1",perpetrator,['perpetrator']
SELECT party.Comptroller FROM party JOIN election ON party.Party_ID = election.Party WHERE election.Delegate = 1 OR election.Delegate = 2,False,Who were the comptrollers of the parties associated with the delegates from district 1 or district 2?,1835,SELECT T2.Comptroller FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T1.District  =  1 OR T1.District  =  2,election,"['party', 'election']"
"SELECT party.Party FROM party JOIN election ON party.Party_ID = election.Party WHERE election.Delegate = ""1 VALUE"" OR party.Comptroller = ""VALUE""",False,Find the parties associated with the delegates from district 1 or 2. Who served as comptrollers of the parties?,1836,SELECT T2.Comptroller FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T1.District  =  1 OR T1.District  =  2,election,"['party', 'election']"
"SELECT journalist.Name, event.Name FROM news_report JOIN event ON news_report.journalist_ID = event.Event_ID JOIN journalist ON news_report.Event_ID = journalist.journalist_ID ORDER BY event.Name",False,Show the names of journalists and the names of the events they reported in ascending order,1845,"SELECT T3.Name ,  T2.Name FROM news_report AS T1 JOIN event AS T2 ON T1.Event_ID  =  T2.Event_ID JOIN journalist AS T3 ON T1.journalist_ID  =  T3.journalist_ID ORDER BY T2.Event_Attendance ASC",news_report,"['journalist', 'news_report', 'event']"
SELECT DISTINCT customer.cust_name FROM customer JOIN loan ON customer.cust_ID = loan.cust_ID ORDER BY loan.amount,False,List the name of all different customers who have some loan sorted by their total loan amount.,1849,SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id GROUP BY T1.cust_name ORDER BY sum(T2.amount),loan_1,"['customer', 'loan']"
SELECT DISTINCT customer.cust_name FROM customer JOIN loan ON customer.cust_ID = loan.cust_ID ORDER BY loan.amount,False,"What are the names of the different customers who have taken out a loan, ordered by the total amount that they have taken?",1850,SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id GROUP BY T1.cust_name ORDER BY sum(T2.amount),loan_1,"['customer', 'loan']"
"SELECT customer.cust_name FROM customer WHERE customer.acc_type = ""checking""",False,Find the name of customers who have both saving and checking account types.,1851,SELECT cust_name FROM customer WHERE acc_type  =  'saving' INTERSECT SELECT cust_name FROM customer WHERE acc_type  =  'checking',loan_1,['customer']
"SELECT customer.cust_name FROM customer INTERSECT SELECT customer.cust_name FROM customer WHERE customer.acc_type = ""checking""",False,What are the names of customers who have both savings and checking accounts?,1852,SELECT cust_name FROM customer WHERE acc_type  =  'saving' INTERSECT SELECT cust_name FROM customer WHERE acc_type  =  'checking',loan_1,['customer']
SELECT customer.cust_name FROM customer WHERE customer.cust_ID NOT IN (SELECT customer.cust_name FROM customer),False,Find the name of customers who do not have an saving account.,1853,SELECT cust_name FROM customer EXCEPT SELECT cust_name FROM customer WHERE acc_type  =  'saving',loan_1,['customer']
SELECT customer.cust_name FROM customer WHERE customer.cust_ID NOT IN (SELECT customer.cust_name FROM customer),False,What are the names of customers who do not have saving accounts?,1854,SELECT cust_name FROM customer EXCEPT SELECT cust_name FROM customer WHERE acc_type  =  'saving',loan_1,['customer']
SELECT customer.cust_name FROM customer WHERE customer.cust_ID NOT IN (SELECT loan.cust_ID FROM loan),False,Find the name of customers who do not have a loan with a type of Mortgages.,1855,SELECT cust_name FROM customer EXCEPT SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id WHERE T2.loan_type  =  'Mortgages',loan_1,"['customer', 'loan']"
SELECT customer.cust_name FROM customer WHERE customer.cust_ID NOT IN (SELECT loan.cust_ID FROM loan),False,What are the names of customers who have not taken a Mortage loan?,1856,SELECT cust_name FROM customer EXCEPT SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id WHERE T2.loan_type  =  'Mortgages',loan_1,"['customer', 'loan']"
SELECT customer.state FROM customer GROUP BY customer.state ORDER BY COUNT(*) DESC LIMIT 1,False,Find the state which has the most number of customers.,1859,SELECT state FROM bank GROUP BY state ORDER BY sum(no_of_customers) DESC LIMIT 1,loan_1,"['bank', 'customer']"
SELECT DISTINCT bank.branch_ID FROM bank JOIN loan ON bank.branch_ID = loan.branch_ID JOIN customer ON loan.cust_ID = customer.cust_ID WHERE customer.credit_score < 100,False,Find the names of bank branches that have provided a loan to any customer whose credit score is below 100.,1861,SELECT T2.bname FROM loan AS T1 JOIN bank AS T2 ON T1.branch_id  =  T2.branch_id JOIN customer AS T3 ON T1.cust_id  =  T3.cust_id WHERE T3.credit_score  <  100,loan_1,"['customer', 'bank', 'loan']"
SELECT customer.cust_name FROM customer WHERE customer.credit_score < 100,False,What are the names of banks that have loaned money to customers with credit scores below 100?,1862,SELECT T2.bname FROM loan AS T1 JOIN bank AS T2 ON T1.branch_id  =  T2.branch_id JOIN customer AS T3 ON T1.cust_id  =  T3.cust_id WHERE T3.credit_score  <  100,loan_1,"['bank', 'customer', 'loan']"
SELECT Assets.asset_model FROM Assets EXCEPT SELECT Assets.asset_model FROM Assets JOIN Fault_Log ON Assets.asset_id = Fault_Log.asset_id,False,Which assets did not incur any fault log? List the asset model.,1867,SELECT asset_model FROM Assets WHERE asset_id NOT IN (SELECT asset_id FROM Fault_Log),assets_maintenance,"['assets', 'fault_log']"
SELECT * FROM train,False,Find names and times of trains that run through stations for the local authority Chiltern.,1868,"SELECT t3.name ,  t3.time FROM station AS t1 JOIN route AS t2 ON t1.id  =  t2.station_id JOIN train AS t3 ON t2.train_id  =  t3.id WHERE t1.local_authority  =  ""Chiltern""",station_weather,"['route', 'train', 'station']"
SELECT player.Position FROM player WHERE player.Points > 20 AND 20 INTERSECT SELECT player.Position FROM player WHERE player.Points < 10,False,What are the positions of both players that have more than 20 20 points and less than 10 points?,1874,SELECT POSITION FROM player WHERE Points  >  20 INTERSECT SELECT POSITION FROM player WHERE Points  <  10,sports_competition,['player']
"SELECT competition.Country FROM competition WHERE competition.Competition_type = ""friendly"" INTERSECT SELECT competition.Country FROM competition WHERE competition.Competition_type = ""tournament""",False,What are the countries that participated in both friendly and tournament type competitions?,1878,SELECT country FROM competition WHERE competition_type  =  'Friendly' INTERSECT SELECT country FROM competition WHERE competition_type  =  'Tournament',sports_competition,['competition']
"SELECT competition.Country FROM competition WHERE competition.Competition_type != ""Friendly""",False,Find the countries that have never participated in any competition with Friendly type.,1879,SELECT country FROM competition EXCEPT SELECT country FROM competition WHERE competition_type  =  'Friendly',sports_competition,['competition']
"SELECT competition.Country FROM competition WHERE competition.Competition_type != ""friendly""",False,What are the countries that have never participated in any friendly-type competitions?,1880,SELECT country FROM competition EXCEPT SELECT country FROM competition WHERE competition_type  =  'Friendly',sports_competition,['competition']
SELECT song.artist_name FROM artist JOIN song ON artist.artist_name = song.artist_name ORDER BY song.artist_name LIMIT 1,False,What is the name of the artist who produced the shortest song?,1881,SELECT T1.artist_name FROM song AS T1 JOIN files AS T2 ON T1.f_id  =  T2.f_id ORDER BY T2.duration LIMIT 1,music_1,"['artist', 'song', 'files']"
SELECT song.artist_name FROM artist JOIN song ON artist.artist_name = song.artist_name ORDER BY song.artist_name LIMIT 1,False,What are the names of the artists who sang the shortest song?,1882,SELECT T1.artist_name FROM song AS T1 JOIN files AS T2 ON T1.f_id  =  T2.f_id ORDER BY T2.duration LIMIT 1,music_1,"['artist', 'song', 'files']"
"SELECT song.artist_name, song.country FROM artist JOIN song ON artist.artist_name = song.artist_name ORDER BY song.rating DESC LIMIT 3",False,What are the names and countries of origin for the artists who produced the top three highly rated songs.,1883,"SELECT T1.artist_name ,  T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name ORDER BY T2.rating DESC LIMIT 3",music_1,"['artist', 'song']"
"SELECT song.artist_name, song.country FROM artist JOIN song ON artist.artist_name = song.artist_name ORDER BY song.rating DESC LIMIT 3",False,What are the names of the singers who sang the top 3 most highly rated songs and what countries do they hail from?,1884,"SELECT T1.artist_name ,  T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name ORDER BY T2.rating DESC LIMIT 3",music_1,"['artist', 'song']"
"SELECT song.artist_name FROM artist JOIN song ON artist.artist_name = song.artist_name WHERE song.country = ""UK"" AND song.languages = ""English""",False,Find the names of the artists who are from UK and have produced English songs.,1887,"SELECT artist_name FROM artist WHERE country  =  ""UK"" INTERSECT SELECT artist_name FROM song WHERE languages  =  ""english""",music_1,"['artist', 'song']"
"SELECT song.artist_name FROM artist JOIN song ON artist.artist_name = song.f_id WHERE artist.country = ""English"" AND song.languages = ""UK""",False,What are the names of the artists that are from the UK and sang songs in English?,1888,"SELECT artist_name FROM artist WHERE country  =  ""UK"" INTERSECT SELECT artist_name FROM song WHERE languages  =  ""english""",music_1,"['artist', 'song']"
SELECT song.f_id FROM song WHERE song.resolution < 1000 AND song.resolution < 1000,False,Find the id of songs that are available in mp4 format and have resolution lower than 1000.,1889,"SELECT f_id FROM files WHERE formats  =  ""mp4"" INTERSECT SELECT f_id FROM song WHERE resolution  <  1000",music_1,"['song', 'files']"
"SELECT files.file_size FROM files WHERE files.formats = ""mp4"" EXCEPT SELECT files.file_size FROM files WHERE files.formats < 1000",False,What is the id of the files that are available in the format of mp4 and a resolution smaller than 1000?,1890,"SELECT f_id FROM files WHERE formats  =  ""mp4"" INTERSECT SELECT f_id FROM song WHERE resolution  <  1000",music_1,"['song', 'files']"
"SELECT DISTINCT song.song_name FROM song WHERE song.resolution > (SELECT MIN(song.resolution) FROM song WHERE song.languages = ""English"")",False,Find the distinct names of all songs that have a higher resolution than some songs in English.,1893,"SELECT DISTINCT song_name FROM song WHERE resolution  >  (SELECT min(resolution) FROM song WHERE languages  =  ""english"")",music_1,['song']
"SELECT DISTINCT song.song_name FROM song WHERE song.resolution > (SELECT MIN(song.resolution) FROM song WHERE song.languages = ""English"")",False,What are the different names for all songs that have a higher resolution than English songs?,1894,"SELECT DISTINCT song_name FROM song WHERE resolution  >  (SELECT min(resolution) FROM song WHERE languages  =  ""english"")",music_1,['song']
"SELECT song.song_name FROM song WHERE song.rating < (SELECT MIN(song.rating) FROM genre JOIN song ON genre.g_name = song.f_id WHERE genre.g_name = ""blues"")",False,What are the names of all songs that have a lower rating than some song of blues genre?,1895,"SELECT song_name FROM song WHERE rating  <  (SELECT max(rating) FROM song WHERE genre_is  =  ""blues"")",music_1,"['song', 'genre']"
"SELECT song.artist_name, song.country FROM artist JOIN song ON artist.artist_name = song.artist_name WHERE artist.country LIKE ""% love %""",False,"What is the name and country of origin of the artist who released a song that has ""love"" in its title?",1897,"SELECT T1.artist_name ,  T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.song_name LIKE ""%love%""",music_1,"['artist', 'song']"
"SELECT song.artist_name, song.country FROM artist JOIN song ON artist.artist_name = song.artist_name WHERE song.artist_name LIKE ""% love %""",False,"What are the names of the artists who released a song that has the word love in its title, and where are the artists from?",1898,"SELECT T1.artist_name ,  T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.song_name LIKE ""%love%""",music_1,"['artist', 'song']"
"SELECT song.artist_name, artist.gender FROM artist JOIN song ON artist.artist_name = song.artist_name WHERE song.releasedate = ""March""",False,List the name and gender for all artists who released songs in March.,1899,"SELECT T1.artist_name ,  T1.gender FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.releasedate LIKE ""%Mar%""",music_1,"['artist', 'song']"
"SELECT song.artist_name, artist.gender FROM artist JOIN song ON artist.artist_name = song.f_id WHERE song.releasedate = ""March""",False,What are the names and genders of all artists who released songs in the month of March?,1900,"SELECT T1.artist_name ,  T1.gender FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.releasedate LIKE ""%Mar%""",music_1,"['artist', 'song']"
SELECT song.f_id FROM song WHERE song.resolution > 720 OR song.resolution > 720,False,What are the ids of songs that are available in either mp4 format or have resolution above 720?,1901,"SELECT f_id FROM files WHERE formats  =  ""mp4"" UNION SELECT f_id FROM song WHERE resolution  >  720",music_1,"['song', 'files']"
SELECT song.f_id FROM song WHERE song.resolution > 720 OR song.resolution > 720,False,What are the ids of all songs that are available on mp4 or have a higher resolution than 720?,1902,"SELECT f_id FROM files WHERE formats  =  ""mp4"" UNION SELECT f_id FROM song WHERE resolution  >  720",music_1,"['song', 'files']"
"SELECT song.artist_name FROM artist JOIN song ON artist.artist_name = song.artist_name WHERE song.country = ""UK"" AND song.languages = ""English""",False,Return the names of singers who are from UK and released an English song.,1905,"SELECT artist_name FROM artist WHERE country  =  ""UK"" INTERSECT SELECT T1.artist_name FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.languages  =  ""english""",music_1,"['artist', 'song']"
"SELECT song.artist_name FROM artist JOIN song ON artist.artist_name = song.artist_name WHERE song.country = ""UK"" AND song.languages = ""English""",False,What are the names of all singers that are from the UK and released a song in English?,1906,"SELECT artist_name FROM artist WHERE country  =  ""UK"" INTERSECT SELECT T1.artist_name FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.languages  =  ""english""",music_1,"['artist', 'song']"
"SELECT MAX(song.resolution), MIN(song.resolution) FROM song WHERE song.resolution = 3",False,What are the maximum and minimum resolution of songs whose duration is 3 minutes?,1907,"SELECT max(T2.resolution) ,  min(T2.resolution) FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T1.duration LIKE ""3:%""",music_1,"['song', 'files']"
"SELECT MAX(song.resolution), MIN(song.resolution) FROM song WHERE song.resolution = 3",False,What is the maximum and minimum resolution of all songs that are approximately 3 minutes long?,1908,"SELECT max(T2.resolution) ,  min(T2.resolution) FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T1.duration LIKE ""3:%""",music_1,"['song', 'files']"
SELECT MAX(song.resolution) FROM song ORDER BY song.resolution,False,What are the maximum duration and resolution of songs grouped and ordered by languages?,1909,"SELECT max(T1.duration) ,  max(T2.resolution) ,  T2.languages FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id GROUP BY T2.languages ORDER BY T2.languages",music_1,"['song', 'files']"
"SELECT MAX(song.resolution), song.languages FROM song GROUP BY song.languages",False,"What are the maximum duration and resolution of all songs, for each language, ordered alphabetically by language?",1910,"SELECT max(T1.duration) ,  max(T2.resolution) ,  T2.languages FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id GROUP BY T2.languages ORDER BY T2.languages",music_1,"['song', 'files']"
"SELECT MIN(song.rating), song.genre_is FROM genre JOIN song ON genre.g_name = song.genre_is GROUP BY song.genre_is",False,What are the shortest duration and lowest rating of songs grouped by genre and ordered by genre?,1911,"SELECT min(T1.duration) ,  min(T2.rating) ,  T2.genre_is FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id GROUP BY T2.genre_is ORDER BY T2.genre_is",music_1,"['song', 'files', 'genre']"
"SELECT song.genre_is, MIN(song.rating) FROM genre JOIN song ON genre.g_name = song.genre_is GROUP BY song.genre_is",False,"What is the shortest and most poorly rated song for each genre, ordered alphabetically by genre?",1912,"SELECT min(T1.duration) ,  min(T2.rating) ,  T2.genre_is FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id GROUP BY T2.genre_is ORDER BY T2.genre_is",music_1,"['song', 'files', 'genre']"
"SELECT song.artist_name, COUNT(DISTINCT song.languages) FROM artist JOIN song ON artist.artist_name = song.artist_name WHERE song.languages = ""English"" GROUP BY song.artist_name",False,Find the names and number of works of all artists who have at least one English songs.,1913,"SELECT T1.artist_name ,  count(*) FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.languages  =  ""english"" GROUP BY T2.artist_name HAVING count(*)  >=  1",music_1,"['artist', 'song']"
"SELECT song.artist_name, COUNT(*) FROM artist JOIN song ON artist.artist_name = song.artist_name WHERE song.languages = ""English"" GROUP BY song.artist_name",False,What are the names and number of works for all artists who have sung at least one song in English?,1914,"SELECT T1.artist_name ,  count(*) FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.languages  =  ""english"" GROUP BY T2.artist_name HAVING count(*)  >=  1",music_1,"['artist', 'song']"
"SELECT song.song_name, song.country FROM artist JOIN song ON artist.artist_name = song.artist_name WHERE song.resolution > 900",False,Find the name and country of origin for all artists who have release at least one song of resolution above 900.,1915,"SELECT T1.artist_name ,  T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.resolution  >  900 GROUP BY T2.artist_name HAVING count(*)  >=  1",music_1,"['artist', 'song']"
"SELECT song.artist_name, song.country FROM artist JOIN song ON artist.artist_name = song.artist_name WHERE song.resolution > 900",False,What is the name and country of origin for each artist who has released a song with a resolution higher than 900?,1916,"SELECT T1.artist_name ,  T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.resolution  >  900 GROUP BY T2.artist_name HAVING count(*)  >=  1",music_1,"['artist', 'song']"
"SELECT song.song_name FROM song WHERE song.rating < (SELECT MIN(song.rating) FROM song WHERE song.languages = ""English"")",False,What are the names of the songs whose rating is below the rating of all songs in English?,1917,SELECT song_name FROM song WHERE rating  <   (SELECT min(rating) FROM song WHERE languages  =  'english'),music_1,['song']
"SELECT song.song_name FROM song WHERE song.rating < (SELECT MIN(song.rating) FROM song WHERE song.languages = ""English"")",False,What are the song names for every song whose rating is less than the minimum rating for English songs?,1918,SELECT song_name FROM song WHERE rating  <   (SELECT min(rating) FROM song WHERE languages  =  'english'),music_1,['song']
SELECT song.f_id FROM song WHERE song.rating > 8,False,What is the id of every song that has a resolution higher than that of a song with a rating below 8?,1920,SELECT f_id FROM song WHERE resolution  >  (SELECT max(resolution) FROM song WHERE rating  <  8),music_1,['song']
"SELECT AVG(song.f_id) FROM genre JOIN song ON genre.g_name = song.genre_is WHERE song.genre_is = ""modern""",False,What is ids of the songs whose resolution is higher than the average resolution of songs in modern genre?,1921,"SELECT f_id FROM song WHERE resolution  >  (SELECT avg(resolution) FROM song WHERE genre_is  =  ""modern"")",music_1,"['song', 'genre']"
"SELECT AVG(song.f_id) FROM genre JOIN song ON genre.g_name = song.genre_is WHERE song.genre_is = ""modern""",False,What are the ids of all songs that have higher resolution of the average resolution in the modern genre?,1922,"SELECT f_id FROM song WHERE resolution  >  (SELECT avg(resolution) FROM song WHERE genre_is  =  ""modern"")",music_1,"['song', 'genre']"
"SELECT song.artist_name FROM song WHERE song.rating > 8 AND song.country != ""English""",False,Find the names of the artists who have produced English songs but have never received rating higher than 8.,1925,"SELECT DISTINCT artist_name FROM song WHERE languages  =  ""english"" EXCEPT SELECT DISTINCT artist_name FROM song WHERE rating  >  8",music_1,['song']
SELECT DISTINCT song.artist_name FROM song WHERE song.rating > 8,False,What are the names of the different artists that have produced a song in English but have never receieved a rating higher than 8?,1926,"SELECT DISTINCT artist_name FROM song WHERE languages  =  ""english"" EXCEPT SELECT DISTINCT artist_name FROM song WHERE rating  >  8",music_1,['song']
SELECT Physician.Name FROM Physician WHERE Physician.EmployeeID NOT IN (SELECT Appointment.Physician FROM Appointment),False,Which physicians have never taken any appointment? Find their names.,1929,SELECT name FROM physician EXCEPT SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID,hospital_1,"['physician', 'appointment']"
"SELECT Physician.Name, Affiliated_With.PrimaryAffiliation FROM Physician JOIN Affiliated_With ON Physician.EmployeeID = Affiliated_With.Physician JOIN Department ON Affiliated_With.Department = Department.DepartmentID",False,Find the names of all physicians and their primary affiliated departments' names.,1930,"SELECT T1.name ,  T3.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID  =  T2.physician JOIN department AS T3 ON T2.department  =  T3.DepartmentID WHERE T2.PrimaryAffiliation  =  1",hospital_1,"['physician', 'department', 'affiliated_with']"
"SELECT Physician.Name, Affiliated_With.PrimaryAffiliation FROM Physician JOIN Affiliated_With ON Physician.EmployeeID = Affiliated_With.Department JOIN Department ON Affiliated_With.Department = Department.DepartmentID",False,What are the name and primarily affiliated department name of each physician?,1931,"SELECT T1.name ,  T3.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID  =  T2.physician JOIN department AS T3 ON T2.department  =  T3.DepartmentID WHERE T2.PrimaryAffiliation  =  1",hospital_1,"['physician', 'department', 'affiliated_with']"
"SELECT COUNT(*) FROM Physician JOIN Prescribes ON Physician.EmployeeID = Prescribes.Physician WHERE Physician.Name = ""John Dorian""",False,How many patients' prescriptions are made by physician John Dorian?,1934,"SELECT count(T1.SSN) FROM patient AS T1 JOIN prescribes AS T2 ON T1.SSN  =  T2.patient JOIN physician AS T3 ON T2.physician  =  T3.employeeid WHERE T3.name = ""John Dorian""",hospital_1,"['physician', 'prescribes', 'patient']"
"SELECT COUNT(*) FROM Physician JOIN Prescribes ON Physician.EmployeeID = Prescribes.Physician WHERE Physician.Name = ""John Dorian""",False,Find the number of patients' prescriptions physician John Dorian made.,1935,"SELECT count(T1.SSN) FROM patient AS T1 JOIN prescribes AS T2 ON T1.SSN  =  T2.patient JOIN physician AS T3 ON T2.physician  =  T3.employeeid WHERE T3.name = ""John Dorian""",hospital_1,"['physician', 'prescribes', 'patient']"
"SELECT Physician.Name FROM Physician JOIN Prescribes ON Physician.EmployeeID = Prescribes.Physician JOIN Medication ON Prescribes.Medication = Medication.Code WHERE Medication.Name = ""Thesisin""",False,List the names of all the physicians who prescribe Thesisin as medication.,1939,"SELECT DISTINCT T1.name FROM physician AS T1 JOIN prescribes AS T2 ON T1.employeeid = T2.physician JOIN medication AS T3 ON T3.code = T2.medication WHERE T3.name  =  ""Thesisin""",hospital_1,"['physician', 'prescribes', 'medication']"
SELECT DISTINCT Patient.Name FROM Patient JOIN Undergoes ON Patient.SSN = Undergoes.Patient WHERE Undergoes.AssistingNurse = 111,False,Find the names of all patients who have an undergoing treatment and are staying in room 111.,1942,SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN patient AS T2 ON T1.patient = T2.SSN JOIN stay AS T3 ON T1.Stay  =  T3.StayID WHERE T3.room  =  111,hospital_1,"['patient', 'undergoes', 'stay']"
SELECT Nurse.Name FROM Nurse JOIN Prescribes ON Nurse.EmployeeID = Prescribes.Physician ORDER BY Prescribes.Dose DESC LIMIT 1,False,What are the names of the physician who prescribed the highest dose?,1944,SELECT T1.name FROM physician AS T1 JOIN prescribes AS T2 ON T1.employeeid = T2.physician ORDER BY T2.dose DESC LIMIT 1,hospital_1,"['physician', 'prescribes', 'nurse']"
SELECT Patient.Name FROM Patient JOIN Prescribes ON Patient.SSN = Prescribes.Patient ORDER BY Prescribes.Dose DESC LIMIT 1,False,Find the physician who prescribed the highest dose. What is his or her name?,1945,SELECT T1.name FROM physician AS T1 JOIN prescribes AS T2 ON T1.employeeid = T2.physician ORDER BY T2.dose DESC LIMIT 1,hospital_1,"['patient', 'prescribes', 'physician']"
SELECT Trained_In.Physician FROM Trained_In JOIN Procedures ON Trained_In.Physician = Procedures.Code WHERE Procedures.Cost > 5000,False,Find the physicians who are trained in a procedure that costs more than 5000.,1946,SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T3.cost  >  5000,hospital_1,"['physician', 'procedures', 'trained_in']"
SELECT Trained_In.Physician FROM Trained_In JOIN Procedures ON Trained_In.Physician = Procedures.Code WHERE Procedures.Cost > 5000,False,Which physicians are trained in procedures that are more expensive than 5000?,1947,SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T3.cost  >  5000,hospital_1,"['physician', 'procedures', 'trained_in']"
SELECT * FROM Physician,False,What is the average cost of procedures that physician John Wen was trained in?,1948,"SELECT avg(T3.cost) FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  ""John Wen""",hospital_1,"['physician', 'procedures', 'trained_in']"
"SELECT AVG(Procedures.Cost) FROM Physician JOIN Trained_In ON Physician.EmployeeID = Trained_In.Physician JOIN Procedures ON Trained_In.Physician = Procedures.Code WHERE Physician.Name = ""John Wen""",False,Compute the mean price of procedures physician John Wen was trained in.,1949,"SELECT avg(T3.cost) FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  ""John Wen""",hospital_1,"['physician', 'procedures', 'trained_in']"
"SELECT DISTINCT Procedures.Name FROM Trained_In JOIN Physician ON Trained_In.Physician = Physician.EmployeeID JOIN Procedures ON Procedures.Code = Physician.SSN WHERE Physician.Name = ""John Wen""",False,Find the names of procedures which physician John Wen was trained in.,1950,"SELECT T3.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  ""John Wen""",hospital_1,"['physician', 'procedures', 'trained_in']"
"SELECT DISTINCT Procedures.Name FROM Physician JOIN Trained_In ON Physician.EmployeeID = Trained_In.Physician JOIN Procedures ON Trained_In.Physician = Procedures.Code WHERE Physician.Name = ""John Wen""",False,What are the names of procedures physician John Wen was trained in?,1951,"SELECT T3.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  ""John Wen""",hospital_1,"['physician', 'procedures', 'trained_in']"
"SELECT Procedures.Name FROM Procedures JOIN Trained_In ON Procedures.Code = Trained_In.Treatment JOIN Physician ON Trained_In.Physician = Physician.EmployeeID WHERE Physician.Name = ""John Wen"" OR Procedures.Cost > 1000",False,Find all procedures which cost more than 1000 or which physician John Wen was trained in.,1952,"SELECT name FROM procedures WHERE cost  >  1000 UNION SELECT T3.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  ""John Wen""",hospital_1,"['physician', 'procedures', 'trained_in']"
SELECT Procedures.Name FROM Procedures WHERE Procedures.Cost > 1000 OR Procedures.Cost > 1000,False,What are the procedures that cost more than 1000 or are specialized in by physician John Wen?,1953,"SELECT name FROM procedures WHERE cost  >  1000 UNION SELECT T3.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  ""John Wen""",hospital_1,"['physician', 'procedures', 'trained_in']"
SELECT Procedures.Name FROM Procedures WHERE Procedures.Cost > 1000 AND Procedures.Cost > 1000,False,Find the names of all procedures which cost more than 1000 but which physician John Wen was not trained in?,1954,"SELECT name FROM procedures WHERE cost  >  1000 EXCEPT SELECT T3.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  ""John Wen""",hospital_1,"['physician', 'procedures', 'trained_in']"
SELECT Procedures.Name FROM Procedures WHERE Procedures.Cost < 5000 AND Procedures.Cost = 5000,False,Find the names of all procedures such that the cost is less than 5000 and physician John Wen was trained in.,1956,"SELECT name FROM procedures WHERE cost  <  5000 INTERSECT SELECT T3.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  ""John Wen""",hospital_1,"['physician', 'procedures', 'trained_in']"
"SELECT Procedures.Name FROM Procedures JOIN Trained_In ON Procedures.Code = Trained_In.Treatment JOIN Physician ON Trained_In.Physician = Physician.EmployeeID WHERE Physician.Name = ""John Wen"" AND Procedures.Cost < 5000",False,What procedures cost less than 5000 and have John Wen as a trained physician?,1957,"SELECT name FROM procedures WHERE cost  <  5000 INTERSECT SELECT T3.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  ""John Wen""",hospital_1,"['physician', 'procedures', 'trained_in']"
"SELECT Patient.Name FROM Patient WHERE Patient.SSN NOT IN (SELECT Prescribes.Patient FROM Prescribes JOIN Medication ON Prescribes.Medication = Medication.Code WHERE Medication.Name = ""Procrastin-X"")",False,What are the names of patients who are not taking the medication of Procrastin-X.,1959,SELECT name FROM patient EXCEPT SELECT T1.name FROM patient AS T1 JOIN Prescribes AS T2 ON T2.Patient  =  T1.SSN JOIN Medication AS T3 ON T2.Medication  =  T3.Code WHERE T3.name  =  'Procrastin-X',hospital_1,"['patient', 'prescribes', 'medication']"
"SELECT company.Headquarters FROM company WHERE company.Industry = ""banking"" INTERSECT SELECT company.Headquarters FROM company WHERE company.Industry = ""oil and gas""",False,Show the headquarters that have both companies in banking industry and companies in oil and gas industry.,1967,"SELECT Headquarters FROM company WHERE Industry  =  ""Banking"" INTERSECT SELECT Headquarters FROM company WHERE Industry  =  ""Oil and gas""",company_employee,['company']
"SELECT company.Name, employment.People_ID FROM employment JOIN company ON employment.Company_ID = company.Company_ID ORDER BY employment.Year_working DESC",False,Show names of companies and that of employees in descending order of number of years working for that employee.,1968,"SELECT T3.Name ,  T2.Name FROM employment AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID JOIN company AS T3 ON T1.Company_ID  =  T3.Company_ID ORDER BY T1.Year_working",company_employee,"['people', 'employment', 'company']"
SELECT company.Name FROM employment JOIN company ON employment.Company_ID = company.Company_ID WHERE company.Sales_in_Billion > 200,False,Show the names of employees that work for companies with sales bigger than 200.,1969,SELECT T2.Name FROM employment AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID JOIN company AS T3 ON T1.Company_ID  =  T3.Company_ID WHERE T3.Sales_in_Billion  >  200,company_employee,"['people', 'employment', 'company']"
"SELECT company.Name, COUNT(*) FROM employment JOIN company ON employment.Company_ID = company.Company_ID GROUP BY employment.Company_ID",False,Show the names of companies and the number of employees they have,1970,"SELECT T3.Name ,  COUNT(*) FROM employment AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID JOIN company AS T3 ON T1.Company_ID  =  T3.Company_ID GROUP BY T3.Name",company_employee,"['people', 'employment', 'company']"
"SELECT film.Studio FROM film WHERE film.Director = ""Nicholas Meyer"" AND film.Director = ""Walter Hill""",False,"Show the studios that have produced films with director ""Nicholas Meyer"" and ""Walter Hill"".",1978,"SELECT Studio FROM film WHERE Director  =  ""Nicholas Meyer"" INTERSECT SELECT Studio FROM film WHERE Director  =  ""Walter Hill""",film_rank,['film']
"SELECT Student.LName FROM Student JOIN Member_of_club ON Student.StuID = Member_of_club.ClubID JOIN Club ON Member_of_club.ClubID = Club.ClubID WHERE Club.ClubName = ""Bootup Baltimore""",False,"Find the last names of the members of the club ""Bootup Baltimore"".",1984,"SELECT t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  ""Bootup Baltimore""",club_1,"['student', 'member_of_club', 'club']"
"SELECT Club.ClubName FROM Member_of_club JOIN Club ON Member_of_club.ClubID = Club.ClubID JOIN Club ON Member_of_club.ClubID = Club.ClubID WHERE Club.ClubName = ""Bootup Baltimore""",False,"Who are the members of the club named ""Bootup Baltimore""? Give me their last names.",1985,"SELECT t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  ""Bootup Baltimore""",club_1,"['student', 'member_of_club', 'club']"
"SELECT Student.LName FROM Student JOIN Member_of_club ON Student.StuID = Member_of_club.ClubID JOIN Club ON Member_of_club.ClubID = Club.ClubID WHERE Club.ClubName = ""Hopkins Student Enterprises""",False,"Who are the members of the club named ""Hopkins Student Enterprises""? Show the last name.",1986,"SELECT t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  ""Hopkins Student Enterprises""",club_1,"['student', 'member_of_club', 'club']"
"SELECT Student.LName FROM Student JOIN Member_of_club ON Student.StuID = Member_of_club.ClubID JOIN Club ON Member_of_club.ClubID = Club.ClubID WHERE Club.ClubName = ""Hopkins Student Enterprises""",False,"Return the last name for the members of the club named ""Hopkins Student Enterprises"".",1987,"SELECT t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  ""Hopkins Student Enterprises""",club_1,"['student', 'member_of_club', 'club']"
"SELECT COUNT(*) FROM Member_of_club JOIN Club ON Member_of_club.ClubID = Club.ClubID WHERE Club.ClubName = ""Tennis club""",False,"How many members does the club ""Tennis Club"" has?",1988,"SELECT count(*) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  ""Tennis Club""",club_1,"['student', 'member_of_club', 'club']"
"SELECT COUNT(*) FROM Member_of_club JOIN Club ON Member_of_club.ClubID = Club.ClubID WHERE Club.ClubName = ""Tennis club""",False,"Count the members of the club ""Tennis Club"".",1989,"SELECT count(*) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  ""Tennis Club""",club_1,"['student', 'member_of_club', 'club']"
"SELECT Student.Fname, Student.LName FROM Member_of_club JOIN Student ON Member_of_club.ClubID = Student.StuID JOIN Club ON Member_of_club.ClubID = Club.ClubID WHERE Student.Sex = ""Bootup Baltimore"" AND Club.ClubName = ""female""",False,"Find all the female members of club ""Bootup Baltimore"". Show the first name and last name.",1996,"SELECT t3.fname ,  t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  ""Bootup Baltimore"" AND t3.sex  =  ""F""",club_1,"['student', 'member_of_club', 'club']"
"SELECT Student.Fname, Student.LName FROM Student JOIN Member_of_club ON Student.StuID = Member_of_club.StuID JOIN Club ON Member_of_club.ClubID = Club.ClubID WHERE Student.Sex = ""Bootup Baltimore"" AND Club.ClubName = ""VALUE VALUE female""",False,"Give me the first name and last name for all the female members of the club ""Bootup Baltimore"".",1997,"SELECT t3.fname ,  t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  ""Bootup Baltimore"" AND t3.sex  =  ""F""",club_1,"['student', 'member_of_club', 'club']"
"SELECT Student.Fname, Student.LName FROM Member_of_club JOIN Club ON Member_of_club.ClubID = Club.ClubID JOIN Student ON Member_of_club.StuID = Student.StuID WHERE Club.ClubName = ""Bootup Baltimore""",False,"What are the first and last name of the president of the club ""Bootup Baltimore""?",2002,"SELECT t3.fname ,  t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  ""Bootup Baltimore"" AND t2.position  =  ""President""",club_1,"['student', 'member_of_club', 'club']"
"SELECT Club.ClubName FROM Member_of_club JOIN Club ON Member_of_club.ClubID = Club.ClubID WHERE Club.ClubName = ""Bootup Baltimore""",False,"Who is the president of the club ""Bootup Baltimore""? Give me the first and last name.",2003,"SELECT t3.fname ,  t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  ""Bootup Baltimore"" AND t2.position  =  ""President""",club_1,"['student', 'member_of_club', 'club']"
"SELECT Student.Fname, Student.LName FROM Club JOIN Member_of_club ON Club.ClubID = Member_of_club.ClubID JOIN Student ON Member_of_club.StuID = Student.StuID WHERE Club.ClubName = ""Hopkins Student Enterprises"" AND Student.LName = ""CTO""",False,"Who is the ""CTO"" of club ""Hopkins Student Enterprises""? Show the first name and last name.",2004,"SELECT t3.fname ,  t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  ""Hopkins Student Enterprises"" AND t2.position  =  ""CTO""",club_1,"['student', 'member_of_club', 'club']"
"SELECT Student.Fname, Student.LName FROM Club JOIN Student ON Club.ClubID = Student.StuID WHERE Club.ClubName = ""Hopkins Student Enterprises"" AND Club.ClubName = ""CTO""",False,"Find the first name and last name for the ""CTO"" of the club ""Hopkins Student Enterprises""?",2005,"SELECT t3.fname ,  t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  ""Hopkins Student Enterprises"" AND t2.position  =  ""CTO""",club_1,"['student', 'member_of_club', 'club']"
"SELECT COUNT(*) FROM Member_of_club JOIN Club ON Member_of_club.ClubID = Club.ClubID WHERE Club.ClubName = ""Bootup Baltimore"" AND Club.ClubName > 18",False,"Count the number of members in club ""Bootup Baltimore"" whose age is above 18.",2007,"SELECT count(*) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  ""Bootup Baltimore"" AND t3.age  >  18",club_1,"['student', 'member_of_club', 'club']"
"SELECT COUNT(*) FROM Member_of_club JOIN Club ON Member_of_club.ClubID = Club.ClubID WHERE Club.ClubName = ""Bootup Baltimore"" AND Club.ClubName < 18",False,"Count the number of members in club ""Bootup Baltimore"" whose age is below 18.",2009,"SELECT count(*) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  ""Bootup Baltimore"" AND t3.age  <  18",club_1,"['student', 'member_of_club', 'club']"
"SELECT COUNT(*) FROM Student JOIN Member_of_club ON Student.StuID = Member_of_club.StuID JOIN Club ON Club.ClubID = Member_of_club.ClubID WHERE Student.Fname = ""Eric"" AND Student.LName = ""Tai""",False,"How many clubs does the student named ""Eric Tai"" belong to?",2014,"SELECT count(DISTINCT t1.clubname) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.fname  =  ""Eric"" AND t3.lname  =  ""Tai""",club_1,"['student', 'member_of_club', 'club']"
"SELECT COUNT(*) FROM Student JOIN Member_of_club ON Student.StuID = Member_of_club.StuID JOIN Club ON Member_of_club.ClubID = Club.ClubID WHERE Student.Fname = ""Eric"" AND Student.LName = ""Tai""",False,"Count the number of clubs for which the student named ""Eric Tai"" is a member.",2015,"SELECT count(DISTINCT t1.clubname) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.fname  =  ""Eric"" AND t3.lname  =  ""Tai""",club_1,"['student', 'member_of_club', 'club']"
SELECT COUNT(*) FROM Club JOIN Member_of_club ON Club.ClubID = Member_of_club.ClubID JOIN Student ON Club.ClubID = Student.Advisor WHERE Student.Advisor = 1121,False,"Which clubs have one or more members whose advisor is ""1121""?",2019,SELECT DISTINCT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.advisor  =  1121,club_1,"['student', 'member_of_club', 'club']"
"SELECT AVG(Student.Age) FROM Member_of_club JOIN Student ON Member_of_club.StuID = Student.StuID JOIN Club ON Member_of_club.ClubID = Club.ClubID WHERE Club.ClubName = ""Tennis club""",False,"Retrieve the average age of members of the club ""Tennis Club"".",2024,"SELECT avg(t3.age) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  ""Tennis Club""",club_1,"['student', 'member_of_club', 'club']"
"SELECT AVG(Student.Age) FROM Member_of_club JOIN Student ON Member_of_club.StuID = Student.StuID JOIN Club ON Member_of_club.ClubID = Club.ClubID WHERE Club.ClubName = ""Tennis club""",False,"Compute the average age of the members in the club ""Tennis Club"".",2025,"SELECT avg(t3.age) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  ""Tennis Club""",club_1,"['student', 'member_of_club', 'club']"
"SELECT SUM(Grants.grant_amount) FROM Grants JOIN Organisations ON Grants.organisation_id = Organisations.organisation_id WHERE Organisations.organisation_details = ""research""",False,What is the total grant amount of the organisations described as research?,2026,SELECT sum(grant_amount) FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id  =  T2.organisation_id JOIN organisation_Types AS T3 ON T2.organisation_type  =  T3.organisation_type WHERE T3.organisation_type_description  =  'Research',tracking_grants_for_research,"['organisations', 'organisation_types', 'grants']"
SELECT SUM(Grants.grant_amount) FROM Grants,False,What is the total amount of grant money for research?,2027,SELECT sum(grant_amount) FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id  =  T2.organisation_id JOIN organisation_Types AS T3 ON T2.organisation_type  =  T3.organisation_type WHERE T3.organisation_type_description  =  'Research',tracking_grants_for_research,"['organisations', 'organisation_types', 'grants']"
SELECT Projects.project_details FROM Projects WHERE Projects.project_id NOT IN (SELECT Project_Staff.project_id FROM Project_Staff),False,List the project details of the projects which did not hire any staff for a researcher role.,2028,SELECT project_details FROM Projects WHERE project_id NOT IN ( SELECT project_id FROM Project_Staff WHERE role_code  =  'researcher' ),tracking_grants_for_research,"['project_staff', 'projects']"
SELECT Projects.project_details FROM Projects WHERE Projects.project_id NOT IN (SELECT Project_Staff.project_id FROM Project_Staff),False,What are the details for all projects that did not hire any staff in a research role?,2029,SELECT project_details FROM Projects WHERE project_id NOT IN ( SELECT project_id FROM Project_Staff WHERE role_code  =  'researcher' ),tracking_grants_for_research,"['project_staff', 'projects']"
"SELECT Project_Staff.project_id, COUNT(*) FROM Project_Staff GROUP BY Project_Staff.project_id ORDER BY Project_Staff.project_id",False,How many staff does each project has? List the project id and the number in an ascending order.,2030,"SELECT T1.project_id ,  count(*) FROM Project_Staff AS T1 JOIN Projects AS T2 ON T1.project_id  =  T2.project_id GROUP BY T1.project_id ORDER BY count(*) ASC",tracking_grants_for_research,"['project_staff', 'projects']"
"SELECT Project_Staff.project_id, COUNT(*) FROM Project_Staff GROUP BY Project_Staff.project_id ORDER BY Project_Staff.project_id",False,"For each project id, how many staff does it have? List them in increasing order.",2031,"SELECT T1.project_id ,  count(*) FROM Project_Staff AS T1 JOIN Projects AS T2 ON T1.project_id  =  T2.project_id GROUP BY T1.project_id ORDER BY count(*) ASC",tracking_grants_for_research,"['project_staff', 'projects']"
"SELECT Documents.grant_id, COUNT(*) FROM Documents GROUP BY Documents.grant_id",False,How many documents can one grant have at most? List the grant id and number.,2034,"SELECT grant_id ,  count(*) FROM Documents GROUP BY grant_id ORDER BY count(*) DESC LIMIT 1",tracking_grants_for_research,['documents']
"SELECT Organisations.organisation_details FROM Organisations WHERE Organisations.organisation_details = ""Sponsor %"" ORDER BY Organisations.organisation_details ASC",False,What are all the details of the organisations described as 'Sponsor'? Sort the result in an ascending order.,2036,SELECT organisation_details FROM Organisations AS T1 JOIN organisation_Types AS T2 ON T1.organisation_type  =  T2.organisation_type WHERE T2.organisation_type_description  =  'Sponsor' ORDER BY organisation_details,tracking_grants_for_research,"['organisations', 'organisation_types']"
SELECT Organisations.organisation_details FROM Organisations JOIN Project_Outcomes ON Organisations.organisation_id = Project_Outcomes.outcome_code ORDER BY Project_Outcomes.outcome_details ASC,False,What are the details of all organizations that are described as Sponsors and sort the results in ascending order?,2037,SELECT organisation_details FROM Organisations AS T1 JOIN organisation_Types AS T2 ON T1.organisation_type  =  T2.organisation_type WHERE T2.organisation_type_description  =  'Sponsor' ORDER BY organisation_details,tracking_grants_for_research,"['organisations', 'organisation_types', 'project_outcomes']"
"SELECT Project_Outcomes.outcome_details FROM Projects JOIN Project_Outcomes ON Projects.project_id = Project_Outcomes.project_id WHERE Projects.project_details = ""sint""",False,What are the result description of the project whose detail is 'sint'?,2038,SELECT T1.outcome_description FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code  =  T2.outcome_code JOIN Projects AS T3 ON T2.project_id  =  T3.project_id WHERE T3.project_details  =  'sint',tracking_grants_for_research,"['research_outcomes', 'project_outcomes', 'projects']"
"SELECT Research_Outcomes.outcome_description FROM Research_Outcomes JOIN Project_Outcomes ON Research_Outcomes.outcome_code = Project_Outcomes.project_id JOIN Projects ON Project_Outcomes.project_id = Projects.project_id WHERE Projects.project_details = ""sint""",False,What is the description for the results whose project detail is 'sint'?,2039,SELECT T1.outcome_description FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code  =  T2.outcome_code JOIN Projects AS T3 ON T2.project_id  =  T3.project_id WHERE T3.project_details  =  'sint',tracking_grants_for_research,"['research_outcomes', 'project_outcomes', 'projects']"
SELECT Projects.project_details FROM Organisations JOIN Projects ON Organisations.organisation_id = Projects.organisation_id,False,List the project details of the projects launched by the organisation,2040,SELECT project_details FROM Projects WHERE organisation_id IN ( SELECT organisation_id FROM Projects GROUP BY organisation_id ORDER BY count(*) DESC LIMIT 1 ),tracking_grants_for_research,"['organisations', 'projects']"
SELECT Projects.project_details FROM Projects GROUP BY Projects.organisation_id ORDER BY COUNT(*) DESC LIMIT 1,False,What are the details for the projects which were launched by the organization with the most projects?,2041,SELECT project_details FROM Projects WHERE organisation_id IN ( SELECT organisation_id FROM Projects GROUP BY organisation_id ORDER BY count(*) DESC LIMIT 1 ),tracking_grants_for_research,['projects']
"SELECT COUNT(*) FROM Person WHERE Person.age > (SELECT MAX(Person.age) FROM Person WHERE Person.job = ""VALUE"")",False,Find the number of people whose age is greater than all engineers.,2046,SELECT count(*) FROM Person WHERE age  >  (SELECT max(age) FROM person WHERE job  =  'engineer'),network_2,['person']
SELECT COUNT(*) FROM Person WHERE Person.age > (SELECT MIN(Person.age) FROM Person),False,How many people are older than every engineer?,2047,SELECT count(*) FROM Person WHERE age  >  (SELECT max(age) FROM person WHERE job  =  'engineer'),network_2,['person']
"SELECT Person.name, Person.age FROM PersonFriend JOIN Person ON Person.name = PersonFriend.name WHERE PersonFriend.friend = ""Dan"" OR PersonFriend.friend = ""Alice""",False,Find the name and age of the person who is a friend of Dan or Alice.,2048,"SELECT DISTINCT T1.name ,  T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend  =  'Dan' OR T2.friend  =  'Alice'",network_2,"['personfriend', 'person']"
"SELECT DISTINCT PersonFriend.name, Person.age FROM PersonFriend JOIN Person ON Person.name = PersonFriend.friend WHERE PersonFriend.friend = ""Dan"" OR PersonFriend.friend = ""alice""",False,What are the different names and ages of every friend of either Dan or alice?,2049,"SELECT DISTINCT T1.name ,  T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend  =  'Dan' OR T2.friend  =  'Alice'",network_2,"['personfriend', 'person']"
SELECT Person.name FROM Person EXCEPT SELECT PersonFriend.name FROM PersonFriend,False,Find the name of the person who has no student friends.,2050,SELECT name FROM person EXCEPT SELECT T2.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T1.job  =  'student',network_2,"['personfriend', 'person']"
SELECT Person.name FROM Person WHERE Person.name NOT IN (SELECT PersonFriend.name FROM PersonFriend),False,What are the names of the people who have no friends who are students?,2051,SELECT name FROM person EXCEPT SELECT T2.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T1.job  =  'student',network_2,"['personfriend', 'person']"
SELECT Department.DName FROM Department WHERE Department.DNO NOT IN (SELECT Minor_in.DNO FROM Minor_in),False,Find the name of the department that has no students minored in?,2057,SELECT DName FROM DEPARTMENT EXCEPT SELECT T1.DName FROM DEPARTMENT AS T1 JOIN MINOR_IN AS T2 ON T1.DNO  =  T2.DNO,college_3,"['department', 'minor_in']"
SELECT Department.DName FROM Department WHERE Department.DNO NOT IN (SELECT Minor_in.DNO FROM Minor_in),False,What is the name of the department htat has no students minoring in it?,2058,SELECT DName FROM DEPARTMENT EXCEPT SELECT T1.DName FROM DEPARTMENT AS T1 JOIN MINOR_IN AS T2 ON T1.DNO  =  T2.DNO,college_3,"['department', 'minor_in']"
SELECT Faculty.Rank FROM Faculty GROUP BY Faculty.Rank ORDER BY COUNT(*) DESC LIMIT 1,False,Find the rank of the faculty that the fewest faculties belong to.,2059,SELECT Rank FROM FACULTY GROUP BY Rank ORDER BY count(*) ASC LIMIT 1,college_3,['faculty']
"SELECT Faculty.Lname FROM Faculty JOIN Member_of ON Faculty.FacID = Member_of.FacID JOIN Department ON Member_of.DNO = Department.DNO WHERE Department.DName = ""VALUE""",False,Find the last names of faculties who are members of computer science department.,2063,"SELECT T2.Lname FROM DEPARTMENT AS T1 JOIN FACULTY AS T2 ON T1.DNO  =  T3.DNO JOIN MEMBER_OF AS T3 ON T2.FacID  =  T3.FacID WHERE T1.DName  =  ""Computer Science""",college_3,"['member_of', 'department', 'faculty']"
"SELECT Faculty.Lname FROM Faculty JOIN Member_of ON Faculty.FacID = Member_of.FacID JOIN Department ON Member_of.DNO = Department.DNO WHERE Department.DName = ""VALUE""",False,What are the last names of faculty who are part of the computer science department?,2064,"SELECT T2.Lname FROM DEPARTMENT AS T1 JOIN FACULTY AS T2 ON T1.DNO  =  T3.DNO JOIN MEMBER_OF AS T3 ON T2.FacID  =  T3.FacID WHERE T1.DName  =  ""Computer Science""",college_3,"['member_of', 'department', 'faculty']"
"SELECT AVG(Gradeconversion.gradepoint) FROM Student JOIN Gradeconversion ON Student.StuID = Gradeconversion.lettergrade WHERE Student.LName = ""Smith""",False,Find the average grade point of student whose last name is Smith.,2065,"SELECT avg(T2.gradepoint) FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade  =  T2.lettergrade AND T1.StuID  =  T3.StuID WHERE T3.LName  =  ""Smith""",college_3,"['student', 'gradeconversion', 'enrolled_in']"
SELECT * FROM Student,False,What is the average gradepoint for students with the last name Smith?,2066,"SELECT avg(T2.gradepoint) FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade  =  T2.lettergrade AND T1.StuID  =  T3.StuID WHERE T3.LName  =  ""Smith""",college_3,"['student', 'gradeconversion', 'enrolled_in']"
"SELECT ""max"", MIN(Student.Age) FROM Student WHERE Student.city_code = ""NYC""",False,What is the maximum and minimum grade point of students who live in NYC?,2067,"SELECT max(T2.gradepoint) ,  min(T2.gradepoint) FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade  =  T2.lettergrade AND T1.StuID  =  T3.StuID WHERE T3.city_code  =  ""NYC""",college_3,"['student', 'gradeconversion', 'enrolled_in']"
"SELECT MAX(DISTINCT (""minimum"" - Student.city_code)) FROM Student WHERE Student.city_code = ""NYC""",False,Give the maximum and minimum gradepoints for students living in NYC?,2068,"SELECT max(T2.gradepoint) ,  min(T2.gradepoint) FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade  =  T2.lettergrade AND T1.StuID  =  T3.StuID WHERE T3.city_code  =  ""NYC""",college_3,"['student', 'gradeconversion', 'enrolled_in']"
SELECT Course.CName FROM Course WHERE Course.Hours = 3 OR Course.Hours = 4,False,Find the names of courses that have either 3 credits or 1 credit but 4 hours.,2069,SELECT CName FROM COURSE WHERE Credits  =  3 UNION SELECT CName FROM COURSE WHERE Credits  =  1 AND Hours  =  4,college_3,['course']
SELECT Course.CName FROM Course WHERE Course.CID = 3 OR Course.Credits = 4,False,"What are the names of courses that give either 3 credits, or 1 credit and 4 hours?",2070,SELECT CName FROM COURSE WHERE Credits  =  3 UNION SELECT CName FROM COURSE WHERE Credits  =  1 AND Hours  =  4,college_3,['course']
"SELECT Department.DName FROM Department WHERE Department.Division = ""division VALUE"" OR Department.Building = ""NEB""",False,Find the names of departments that are either in division AS or in division EN and in Building NEB.,2071,"SELECT DName FROM DEPARTMENT WHERE Division  =  ""AS"" UNION SELECT DName FROM DEPARTMENT WHERE Division  =  ""EN"" AND Building  =  ""NEB""",college_3,['department']
"SELECT Department.DName FROM Department WHERE Department.Division = as OR Department.Building = ""NEB""",False,"What are the names of departments either in division AS, or in division EN and in building NEB?",2072,"SELECT DName FROM DEPARTMENT WHERE Division  =  ""AS"" UNION SELECT DName FROM DEPARTMENT WHERE Division  =  ""EN"" AND Building  =  ""NEB""",college_3,['department']
SELECT airport.Airport_Name FROM airport JOIN airport_aircraft ON airport_aircraft.Airport_ID = airport.Airport_ID WHERE airport.Total_Passengers > (SELECT SUM(airport.Total_Passengers) FROM airport WHERE airport.Airport_ID = airport.International_Passengers) AND 10000000,False,Please show the names and descriptions of aircrafts associated with airports that have a total number of passengers bigger than 10000000.,2077,"SELECT T1.Aircraft ,  T1.Description FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID  =  T3.Airport_ID WHERE T3.Total_Passengers  >  10000000",aircraft,"['airport_aircraft', 'aircraft', 'airport']"
"SELECT AVG(airport.Total_Passengers) FROM airport JOIN airport_aircraft ON airport.Airport_ID = airport_aircraft.Aircraft_ID JOIN aircraft ON aircraft.Aircraft_ID = airport_aircraft.Aircraft_ID WHERE aircraft.Aircraft = ""Robinson R-22""",False,"What is the average total number of passengers of airports that are associated with aircraft ""Robinson R-22""?",2079,"SELECT avg(T3.Total_Passengers) FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID  =  T3.Airport_ID WHERE T1.Aircraft  =  ""Robinson R-22""",aircraft,"['airport_aircraft', 'aircraft', 'airport']"
SELECT pilot.Name FROM pilot WHERE pilot.Pilot_Id NOT IN (SELECT match.Winning_Aircraft FROM match),False,What are the names of all aicrafts that have never won any match?,2082,SELECT Aircraft FROM aircraft WHERE Aircraft_ID NOT IN (SELECT Winning_Aircraft FROM MATCH),aircraft,"['pilot', 'aircraft', 'match']"
"SELECT College.state FROM College JOIN Player ON College.cName = Player.pID WHERE Player.pName = ""Charles""",False,Find the state of the college which player Charles is attending.,2089,SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName JOIN player AS T3 ON T2.pID  =  T3.pID WHERE T3.pName  =  'Charles',soccer_2,"['tryout', 'college', 'player']"
"SELECT College.state FROM College WHERE College.cName = ""Charles""",False,In which state is the college that Charles attends?,2090,SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName JOIN player AS T3 ON T2.pID  =  T3.pID WHERE T3.pName  =  'Charles',soccer_2,"['tryout', 'college', 'player']"
"SELECT MAX(Player.HS), ""What"" FROM Player WHERE Player.HS > 1000 GROUP BY ""maximum""",False,What is the maximum training hours for the students whose training hours is greater than 1000 in different positions?,2091,"SELECT max(T1.HS) ,  pPos FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T1.HS  >  1000 GROUP BY T2.pPos",soccer_2,"['tryout', 'player']"
"SELECT MAX(Player.HS), 1000 FROM Player WHERE Player.HS > 1000 GROUP BY ""maximum""",False,"For each position, what is the maximum number of  hours for students who spent more than 1000 hours training?",2092,"SELECT max(T1.HS) ,  pPos FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T1.HS  >  1000 GROUP BY T2.pPos",soccer_2,"['tryout', 'player']"
"SELECT Tryout.cName FROM Tryout JOIN Player ON Tryout.cName = Player.pID WHERE Player.pName LIKE ""% D %""",False,Which colleges do the tryout players whose name starts with letter D go to?,2093,SELECT T1.cName FROM  tryout AS T1 JOIN player AS T2 ON T1.pID  =  T2.pID WHERE T2.pName LIKE 'D%',soccer_2,"['tryout', 'player']"
"SELECT Tryout.cName FROM Player JOIN Tryout ON Player.pID = Tryout.pID WHERE Player.pName LIKE ""% D %""",False,Which colleges does each player with a name that starts with the letter D  who tried out go to?,2094,SELECT T1.cName FROM  tryout AS T1 JOIN player AS T2 ON T1.pID  =  T2.pID WHERE T2.pName LIKE 'D%',soccer_2,"['tryout', 'player']"
"SELECT DISTINCT College.cName FROM College JOIN Tryout ON College.cName = Tryout.cName WHERE Tryout.pPos = ""goalie"" OR Tryout.pPos = ""mid""",False,Find the names of schools that have some students playing in goalie and mid positions.,2095,SELECT cName FROM  tryout WHERE pPos  =  'goalie' INTERSECT SELECT cName FROM  tryout WHERE pPos  =  'mid',soccer_2,"['tryout', 'college']"
"SELECT DISTINCT College.cName FROM Tryout JOIN College ON Tryout.cName = College.cName WHERE Tryout.pPos = ""goal"" OR Tryout.pPos = ""mid""",False,What are the names of all schools that have students trying out for the position of goal and 'mid'-field.,2096,SELECT cName FROM  tryout WHERE pPos  =  'goalie' INTERSECT SELECT cName FROM  tryout WHERE pPos  =  'mid',soccer_2,"['tryout', 'college']"
"SELECT College.cName FROM College WHERE College.cName NOT IN (SELECT Tryout.cName FROM Tryout WHERE Tryout.pPos = ""mid"" AND ""goalie"")",False,Find the names of schools that have some players in the mid position but not in the goalie position.,2097,SELECT cName FROM  tryout WHERE pPos  =  'mid' EXCEPT SELECT cName FROM  tryout WHERE pPos  =  'goalie',soccer_2,"['tryout', 'college']"
"SELECT Tryout.cName FROM Tryout WHERE Tryout.pPos = ""mid"" EXCEPT SELECT Tryout.cName FROM Tryout WHERE Tryout.pPos = ""mid""",False,What are the names of the schools with some players in the mid position but no goalies?,2098,SELECT cName FROM  tryout WHERE pPos  =  'mid' EXCEPT SELECT cName FROM  tryout WHERE pPos  =  'goalie',soccer_2,['tryout']
SELECT College.state FROM College WHERE College.enr < (SELECT MIN(College.enr) FROM College),False,What are the states with colleges that have enrollments less than the some other college?,2100,SELECT DISTINCT state FROM college WHERE enr  <  (SELECT max(enr) FROM college),soccer_2,['college']
"SELECT College.cName FROM College WHERE College.enr > (SELECT MIN(College.enr) FROM College WHERE College.state = ""Florida"")",False,What are the names of the colleges that are larger than at least one college in Florida?,2102,SELECT DISTINCT cName FROM college WHERE enr  >  (SELECT min(enr) FROM college WHERE state  =  'FL'),soccer_2,['college']
"SELECT College.cName FROM College WHERE College.enr > (SELECT MAX(College.enr) FROM College WHERE College.state = ""Florida"")",False,What are the names of all colleges with a larger enrollment than the largest college in Florida?,2104,SELECT cName FROM college WHERE enr  >  (SELECT max(enr) FROM college WHERE state  =  'FL'),soccer_2,['college']
SELECT shop.Location FROM shop WHERE shop.Open_Date > 2012 INTERSECT SELECT shop.Location FROM shop WHERE shop.Open_Date < 2008,False,Show the locations shared by shops with open year later than 2012 and shops with open year before 2008.,2113,SELECT LOCATION FROM shop WHERE Open_Year  >  2012 INTERSECT SELECT LOCATION FROM shop WHERE Open_Year  <  2008,device,['shop']
SELECT shop.Location FROM shop WHERE shop.Open_Date > 2012 INTERSECT SELECT shop.Location FROM shop WHERE shop.Open_Date < 2008,False,Which locations contains both shops that opened after the year 2012 and shops that opened before 2008?,2114,SELECT LOCATION FROM shop WHERE Open_Year  >  2012 INTERSECT SELECT LOCATION FROM shop WHERE Open_Year  <  2008,device,['shop']
SELECT COUNT(*) FROM member WHERE member.Level > (SELECT AVG(member.Level) FROM member),False,How many branches where have more than average number of memberships are there?,2119,SELECT count(*) FROM branch WHERE membership_amount  >  (SELECT avg(membership_amount) FROM branch),shop_membership,"['branch', 'member']"
SELECT COUNT(*) FROM branch JOIN membership_register_branch ON branch.Branch_ID = membership_register_branch.Branch_ID WHERE branch.membership_amount > 0,False,What is the number of branches that have more than the average number of memberships?,2120,SELECT count(*) FROM branch WHERE membership_amount  >  (SELECT avg(membership_amount) FROM branch),shop_membership,"['branch', 'membership_register_branch']"
"SELECT branch.Name, COUNT(*) FROM branch JOIN membership_register_branch ON branch.Branch_ID = membership_register_branch.Branch_ID WHERE membership_register_branch.Register_Year > 2015 GROUP BY branch.Name",False,Show all branch names with the number of members in each branch registered after 2015.,2127,"SELECT T2.name ,  count(*) FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id  =  T2.branch_id WHERE T1.register_year  >  2015 GROUP BY T2.branch_id",shop_membership,"['branch', 'membership_register_branch']"
SELECT branch.Name FROM branch JOIN membership_register_branch ON branch.Branch_ID = membership_register_branch.Branch_ID WHERE branch.Open_year > 2015,False,"For each branch id, what are the names of the branches that were registered after 2015?",2128,"SELECT T2.name ,  count(*) FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id  =  T2.branch_id WHERE T1.register_year  >  2015 GROUP BY T2.branch_id",shop_membership,"['branch', 'membership_register_branch']"
"SELECT Dorm.dorm_name, AVG(Student.Age) FROM Student JOIN Lives_in ON Student.StuID = Lives_in.stuid JOIN Dorm ON Lives_in.dormid = Dorm.dormid GROUP BY Dorm.dormid",False,Find the average age of students living in each dorm and the name of dorm.,2139,"SELECT avg(T1.age) ,  T3.dorm_name FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid GROUP BY T3.dorm_name",dorm_1,"['student', 'lives_in', 'dorm']"
SELECT * FROM Student,False,What is the average age for each dorm and what are the names of each dorm?,2140,"SELECT avg(T1.age) ,  T3.dorm_name FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid GROUP BY T3.dorm_name",dorm_1,"['student', 'lives_in', 'dorm']"
"SELECT COUNT(*), Dorm.dormid FROM Dorm WHERE Dorm.student_capacity > 100 GROUP BY Dorm.dormid",False,Find the number of amenities for each of the dorms that can accommodate more than 100 students.,2141,"SELECT count(*) ,  T1.dormid FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid WHERE T1.student_capacity  >  100 GROUP BY T1.dormid",dorm_1,"['has_amenity', 'dorm']"
"SELECT COUNT(*), Dorm.dormid FROM Dorm GROUP BY Dorm.dormid",False,"For each dorm, how many amenities does it have?",2142,"SELECT count(*) ,  T1.dormid FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid WHERE T1.student_capacity  >  100 GROUP BY T1.dormid",dorm_1,"['has_amenity', 'dorm']"
"SELECT Student.Fname FROM Student JOIN Lives_in ON Student.StuID = Lives_in.stuid JOIN Dorm ON Lives_in.dormid = Dorm.dormid WHERE Dorm.dorm_name = ""Smith""",False,Find the first name of students who are living in the Smith Hall.,2143,SELECT T1.fname FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid WHERE T3.dorm_name  =  'Smith Hall',dorm_1,"['student', 'lives_in', 'dorm']"
"SELECT Student.Fname FROM Student WHERE Student.LName = ""Smith Hall""",False,What are the first names of all students in Smith Hall?,2144,SELECT T1.fname FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid WHERE T3.dorm_name  =  'Smith Hall',dorm_1,"['student', 'lives_in', 'dorm']"
"SELECT COUNT(*) FROM Student WHERE Student.Sex = ""M""",False,Find the total number of students living in the male dorm (with gender M).,2145,SELECT count(*) FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid WHERE T3.gender  =  'M',dorm_1,"['student', 'lives_in', 'dorm']"
"SELECT COUNT(*) FROM Student JOIN Lives_in ON Student.StuID = Lives_in.stuid JOIN Dorm ON Lives_in.dormid = Dorm.dormid WHERE Student.Sex = ""VALUE""",False,What are the total number of students who are living in a male dorm?,2146,SELECT count(*) FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid WHERE T3.gender  =  'M',dorm_1,"['student', 'lives_in', 'dorm']"
"SELECT COUNT(*) FROM Student WHERE Student.Sex = ""F"" AND Student.LName = ""Smith Hall""",False,Find the number of female students (with F sex) living in Smith Hall,2147,SELECT count(*) FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid WHERE T3.dorm_name  =  'Smith Hall' AND T1.sex  =  'F',dorm_1,"['student', 'lives_in', 'dorm']"
"SELECT COUNT(*) FROM Student WHERE Student.Sex = ""VALUE"" AND Student.LName = ""Smith Hall""",False,How many female students live in Smith Hall?,2148,SELECT count(*) FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid WHERE T3.dorm_name  =  'Smith Hall' AND T1.sex  =  'F',dorm_1,"['student', 'lives_in', 'dorm']"
"SELECT Dorm.dorm_name FROM Dorm WHERE Dorm.dormid = ""Smith Hall""",False,Find the name of amenities Smith Hall dorm have.,2149,SELECT T3.amenity_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid WHERE T1.dorm_name  =  'Smith Hall',dorm_1,"['dorm_amenity', 'has_amenity', 'dorm']"
"SELECT Dorm.dorm_name FROM Dorm JOIN Has_amenity ON Dorm.dormid = Has_amenity.dormid JOIN Dorm_amenity ON Dorm_amenity.amenid = Dorm.dormid WHERE Dorm.dorm_name = ""Smith Hall""",False,What are the names of the amenities that Smith Hall has?,2150,SELECT T3.amenity_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid WHERE T1.dorm_name  =  'Smith Hall',dorm_1,"['dorm_amenity', 'has_amenity', 'dorm']"
"SELECT Dorm.dorm_name FROM Dorm EXCEPT SELECT Dorm.dorm_name FROM Dorm JOIN Dorm_amenity ON Dorm.dormid = Dorm_amenity.amenid WHERE Dorm_amenity.amenity_name = ""TV""",False,What are the names of the dorm that does not have a TV Lounge?,2152,SELECT dorm_name FROM dorm EXCEPT SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid WHERE T3.amenity_name  =  'TV Lounge',dorm_1,"['dorm_amenity', 'has_amenity', 'dorm']"
SELECT Customers.state FROM Customers GROUP BY Customers.state ORDER BY COUNT(*) DESC LIMIT 1,False,Which state has the most customers?,2163,SELECT state FROM customers GROUP BY state ORDER BY count(*) LIMIT 1,customer_complaints,['customers']
SELECT Customers.state FROM Customers GROUP BY Customers.state ORDER BY COUNT(*) DESC LIMIT 1,False,Give the state that has the most customers.,2164,SELECT state FROM customers GROUP BY state ORDER BY count(*) LIMIT 1,customer_complaints,['customers']
SELECT Video_Games.GType FROM Video_Games GROUP BY Video_Games.GType ORDER BY COUNT(*) DESC LIMIT 1,False,What is the type with the fewest games?,2168,SELECT gtype FROM Video_games GROUP BY gtype ORDER BY count(*) LIMIT 1,game_1,['video_games']
SELECT Student.StuID FROM Student EXCEPT SELECT Plays_Games.StuID FROM Plays_Games,False,What are the ids of all students who don't play sports?,2170,SELECT StuID FROM Student EXCEPT SELECT StuID FROM Sportsinfo,game_1,"['student', 'sportsinfo', 'plays_games']"
SELECT Student.StuID FROM Student WHERE Student.Major = 600,False,Show student ids who are on scholarship and have major 600.,2171,SELECT StuID FROM Student WHERE major  =  600 INTERSECT SELECT StuID FROM Sportsinfo WHERE onscholarship  =  'Y',game_1,"['student', 'sportsinfo']"
SELECT Student.StuID FROM Student WHERE Student.Major = 600,False,What are the student ids for those on scholarship in major number 600?,2172,SELECT StuID FROM Student WHERE major  =  600 INTERSECT SELECT StuID FROM Sportsinfo WHERE onscholarship  =  'Y',game_1,"['student', 'sportsinfo']"
"SELECT Student.StuID FROM Student JOIN Plays_Games ON Student.StuID = Plays_Games.StuID JOIN SportsInfo ON Plays_Games.GameID = SportsInfo.SportName WHERE Student.Sex = ""VALUE"" AND SportsInfo.SportName = ""football""",False,Show student ids who are female and play football.,2173,"SELECT StuID FROM Student WHERE sex  =  'F' INTERSECT SELECT StuID FROM Sportsinfo WHERE sportname  =  ""Football""",game_1,"['student', 'sportsinfo', 'plays_games']"
"SELECT DISTINCT Student.StuID FROM Student JOIN Plays_Games ON Student.StuID = Plays_Games.StuID JOIN SportsInfo ON Plays_Games.GameID = SportsInfo.SportName WHERE Student.Sex = ""VALUE"" AND SportsInfo.SportName = ""football""",False,What are the ids of all female students who play football?,2174,"SELECT StuID FROM Student WHERE sex  =  'F' INTERSECT SELECT StuID FROM Sportsinfo WHERE sportname  =  ""Football""",game_1,"['student', 'sportsinfo', 'plays_games']"
SELECT * FROM Student,False,Show all male student ids who don't play football.,2175,"SELECT StuID FROM Student WHERE sex  =  'M' EXCEPT SELECT StuID FROM Sportsinfo WHERE sportname  =  ""Football""",game_1,"['student', 'sportsinfo']"
SELECT * FROM Student,False,What are the ids of all male students who do not play football?,2176,"SELECT StuID FROM Student WHERE sex  =  'M' EXCEPT SELECT StuID FROM Sportsinfo WHERE sportname  =  ""Football""",game_1,"['student', 'sportsinfo']"
"SELECT SUM(SportsInfo.HoursPerWeek), AVG(Student.LName) FROM Student JOIN SportsInfo ON Student.StuID = SportsInfo.StuID WHERE Student.Fname = ""David"" AND Student.LName = ""Shieber""",False,Show total hours per week and number of games played for student David Shieber.,2177,"SELECT sum(hoursperweek) ,  sum(gamesplayed) FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID WHERE T2.Fname  =  ""David"" AND T2.Lname  =  ""Shieber""",game_1,"['student', 'sportsinfo']"
"SELECT SUM(Plays_Games.Hours_Played), AVG(Student.LName) FROM Student JOIN Plays_Games ON Student.StuID = Plays_Games.StuID WHERE Student.Fname = ""David"" AND Student.LName = ""Shieber""",False,What is the total number of hours per work and number of games played by David Shieber?,2178,"SELECT sum(hoursperweek) ,  sum(gamesplayed) FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID WHERE T2.Fname  =  ""David"" AND T2.Lname  =  ""Shieber""",game_1,"['student', 'sportsinfo', 'plays_games']"
"SELECT Plays_Games.StuID FROM Plays_Games WHERE Plays_Games.GameID = ""video"" INTERSECT SELECT Plays_Games.StuID FROM Plays_Games",False,Show ids of students who play video game and play sports.,2181,SELECT StuID FROM Sportsinfo INTERSECT SELECT StuID FROM Plays_games,game_1,"['plays_games', 'sportsinfo']"
SELECT Plays_Games.StuID FROM Plays_Games WHERE Plays_Games.StuID = (SELECT MAX(Plays_Games.StuID) FROM Plays_Games),False,What are the ids of all students who played video games and sports?,2182,SELECT StuID FROM Sportsinfo INTERSECT SELECT StuID FROM Plays_games,game_1,"['plays_games', 'sportsinfo']"
"SELECT Student.LName, Student.Fname FROM Student JOIN Plays_Games ON Student.StuID = Plays_Games.StuID JOIN SportsInfo ON Plays_Games.GameID = SportsInfo.StuID WHERE SportsInfo.SportName = ""Football"" OR SportsInfo.SportName = ""Lacrosse""",False,Find the last and first name of students who are playing Football or Lacrosse.,2185,"SELECT T2.lname ,  T2.fname FROM SportsInfo AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID WHERE T1.SportName  =  ""Football"" OR T1.SportName  =  ""Lacrosse""",game_1,"['student', 'sportsinfo', 'plays_games']"
"SELECT Student.Fname, Student.LName FROM Student JOIN Plays_Games ON Student.StuID = Plays_Games.StuID JOIN SportsInfo ON Plays_Games.GameID = SportsInfo.StuID WHERE SportsInfo.SportName = ""Football"" OR SportsInfo.SportName = ""Lacrosse""",False,What is the first and last name of all students who play Football or Lacrosse?,2186,"SELECT T2.lname ,  T2.fname FROM SportsInfo AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID WHERE T1.SportName  =  ""Football"" OR T1.SportName  =  ""Lacrosse""",game_1,"['student', 'sportsinfo', 'plays_games']"
SELECT Services.service_name FROM Services WHERE Services.service_id NOT IN (SELECT Services.service_name FROM Services),False,Find name of the services that has never been used.,2189,SELECT service_name FROM services EXCEPT SELECT t1.service_name FROM services AS t1 JOIN party_services AS t2 ON t1.service_id  =  t2.service_id,e_government,"['party_services', 'services']"
SELECT Services.service_name FROM Services WHERE Services.service_id NOT IN (SELECT Services.service_name FROM Services),False,What are the names of the services that have never been used?,2190,SELECT service_name FROM services EXCEPT SELECT t1.service_name FROM services AS t1 JOIN party_services AS t2 ON t1.service_id  =  t2.service_id,e_government,"['party_services', 'services']"
"SELECT Addresses.town_city, Addresses.state_province_county FROM Addresses",False,Find the name of all the cities and states.,2191,SELECT town_city FROM addresses UNION SELECT state_province_county FROM addresses,e_government,['addresses']
"SELECT Addresses.town_city FROM Addresses WHERE Addresses.town_city = ""VALUE states""",False,What are the names of all cities and states?,2192,SELECT town_city FROM addresses UNION SELECT state_province_county FROM addresses,e_government,['addresses']
"SELECT Documents.Document_ID FROM Documents WHERE Documents.Document_ID NOT IN (SELECT Documents_with_Expenses.Document_ID FROM Documents_with_Expenses WHERE Documents_with_Expenses.Budget_Type_Code = ""CV"")",False,Show ids for all documents in type CV without expense budgets.,2205,"SELECT document_id FROM Documents WHERE document_type_code  =  ""CV"" EXCEPT SELECT document_id FROM Documents_with_expenses",cre_Docs_and_Epenses,"['documents_with_expenses', 'documents']"
"SELECT Documents.Document_ID FROM Documents WHERE Documents.Document_Type_Code != ""CV""",False,What are the ids of documents with the type code CV that do not have expenses.,2206,"SELECT document_id FROM Documents WHERE document_type_code  =  ""CV"" EXCEPT SELECT document_id FROM Documents_with_expenses",cre_Docs_and_Epenses,"['documents_with_expenses', 'documents']"
"SELECT Documents_with_Expenses.Document_ID FROM Documents JOIN Documents_with_Expenses ON Documents.Document_ID = Documents_with_Expenses.Document_ID WHERE Documents.Document_Name LIKE ""% s %""",False,What are the ids of documents with letter 's' in the name with any expense budgets.,2207,SELECT T1.document_id FROM Documents AS T1 JOIN Documents_with_expenses AS T2 ON T1.document_id  =  T2.document_id WHERE T1.document_name LIKE '%s%',cre_Docs_and_Epenses,"['documents_with_expenses', 'documents']"
"SELECT Documents_with_Expenses.Document_ID FROM Documents_with_Expenses WHERE Documents_with_Expenses.Document_ID LIKE ""% s %""",False,Give the ids of documents that have expenses and contain the letter s in their names.,2208,SELECT T1.document_id FROM Documents AS T1 JOIN Documents_with_expenses AS T2 ON T1.document_id  =  T2.document_id WHERE T1.document_name LIKE '%s%',cre_Docs_and_Epenses,"['documents_with_expenses', 'documents']"
"SELECT Accounts.Account_Details FROM Accounts WHERE Accounts.Account_Details LIKE ""% 5 %""",False,What are the account details with the largest value or with value having char '5' in it?,2209,"SELECT max(Account_details) FROM Accounts UNION SELECT Account_details FROM Accounts WHERE Account_details LIKE ""%5%""",cre_Docs_and_Epenses,['accounts']
"SELECT Accounts.Account_Details, ""the"" FROM Accounts WHERE Accounts.Account_Details LIKE MOD(""5 order by count (*) desc limit %"", 5)",False,"Return the account details with the greatest value, as well as those that include the character 5.",2210,"SELECT max(Account_details) FROM Accounts UNION SELECT Account_details FROM Accounts WHERE Account_details LIKE ""%5%""",cre_Docs_and_Epenses,['accounts']
"SELECT Lessons.lesson_id, Lessons.staff_id FROM Staff JOIN Lessons ON Staff.staff_id = Lessons.staff_id WHERE Staff.first_name = ""Janessa"" AND Staff.last_name = ""Sawayn""",False,"List lesson id of all lessons taught by staff with first name as Janessa, last name as Sawayn and nickname containing letter 's'.",2217,"SELECT T1.lesson_id FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = ""Janessa"" AND T2.last_name = ""Sawayn"" AND nickname LIKE ""%s%"";",driving_school,"['staff', 'lessons']"
"SELECT Staff.staff_id FROM Staff JOIN Lessons ON Staff.staff_id = Lessons.staff_id WHERE Staff.first_name = ""Janessa"" AND Staff.last_name LIKE ""s""",False,What are the the lesson ids of all staff taught by Janessa Sawayn whose nickname has the letter s?,2218,"SELECT T1.lesson_id FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = ""Janessa"" AND T2.last_name = ""Sawayn"" AND nickname LIKE ""%s%"";",driving_school,"['staff', 'lessons']"
"SELECT COUNT(*) FROM Staff JOIN Lessons ON Staff.staff_id = Lessons.staff_id WHERE Staff.first_name LIKE ""% a %""",False,How many lessons taught by staff whose first name has letter 'a' in it?,2219,"SELECT count(*) FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name LIKE ""%a%""",driving_school,"['staff', 'lessons']"
"SELECT COUNT(*) FROM Staff JOIN Lessons ON Staff.staff_id = Lessons.staff_id WHERE Staff.first_name LIKE ""% a %""",False,How many lessons were taught by a staff member whose first name has the letter 'a' in it?,2220,"SELECT count(*) FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name LIKE ""%a%""",driving_school,"['staff', 'lessons']"
SELECT Customers.last_name FROM Customers UNION SELECT Staff.last_name FROM Staff,False,What are the last names that are used by customers and staff?,2222,SELECT last_name FROM Customers INTERSECT SELECT last_name FROM Staff,driving_school,"['staff', 'customers']"
SELECT Staff.first_name FROM Staff WHERE Staff.staff_id NOT IN (SELECT Lessons.staff_id FROM Lessons),False,What is the first name of the staff who did not give any lesson?,2223,SELECT first_name FROM Staff EXCEPT SELECT T2.first_name FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id  =  T2.staff_id,driving_school,"['staff', 'lessons']"
SELECT Staff.first_name FROM Staff WHERE Staff.staff_id NOT IN (SELECT Lessons.staff_id FROM Lessons),False,What is the first name of all employees who do not give any lessons?,2224,SELECT first_name FROM Staff EXCEPT SELECT T2.first_name FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id  =  T2.staff_id,driving_school,"['staff', 'lessons']"
"SELECT COUNT(*) FROM airports WHERE airports.country = ""United States"" ORDER BY COUNT(*) DESC",False,How many airports are there per city in the United States? Order the cities by decreasing number of airports.,2227,"SELECT count(*) ,  city FROM airports WHERE country  =  'United States' GROUP BY city ORDER BY count(*) DESC",flight_4,['airports']
"SELECT COUNT(*) FROM airports WHERE airports.city = ""VALUE VALUE""",False,How many airports are there per city in the US ordered from most to least?,2228,"SELECT count(*) ,  city FROM airports WHERE country  =  'United States' GROUP BY city ORDER BY count(*) DESC",flight_4,['airports']
"SELECT routes.src_ap, COUNT(*) FROM routes JOIN airports ON routes.src_apid = airports.apid GROUP BY routes.src_ap ORDER BY COUNT(*) DESC",False,"Find the number of routes and airport name for each source airport, order the results by decreasing number of routes.",2229,"SELECT count(*) ,  T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.src_apid GROUP BY T1.name ORDER BY count(*) DESC",flight_4,"['routes', 'airports']"
"SELECT airports.name, COUNT(*) FROM routes JOIN airports ON routes.src_apid = airports.apid GROUP BY routes.src_apid ORDER BY COUNT(*) ASC",False,"For each  airport name, how many routes start at that airport, ordered from most to least?",2230,"SELECT count(*) ,  T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.src_apid GROUP BY T1.name ORDER BY count(*) DESC",flight_4,"['routes', 'airports']"
"SELECT COUNT(*) FROM airlines JOIN routes ON routes.dst_apid = airlines.alid WHERE airlines.name = ""American Airlines"" AND routes.airline = ""Italy""",False,Return the number of routes with destination airport in Italy operated by the airline with name 'American Airlines'.,2231,SELECT count(*) FROM routes AS T1 JOIN airports AS T2 ON T1.dst_apid  =  T2.apid JOIN airlines AS T3 ON T1.alid  =  T3.alid WHERE T2.country  =  'Italy' AND T3.name  =  'American Airlines',flight_4,"['airlines', 'routes', 'airports']"
"SELECT COUNT(*) FROM airlines JOIN routes ON routes.dst_apid = airlines.alid WHERE airlines.name = ""American Airlines"" AND routes.airline = ""Italy""",False,What is the number of routes operated by the airline American Airlines whose destinations are in Italy?,2232,SELECT count(*) FROM routes AS T1 JOIN airports AS T2 ON T1.dst_apid  =  T2.apid JOIN airlines AS T3 ON T1.alid  =  T3.alid WHERE T2.country  =  'Italy' AND T3.name  =  'American Airlines',flight_4,"['airlines', 'routes', 'airports']"
SELECT Orders.order_id FROM Orders ORDER BY Orders.date_order_placed DESC LIMIT 1,False,Find the id of the order which is shipped most recently.,2237,SELECT order_id FROM shipments WHERE shipment_date  =  (SELECT max(shipment_date) FROM shipments),tracking_orders,"['shipments', 'orders']"
SELECT singer.Country FROM singer WHERE singer.Age > 40 INTERSECT SELECT singer.Country FROM singer WHERE singer.Age > 30,False,Show countries where a singer above age 40 and a singer below 30 are from.,2245,SELECT country FROM singer WHERE age  >  40 INTERSECT SELECT country FROM singer WHERE age  <  30,concert_singer,['singer']
SELECT * FROM stadium,False,List all singer names in concerts in year 2014.,2248,SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014,concert_singer,"['singer_in_concert', 'concert', 'stadium', 'singer']"
SELECT COUNT(*) FROM stadium JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID ORDER BY stadium.Capacity DESC LIMIT 1,False,Find the number of concerts happened in the stadium with the highest capacity .,2250,select count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1),concert_singer,"['concert', 'stadium']"
SELECT COUNT(*) FROM stadium JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID ORDER BY stadium.Capacity DESC LIMIT 1,False,What are the number of concerts that occurred in the stadium with the largest capacity ?,2251,select count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1),concert_singer,"['concert', 'stadium']"
SELECT car_names.Model FROM car_names GROUP BY car_names.Model ORDER BY COUNT(*) ASC LIMIT 1,False,Which model of the car has the minimum horsepower?,2252,SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;,car_1,"['car_names', 'cars_data']"
SELECT model_list.Model FROM model_list JOIN cars_data ON cars_data.Id = model_list.Maker ORDER BY cars_data.Horsepower ASC LIMIT 1,False,What is the model of the car with the smallest amount of horsepower?,2253,SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;,car_1,"['car_names', 'cars_data', 'model_list']"
SELECT DISTINCT car_names.Model FROM car_names WHERE car_names.Model > 1980,False,Which distinct car models are the produced after 1980?,2254,SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;,car_1,"['car_names', 'cars_data', 'model_list']"
SELECT DISTINCT model_list.Model FROM model_list WHERE model_list.Model > 1980,False,What are the different models for the cards produced after 1980?,2255,SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;,car_1,"['car_names', 'cars_data', 'model_list']"
"SELECT continents.Continent, COUNT(*) FROM continents JOIN car_makers ON continents.ContId = car_makers.Country GROUP BY continents.Continent",False,How many car makers are there in each continents? List the continent name and the count.,2256,"SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;",car_1,"['continents', 'countries', 'car_makers']"
"SELECT continents.Continent, COUNT(*) FROM continents JOIN car_makers ON continents.ContId = car_makers.Country GROUP BY continents.Continent",False,What is the name of each continent and how many car makers are there in each one?,2257,"SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;",car_1,"['continents', 'countries', 'car_makers']"
"SELECT COUNT(*) FROM countries WHERE countries.CountryName = ""usa""",False,How many car models are produced in the usa?,2258,SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa';,car_1,"['countries', 'car_makers', 'model_list']"
"SELECT COUNT(*) FROM countries JOIN model_list ON countries.CountryId = model_list.Model WHERE countries.CountryName = ""VALUE""",False,What is the count of the car models produced in the United States?,2259,SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa';,car_1,"['countries', 'car_makers', 'model_list']"
SELECT cars_data.Horsepower FROM cars_data WHERE cars_data.Horsepower = (SELECT MAX(cars_data.Horsepower) FROM cars_data),False,"Which model saves the most gasoline? That is to say, have the maximum miles per gallon.",2260,SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.mpg DESC LIMIT 1;,car_1,"['car_names', 'cars_data']"
SELECT cars_data.Horsepower FROM cars_data ORDER BY cars_data.MPG DESC LIMIT 1,False,What is the car model with the highest mpg ?,2261,select t1.model from car_names as t1 join cars_data as t2 on t1.makeid  =  t2.id order by t2.mpg desc limit 1;,car_1,"['car_names', 'cars_data']"
SELECT model_list.Model FROM model_list GROUP BY model_list.Model ORDER BY COUNT(*) DESC LIMIT 1,False,What model has the most different versions?,2263,SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;,car_1,"['car_names', 'model_list']"
SELECT COUNT(*) FROM cars_data WHERE cars_data.Horsepower > (SELECT MAX(cars_data.Accelerate) FROM cars_data) ORDER BY cars_data.Accelerate DESC LIMIT 1,False,How many cars have a larger accelerate than the car with the largest horsepower?,2264,SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );,car_1,['cars_data']
SELECT COUNT(*) FROM cars_data WHERE cars_data.Horsepower > (SELECT MAX(cars_data.Horsepower) FROM cars_data) ORDER BY SUM(cars_data.Horsepower) DESC LIMIT 1,False,What is the number of cars with a greater accelerate than the one with the most horsepower?,2265,SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );,car_1,['cars_data']
SELECT countries.CountryName FROM countries WHERE countries.CountryId NOT IN (SELECT car_makers.Country FROM car_makers),False,What are the name of the countries where there is not a single car maker?,2266,SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;,car_1,"['countries', 'car_makers']"
SELECT countries.CountryName FROM countries WHERE countries.CountryId NOT IN (SELECT car_makers.Country FROM car_makers),False,What are the names of the countries with no car makers?,2267,SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;,car_1,"['countries', 'car_makers']"
SELECT employee.Name FROM evaluation JOIN employee ON evaluation.Employee_ID = employee.Employee_ID GROUP BY evaluation.Employee_ID ORDER BY SUM(evaluation.Bonus) DESC LIMIT 1,False,Find the name of the employee who got the highest one time bonus.,2270,SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1,employee_hire_evaluation,"['employee', 'evaluation']"
"SELECT DISTINCT Cartoon.Title FROM Cartoon EXCEPT SELECT Cartoon.Title FROM Cartoon WHERE Cartoon.Written_by = ""Todd Casey""",False,What are the countries that are not playing cartoons written by Todd Casey?,2283,SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey',tvshow,"['cartoon', 'tv_channel']"
"SELECT TV_Channel.id FROM TV_Channel EXCEPT SELECT Cartoon.id FROM Cartoon WHERE Cartoon.Directed_by = ""Ben Jones""",False,What are the ids of the TV channels that do not have any cartoons directed by Ben Jones?,2285,SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones',tvshow,"['cartoon', 'tv_channel']"
"SELECT TV_Channel.Package_Option FROM TV_Channel EXCEPT SELECT TV_Channel.Package_Option FROM TV_Channel JOIN Cartoon ON TV_Channel.id = Cartoon.Channel WHERE Cartoon.Directed_by = ""Ben Jones""",False,find the package option of the tv channel that do not have any cartoon directed by Ben Jones.,2286,SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones'),tvshow,"['cartoon', 'tv_channel']"
"SELECT TV_Channel.Package_Option FROM TV_Channel EXCEPT SELECT TV_Channel.Package_Option FROM TV_Channel JOIN Cartoon ON TV_Channel.id = Cartoon.Channel WHERE Cartoon.Directed_by = ""Ben Jones""",False,What are the package options of all tv channels that are not playing any cartoons directed by Ben Jones?,2287,SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones'),tvshow,"['cartoon', 'tv_channel']"
